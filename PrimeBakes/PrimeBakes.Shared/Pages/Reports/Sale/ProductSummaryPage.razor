@page "/Reports/Sale/ProductSummary"

@using PrimeBakesLibrary.Models.Product
@using PrimeBakesLibrary.Models.Common
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using ChartLabelPosition = Syncfusion.Blazor.Charts.LabelPosition
@using PrimeBakes.Shared.Services

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />

<PageTitle>Product Summary Report - PrimeBakes</PageTitle>

@if (_isLoading)
{
    <div class="loading-overlay">
        <div class="loading-content">
            <div class="circular-dots-loader">
                <span class="dot dot-1"></span>
                <span class="dot dot-2"></span>
                <span class="dot dot-3"></span>
            </div>
            <p class="loading-text">Loading Product Summary...</p>
        </div>
    </div>
}
else
{
    <div class="product-summary-container">
        <!-- Header Section -->
        <div class="page-header">
            <div class="header-content">
                <div class="header-title">
                    <div class="title-icon">
                        <i class="fas fa-box-open"></i>
                    </div>
                    <div class="title-info">
                        <h1>Product Summary Report</h1>
                        <p>Comprehensive product analytics and sales performance insights</p>
                        @if (_user?.LocationId != 1)
                        {
                            <div class="location-badge">
                                <i class="fas fa-map-marker-alt"></i>
                                @(_locations.FirstOrDefault(l => l.Id == _user.LocationId)?.Name ?? "Current Location")
                            </div>
                        }
                    </div>
                </div>
                
                <div class="header-actions">
                    <button @onclick='() => NavigationManager.NavigateTo("/Reports-Dashboard")' class="dashboard-btn">
                        <i class="fas fa-tachometer-alt"></i>
                        <span>Back to Dashboard</span>
                    </button>
                </div>
            </div>
        </div>

        <!-- Filter Section -->
        <div class="filter-section">
            <div class="filter-card">
                <div class="filter-header">
                    <h3><i class="fas fa-filter"></i> Filters</h3>
                </div>
                <div class="filter-content">
                    <div class="filter-group">
                        <label>Date Range</label>
                        <SfDateRangePicker @bind-StartDate="_startDate" 
                                         @bind-EndDate="_endDate" 
                                         Placeholder="Select date range"
                                         Format="dd/MM/yyyy"
                                         CssClass="date-picker">
                            <DateRangePickerEvents TValue="DateOnly" ValueChange="OnDateRangeChanged" />
                        </SfDateRangePicker>
                    </div>

                    <div class="filter-group">
                        <label>Product Category</label>
                        <SfDropDownList @bind-Value="_selectedCategoryId" 
                                      DataSource="_productCategories" 
                                      TValue="int" 
                                      TItem="ProductCategoryModel"
                                      Placeholder="All Categories"
                                      CssClass="category-dropdown">
                            <DropDownListFieldSettings Value="Id" Text="Name" />
                            <DropDownListEvents TValue="int" TItem="ProductCategoryModel" ValueChange="OnCategoryChanged" />
                        </SfDropDownList>
                    </div>

                    <div class="filter-actions">
                        <button @onclick="LoadData" class="apply-btn">
                            <i class="fas fa-sync-alt"></i>
                            <span>Refresh Data</span>
                        </button>
                        
                        <button @onclick="ToggleCharts" class="charts-btn @(_showCharts ? "active" : "")">
                            <i class="fas @(_showCharts ? "fa-chart-line" : "fa-chart-bar")"></i>
                            <span>@(_showCharts ? "Hide Charts" : "Show Charts")</span>
                        </button>
                        
                        <button @onclick="ExportToExcel" class="export-btn">
                            <i class="fas fa-file-excel"></i>
                            <span>Export Excel</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Summary Overview -->
        <div class="summary-section">
            <div class="summary-header">
                <h2><i class="fas fa-chart-pie"></i> Product Overview</h2>
                <div class="period-info">
                    @_startDate.ToString("dd MMM yyyy") - @_endDate.ToString("dd MMM yyyy")
                </div>
            </div>
            
            <div class="summary-cards">
                <!-- Total Product Sales Card -->
                <div class="summary-card highlight-card">
                    <div class="card-icon">
                        <i class="fas fa-rupee-sign"></i>
                    </div>
                    <div class="card-content">
                        <div class="card-value">₹@GetTotalProductSales().ToString("N2")</div>
                        <div class="card-label">Total Product Sales</div>
                        <div class="card-trend">
                            <i class="fas fa-arrow-up"></i>
                            <span>@_productOverviews.Count products sold</span>
                        </div>
                    </div>
                </div>
                
                <!-- Total Quantity Card -->
                <div class="summary-card">
                    <div class="card-icon">
                        <i class="fas fa-boxes"></i>
                    </div>
                    <div class="card-content">
                        <div class="card-value">@GetTotalQuantity().ToString("N0")</div>
                        <div class="card-label">Total Quantity Sold</div>
                        <div class="card-trend">
                            <i class="fas fa-shopping-cart"></i>
                            <span>Units</span>
                        </div>
                    </div>
                </div>
                
                <!-- Unique Products Card -->
                <div class="summary-card">
                    <div class="card-icon">
                        <i class="fas fa-cubes"></i>
                    </div>
                    <div class="card-content">
                        <div class="card-value">@GetUniqueProducts()</div>
                        <div class="card-label">Unique Products</div>
                        <div class="card-trend">
                            <i class="fas fa-tags"></i>
                            <span>Different items</span>
                        </div>
                    </div>
                </div>
                
                <!-- Average Product Value Card -->
                <div class="summary-card">
                    <div class="card-icon">
                        <i class="fas fa-calculator"></i>
                    </div>
                    <div class="card-content">
                        <div class="card-value">₹@GetAverageProductValue().ToString("N2")</div>
                        <div class="card-label">Average Product Value</div>
                        <div class="card-trend">
                            <i class="fas fa-chart-line"></i>
                            <span>Per unit</span>
                        </div>
                    </div>
                </div>
                
                <!-- Total Discount Card -->
                <div class="summary-card discount-card">
                    <div class="card-icon">
                        <i class="fas fa-percentage"></i>
                    </div>
                    <div class="card-content">
                        <div class="card-value">₹@GetTotalDiscount().ToString("N2")</div>
                        <div class="card-label">Total Discount</div>
                        <div class="card-trend">
                            <i class="fas fa-arrow-down"></i>
                            <span>@GetDiscountPercentage().ToString("N1")% of sales</span>
                        </div>
                    </div>
                </div>
                
                <!-- Total Tax Card -->
                <div class="summary-card tax-card">
                    <div class="card-icon">
                        <i class="fas fa-receipt"></i>
                    </div>
                    <div class="card-content">
                        <div class="card-value">₹@GetTotalTax().ToString("N2")</div>
                        <div class="card-label">Total Tax</div>
                        <div class="card-trend">
                            <i class="fas fa-plus"></i>
                            <span>@GetTaxPercentage().ToString("N1")% of sales</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Product Category Summary -->
        <div class="category-section">
            <div class="section-header">
                <h2><i class="fas fa-layer-group"></i> Category Performance</h2>
            </div>
            
            <div class="category-grid">
                @foreach (var category in GetCategorySummary())
                {
                    <div class="category-card">
                        <div class="category-header">
                            <div class="category-info">
                                <h4>@category.CategoryName</h4>
                                <span class="category-count">@category.ProductCount Products</span>
                            </div>
                            <div class="category-value">₹@category.TotalSales.ToString("N2")</div>
                        </div>
                        <div class="category-stats">
                            <div class="stat-item">
                                <span class="stat-label">Quantity:</span>
                                <span class="stat-value">@category.TotalQuantity.ToString("N0")</span>
                            </div>
                            <div class="stat-item">
                                <span class="stat-label">Avg Price:</span>
                                <span class="stat-value">₹@category.AveragePrice.ToString("N2")</span>
                            </div>
                            <div class="stat-item">
                                <span class="stat-label">Share:</span>
                                <span class="stat-value">@GetCategoryPercentage(category.TotalSales).ToString("N1")%</span>
                            </div>
                        </div>
                        <div class="category-progress">
                            <div class="progress-bar">
                                <div class="progress-fill" style="width: @GetCategoryPercentage(category.TotalSales).ToString("N1")%"></div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Top Products Section -->
        <div class="top-products-section">
            <div class="section-header">
                <h2><i class="fas fa-star"></i> Top Performing Products</h2>
            </div>
            
            <div class="top-products-grid">
                @foreach (var product in GetTopProducts().Take(10))
                {
                    <div class="product-card">
                        <div class="product-rank">@(GetTopProducts().ToList().IndexOf(product) + 1)</div>
                        <div class="product-info">
                            <h4>@product.ProductName</h4>
                            <span class="product-code">@product.ProductCode</span>
                        </div>
                        <div class="product-metrics">
                            <div class="metric">
                                <span class="metric-label">Sales:</span>
                                <span class="metric-value">₹@product.TotalSales.ToString("N2")</span>
                            </div>
                            <div class="metric">
                                <span class="metric-label">Qty:</span>
                                <span class="metric-value">@product.TotalQuantity.ToString("N0")</span>
                            </div>
                            <div class="metric">
                                <span class="metric-label">Avg:</span>
                                <span class="metric-value">₹@product.AveragePrice.ToString("N2")</span>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Charts Section -->
        @if (_showCharts)
        {
            <div class="charts-section">
                <div class="charts-grid">
                    <!-- Top Products Pie Chart -->
                    <div class="chart-card">
                        <div class="chart-header">
                            <h4>Top Products Distribution</h4>
                            <p>Sales share by top products</p>
                        </div>
                        <div class="chart-container">
                            <SfAccumulationChart EnableSmartLabels="true">
                                <AccumulationChartSeriesCollection>
                                    <AccumulationChartSeries DataSource="GetTopProductsChartData()" 
                                                           XName="ProductName" 
                                                           YName="Sales" 
                                                           Name="Product Sales"
                                                           InnerRadius="30%">
                                        <AccumulationDataLabelSettings Visible="true" 
                                                                     Name="ProductName" 
                                                                     Position="AccumulationLabelPosition.Outside" />
                                        <AccumulationChartAnimation Enable="true" />
                                    </AccumulationChartSeries>
                                </AccumulationChartSeriesCollection>
                                <AccumulationChartLegendSettings Visible="true" Position="LegendPosition.Right" />
                                <AccumulationChartTooltipSettings Enable="true" Format="${point.x}: ₹${point.y} (${point.percentage}%)" />
                            </SfAccumulationChart>
                        </div>
                    </div>
                    
                    <!-- Category Sales Column Chart -->
                    <div class="chart-card">
                        <div class="chart-header">
                            <h4>Category Sales Performance</h4>
                            <p>Sales comparison by category</p>
                        </div>
                        <div class="chart-container">
                            <SfChart>
                                <ChartArea>
                                    <ChartAreaBorder Width="0" />
                                </ChartArea>
                                <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
                                    <ChartAxisLabelStyle Color="#666" />
                                </ChartPrimaryXAxis>
                                <ChartPrimaryYAxis LabelFormat="₹{value}">
                                    <ChartAxisLabelStyle Color="#666" />
                                </ChartPrimaryYAxis>
                                <ChartSeriesCollection>
                                    <ChartSeries DataSource="GetCategorySalesChartData()" 
                                               XName="CategoryName" 
                                               YName="Sales" 
                                               Type="ChartSeriesType.Column"
                                               Name="Category Sales"
                                               Fill="#e2137b">
                                        <ChartMarker>
                                            <ChartDataLabel Visible="true" Position="ChartLabelPosition.Middle" />
                                        </ChartMarker>
                                    </ChartSeries>
                                </ChartSeriesCollection>
                                <ChartTooltipSettings Enable="true" Format="${point.x}: ₹${point.y}" />
                            </SfChart>
                        </div>
                    </div>
                    
                    <!-- Monthly Sales Trend -->
                    <div class="chart-card wide-chart">
                        <div class="chart-header">
                            <h4>Monthly Sales Trend</h4>
                            <p>Product sales performance over time</p>
                        </div>
                        <div class="chart-container">
                            <SfChart>
                                <ChartArea>
                                    <ChartAreaBorder Width="0" />
                                </ChartArea>
                                <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
                                    <ChartAxisLabelStyle Color="#666" />
                                </ChartPrimaryXAxis>
                                <ChartPrimaryYAxis LabelFormat="₹{value}">
                                    <ChartAxisLabelStyle Color="#666" />
                                </ChartPrimaryYAxis>
                                <ChartSeriesCollection>
                                    <ChartSeries DataSource="GetMonthlySalesChartData()" 
                                               XName="Month" 
                                               YName="Sales" 
                                               Type="ChartSeriesType.SplineArea"
                                               Name="Monthly Sales"
                                               Fill="#e2137b"
                                               Opacity="0.7">
                                        <ChartMarker Visible="true" Fill="#e2137b" />
                                    </ChartSeries>
                                </ChartSeriesCollection>
                                <ChartTooltipSettings Enable="true" Format="Month: ${point.x}<br/>Sales: ₹${point.y}" />
                            </SfChart>
                        </div>
                    </div>
                    
                    <!-- Quantity vs Revenue Scatter Chart -->
                    <div class="chart-card wide-chart">
                        <div class="chart-header">
                            <h4>Quantity vs Revenue Analysis</h4>
                            <p>Product performance correlation</p>
                        </div>
                        <div class="chart-container">
                            <SfChart>
                                <ChartArea>
                                    <ChartAreaBorder Width="0" />
                                </ChartArea>
                                <ChartPrimaryXAxis Title="Quantity Sold">
                                    <ChartAxisLabelStyle Color="#666" />
                                </ChartPrimaryXAxis>
                                <ChartPrimaryYAxis Title="Revenue (₹)" LabelFormat="₹{value}">
                                    <ChartAxisLabelStyle Color="#666" />
                                </ChartPrimaryYAxis>
                                <ChartSeriesCollection>
                                    <ChartSeries DataSource="GetQuantityRevenueChartData()" 
                                               XName="Quantity" 
                                               YName="Revenue" 
                                               Type="ChartSeriesType.Scatter"
                                               Name="Product Performance"
                                               Fill="#e2137b">
                                        <ChartMarker Visible="true" Height="8" Width="8" Fill="#e2137b" />
                                    </ChartSeries>
                                </ChartSeriesCollection>
                                <ChartTooltipSettings Enable="true" Format="Quantity: ${point.x}<br/>Revenue: ₹${point.y}" />
                            </SfChart>
                        </div>
                    </div>
                </div>
            </div>
        }
        else if (_showCharts && !_productOverviews.Any())
        {
            <div class="no-charts-message">
                <div class="no-charts-content">
                    <i class="fas fa-chart-pie"></i>
                    <h3>No Data for Charts</h3>
                    <p>Charts will appear when product data is available for the selected period.</p>
                </div>
            </div>
        }
    </div>
}

<style>
    :root {
        --primary-color: #e2137b;
        --primary-light: rgba(226, 19, 123, 0.1);
        --primary-dark: #c71068;
        --secondary-color: #f5c2d3;
        --accent-color: #ff6b9d;
        --success-color: #00c853;
        --warning-color: #ff9100;
        --danger-color: #ff1744;
        --dark-color: #2c2c54;
        --light-color: #fef7f9;
        --white: #ffffff;
        --gray-50: #f9fafb;
        --gray-100: #f3f4f6;
        --gray-200: #e5e7eb;
        --gray-300: #d1d5db;
        --gray-400: #9ca3af;
        --gray-500: #6b7280;
        --gray-600: #4b5563;
        --gray-700: #374151;
        --gray-800: #1f2937;
        --gray-900: #111827;
        --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        --border-radius: 8px;
        --border-radius-lg: 12px;
        --border-radius-xl: 16px;
        --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    /* Loading Styles */
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255, 255, 255, 0.95);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
    }

    .loading-content {
        text-align: center;
        padding: 40px;
        background: var(--white);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow-xl);
    }

    .circular-dots-loader {
        display: flex;
        justify-content: center;
        gap: 8px;
        margin-bottom: 20px;
    }

    .dot {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: var(--primary-color);
        animation: bounce 1.4s ease-in-out infinite both;
    }

    .dot-1 { animation-delay: -0.32s; }
    .dot-2 { animation-delay: -0.16s; }
    .dot-3 { animation-delay: 0s; }

    @@keyframes bounce {
        0%, 80%, 100% { transform: scale(0.8); opacity: 0.5; }
        40% { transform: scale(1.2); opacity: 1; }
    }

    .loading-text {
        color: var(--gray-600);
        font-size: 16px;
        margin: 0;
    }

    /* Main Container */
    .product-summary-container {
        min-height: 100vh;
        background: linear-gradient(135deg, var(--light-color) 0%, var(--gray-50) 100%);
        padding: 0;
    }

    /* Page Header */
    .page-header {
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
        color: var(--white);
        padding: 40px;
        box-shadow: var(--shadow-lg);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin: 0 auto;
    }

    .header-title {
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .title-icon {
        font-size: 48px;
        opacity: 0.9;
    }

    .title-info h1 {
        font-size: 32px;
        font-weight: 700;
        margin: 0;
        letter-spacing: -0.5px;
    }

    .title-info p {
        font-size: 16px;
        opacity: 0.9;
        margin: 5px 0 0 0;
        font-weight: 300;
    }

    .location-badge {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        background: rgba(255, 255, 255, 0.2);
        padding: 8px 16px;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 500;
        margin-top: 10px;
        color: rgba(255, 255, 255, 0.95);
    }

    .dashboard-btn {
        background: rgba(255, 255, 255, 0.1);
        border: 2px solid rgba(255, 255, 255, 0.2);
        color: var(--white);
        padding: 12px 24px;
        border-radius: var(--border-radius);
        cursor: pointer;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 8px;
        transition: var(--transition);
        backdrop-filter: blur(10px);
    }

    .dashboard-btn:hover {
        background: rgba(255, 255, 255, 0.2);
        border-color: rgba(255, 255, 255, 0.4);
        transform: translateY(-2px);
    }

    /* Filter Section */
    .filter-section {
        padding: 30px 40px;
        max-width: 1400px;
        margin: 0 auto;
    }

    .filter-card {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow);
        border: 1px solid var(--gray-200);
        overflow: hidden;
    }

    .filter-header {
        background: linear-gradient(135deg, var(--gray-50) 0%, var(--gray-100) 100%);
        padding: 20px 30px;
        border-bottom: 1px solid var(--gray-200);
    }

    .filter-header h3 {
        margin: 0;
        color: var(--dark-color);
        font-size: 18px;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .filter-content {
        padding: 30px;
        display: flex;
        flex-wrap: wrap;
        gap: 25px;
        align-items: end;
    }

    .filter-group {
        flex: 1;
        min-width: 200px;
    }

    .filter-group label {
        display: block;
        font-weight: 600;
        color: var(--dark-color);
        margin-bottom: 8px;
        font-size: 14px;
    }

    .filter-actions {
        display: flex;
        gap: 12px;
        margin-left: auto;
    }

    .apply-btn, .charts-btn, .export-btn {
        padding: 12px 20px;
        border-radius: var(--border-radius);
        font-weight: 600;
        cursor: pointer;
        border: none;
        display: flex;
        align-items: center;
        gap: 8px;
        transition: var(--transition);
        font-size: 14px;
    }

    .apply-btn {
        background: var(--primary-color);
        color: var(--white);
    }

    .apply-btn:hover {
        background: var(--primary-dark);
        transform: translateY(-2px);
    }

    .charts-btn {
        background: var(--gray-100);
        color: var(--gray-700);
        border: 2px solid var(--gray-200);
    }

    .charts-btn:hover, .charts-btn.active {
        background: var(--success-color);
        color: var(--white);
        border-color: var(--success-color);
    }

    .export-btn {
        background: var(--success-color);
        color: var(--white);
    }

    .export-btn:hover {
        background: #00a845;
        transform: translateY(-2px);
    }

    /* Summary Section */
    .summary-section {
        padding: 20px;
        margin: 0;
    }

    .summary-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
    }

    .summary-header h2 {
        margin: 0;
        color: var(--dark-color);
        font-size: 24px;
        font-weight: 700;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .period-info {
        background: var(--primary-light);
        color: var(--primary-color);
        padding: 8px 16px;
        border-radius: var(--border-radius);
        font-weight: 600;
        font-size: 14px;
    }

    .summary-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 25px;
    }

    .summary-card {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        padding: 25px;
        box-shadow: var(--shadow);
        border: 1px solid var(--gray-200);
        transition: var(--transition);
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .summary-card:hover {
        transform: translateY(-4px);
        box-shadow: var(--shadow-lg);
    }

    .summary-card.highlight-card {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        color: var(--white);
        border: none;
    }

    .summary-card.discount-card {
        background: linear-gradient(135deg, var(--success-color), #00a845);
        color: var(--white);
        border: none;
    }

    .summary-card.tax-card {
        background: linear-gradient(135deg, var(--warning-color), #e68900);
        color: var(--white);
        border: none;
    }

    .card-icon {
        font-size: 28px;
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        background: var(--primary-light);
        color: var(--primary-color);
        flex-shrink: 0;
    }

    .highlight-card .card-icon, .discount-card .card-icon, .tax-card .card-icon {
        background: rgba(255, 255, 255, 0.2);
        color: var(--white);
    }

    .card-content {
        flex: 1;
    }

    .card-value {
        font-size: 24px;
        font-weight: 700;
        color: var(--primary-color);
        line-height: 1;
        margin-bottom: 5px;
    }

    .highlight-card .card-value, .discount-card .card-value, .tax-card .card-value {
        color: var(--white);
    }

    .card-label {
        font-size: 14px;
        font-weight: 600;
        color: var(--gray-600);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 8px;
    }

    .highlight-card .card-label, .discount-card .card-label, .tax-card .card-label {
        color: rgba(255, 255, 255, 0.9);
    }

    .card-trend {
        display: flex;
        align-items: center;
        gap: 5px;
        font-size: 12px;
        color: var(--gray-500);
    }

    .highlight-card .card-trend, .discount-card .card-trend, .tax-card .card-trend {
        color: rgba(255, 255, 255, 0.8);
    }

    /* Category Section */
    .category-section {
        padding: 20px;
        margin: 0;
    }

    .section-header {
        margin-bottom: 30px;
    }

    .section-header h2 {
        margin: 0;
        color: var(--dark-color);
        font-size: 24px;
        font-weight: 700;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .category-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
        gap: 25px;
    }

    .category-card {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        padding: 25px;
        box-shadow: var(--shadow);
        border: 1px solid var(--gray-200);
        transition: var(--transition);
    }

    .category-card:hover {
        transform: translateY(-4px);
        box-shadow: var(--shadow-lg);
    }

    .category-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 20px;
    }

    .category-info h4 {
        margin: 0 0 5px 0;
        color: var(--dark-color);
        font-size: 18px;
        font-weight: 600;
    }

    .category-count {
        font-size: 12px;
        color: var(--gray-500);
        font-weight: 500;
    }

    .category-value {
        font-size: 20px;
        font-weight: 700;
        color: var(--primary-color);
    }

    .category-stats {
        display: flex;
        justify-content: space-between;
        margin-bottom: 15px;
    }

    .stat-item {
        text-align: center;
    }

    .stat-label {
        display: block;
        font-size: 11px;
        color: var(--gray-500);
        text-transform: uppercase;
        font-weight: 600;
        letter-spacing: 0.5px;
        margin-bottom: 3px;
    }

    .stat-value {
        font-size: 14px;
        font-weight: 600;
        color: var(--dark-color);
    }

    .category-progress {
        height: 4px;
        background: var(--gray-200);
        border-radius: 2px;
        overflow: hidden;
    }

    .progress-fill {
        height: 100%;
        background: linear-gradient(90deg, var(--primary-color), var(--primary-dark));
        border-radius: 2px;
        transition: width 1s ease;
    }

    /* Top Products Section */
    .top-products-section {
        padding: 20px;
        margin: 0;
    }

    .top-products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 15px;
        width: 100%;
        box-sizing: border-box;
    }

    .product-card {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        padding: 15px;
        box-shadow: var(--shadow);
        border: 1px solid var(--gray-200);
        transition: var(--transition);
        display: flex;
        align-items: center;
        gap: 12px;
        min-width: 0;
        overflow: hidden;
    }

    .product-card:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-lg);
    }

    .product-rank {
        font-size: 24px;
        font-weight: 700;
        color: var(--primary-color);
        background: var(--primary-light);
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
    }

    .product-info {
        flex: 1;
        min-width: 0;
        overflow: hidden;
    }

    .product-info h4 {
        margin: 0 0 5px 0;
        color: var(--dark-color);
        font-size: 14px;
        font-weight: 600;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .product-code {
        font-size: 12px;
        color: var(--gray-500);
        font-weight: 500;
    }

    .product-metrics {
        display: flex;
        gap: 10px;
        flex-shrink: 0;
        min-width: 0;
    }

    .metric {
        text-align: center;
        min-width: 0;
        flex: 1;
    }

    .metric-label {
        display: block;
        font-size: 10px;
        color: var(--gray-500);
        text-transform: uppercase;
        font-weight: 600;
        letter-spacing: 0.5px;
        margin-bottom: 2px;
    }

    .metric-value {
        font-size: 12px;
        font-weight: 600;
        color: var(--dark-color);
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    /* Charts Section */
    .charts-section {
        padding: 20px;
        margin: 0;
    }

    .charts-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 25px;
    }

    .chart-card {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        padding: 25px;
        box-shadow: var(--shadow);
        border: 1px solid var(--primary-light);
        transition: var(--transition);
    }

    .chart-card:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-lg);
    }

    .chart-card.wide-chart {
        grid-column: 1 / -1;
    }

    .chart-header {
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 2px solid var(--primary-light);
    }

    .chart-header h4 {
        margin: 0 0 5px 0;
        color: var(--dark-color);
        font-size: 18px;
        font-weight: 700;
    }

    .chart-header p {
        margin: 0;
        color: var(--gray-600);
        font-size: 14px;
    }

    .chart-container {
        height: 300px;
    }

    .no-charts-message {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        padding: 60px;
        text-align: center;
        box-shadow: var(--shadow);
        border: 2px dashed var(--primary-light);
    }

    .no-charts-content i {
        font-size: 64px;
        color: var(--primary-color);
        opacity: 0.6;
        margin-bottom: 25px;
    }

    .no-charts-content h3 {
        color: var(--dark-color);
        margin-bottom: 15px;
        font-size: 24px;
    }

    .no-charts-content p {
        color: var(--gray-600);
        margin: 0;
        font-size: 16px;
    }

    /* Large screens optimization */
    @@media (min-width: 1400px) {
        .top-products-grid {
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        }
    }

    /* Responsive Design */
    @@media (max-width: 1200px) {
        .header-content, .filter-section, .summary-section, .category-section, .top-products-section, .charts-section {
            padding: 15px;
        }

        .top-products-grid {
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        }
        
        .charts-grid {
            grid-template-columns: 1fr;
        }
        
        .chart-card.wide-chart {
            grid-column: 1;
        }
    }

    @@media (max-width: 768px) {
        .header-content {
            flex-direction: column;
            gap: 20px;
            text-align: center;
        }
        
        .title-icon {
            font-size: 36px;
        }
        
        .title-info h1 {
            font-size: 24px;
        }
        
        .filter-content {
            flex-direction: column;
            align-items: stretch;
        }
        
        .filter-actions {
            margin-left: 0;
            justify-content: stretch;
        }
        
        .apply-btn, .charts-btn, .export-btn {
            flex: 1;
        }
        
        .summary-cards {
            grid-template-columns: 1fr;
        }
        
        .category-grid, .top-products-grid {
            grid-template-columns: 1fr;
        }
        
        .product-metrics {
            flex-direction: row;
            gap: 5px;
            justify-content: space-between;
        }
        
        .metric {
            font-size: 11px;
        }
    }

    @@media (max-width: 480px) {
        .page-header {
            padding: 20px 15px;
        }
        
        .filter-section, .summary-section, .category-section, .top-products-section, .charts-section {
            padding-left: 15px;
            padding-right: 15px;
        }
        
        .summary-card {
            flex-direction: column;
            text-align: center;
            gap: 15px;
        }
        
        .card-content {
            text-align: center;
        }
        
        .category-header {
            flex-direction: column;
            gap: 10px;
            text-align: center;
        }
        
        .category-stats {
            justify-content: space-around;
        }
        
        .product-card {
            flex-direction: column;
            text-align: center;
            gap: 10px;
            padding: 12px;
        }
        
        .product-info h4 {
            font-size: 13px;
        }
        
        .product-metrics {
            flex-direction: row;
            justify-content: space-around;
            gap: 8px;
        }
        
        .metric-label {
            font-size: 9px;
        }
        
        .metric-value {
            font-size: 11px;
        }
    }
</style>