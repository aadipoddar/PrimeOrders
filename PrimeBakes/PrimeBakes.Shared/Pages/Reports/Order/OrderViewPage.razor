@page "/Reports/Order/View/{OrderId:int}"

@using PrimeBakesLibrary.Models.Order
@using PrimeBakesLibrary.Models.Product
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using PrimeBakes.Shared.Services
@using Microsoft.AspNetCore.Components

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />

<PageTitle>Order Details - @(_orderOverview?.OrderNo ?? "Loading...") - PrimeBakes</PageTitle>

@if (_isLoading)
{
    <div class="loading-overlay">
        <div class="loading-content">
            <div class="circular-dots-loader">
                <span class="dot dot-1"></span>
                <span class="dot dot-2"></span>
                <span class="dot dot-3"></span>
            </div>
            <p class="loading-text">Loading Order Details...</p>
        </div>
    </div>
}
else if (_orderOverview is null)
{
    <div class="error-container">
        <div class="error-content">
            <i class="fas fa-exclamation-triangle"></i>
            <h2>Order Not Found</h2>
            <p>The requested order could not be found or may have been deleted.</p>
            <button @onclick='() => NavigationManager.NavigateTo("/Reports/OrderHistory")' class="btn-back">
                <i class="fas fa-arrow-left"></i>
                Back to Order History
            </button>
        </div>
    </div>
}
else
{
    <div class="order-view-container">
        <!-- Header Section -->
        <div class="page-header">
            <div class="header-actions">
                <button @onclick='() => NavigationManager.NavigateTo("/Reports/OrderHistory")' class="back-btn">
                    <i class="fas fa-arrow-left"></i>
                    <span>Back to Order History</span>
                </button>
            </div>
            
            <div class="header-info">
                <div class="order-title">
                    <h1>Order Details</h1>
                    <div class="order-number">@_orderOverview.OrderNo</div>
                </div>
                <div class="order-status-header">
                    <div class="status-badge @(_orderOverview.SaleId.HasValue ? "status-completed" : "status-pending")">
                        <i class="@(_orderOverview.SaleId.HasValue ? "fas fa-check-circle" : "fas fa-clock")"></i>
                        @(_orderOverview.SaleId.HasValue ? "Completed" : "Pending")
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Information Cards -->
        <div class="order-info-section">
            <div class="section-header">
                <h2><i class="fas fa-info-circle"></i> Order Information</h2>
            </div>
            
            <div class="info-cards-grid">
                <!-- Basic Order Info -->
                <div class="info-card-group">
                    <h3>Basic Details</h3>
                    <div class="info-cards">
                        <div class="info-card">
                            <div class="info-icon"><i class="fas fa-hashtag"></i></div>
                            <div class="info-content">
                                <div class="info-label">Order Number</div>
                                <div class="info-value">@_orderOverview.OrderNo</div>
                            </div>
                        </div>
                        
                        <div class="info-card">
                            <div class="info-icon"><i class="fas fa-calendar-alt"></i></div>
                            <div class="info-content">
                                <div class="info-label">Order Date & Time</div>
                                <div class="info-value">@_orderOverview.OrderDateTime.ToString("dddd, dd MMMM yyyy")</div>
                                <div class="info-subtext">@_orderOverview.OrderDateTime.ToString("hh:mm tt")</div>
                            </div>
                        </div>
                        
                        <div class="info-card">
                            <div class="info-icon"><i class="fas fa-store"></i></div>
                            <div class="info-content">
                                <div class="info-label">Location</div>
                                <div class="info-value">@_orderOverview.LocationName</div>
                            </div>
                        </div>
                        
                        <div class="info-card">
                            <div class="info-icon"><i class="fas fa-user"></i></div>
                            <div class="info-content">
                                <div class="info-label">Created By</div>
                                <div class="info-value">@_orderOverview.UserName</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Order Statistics -->
                <div class="info-card-group">
                    <h3>Order Statistics</h3>
                    <div class="info-cards">
                        <div class="info-card stat-card">
                            <div class="info-icon"><i class="fas fa-box"></i></div>
                            <div class="info-content">
                                <div class="info-label">Total Products</div>
                                <div class="info-value stat-number">@_orderOverview.TotalProducts</div>
                            </div>
                        </div>
                        
                        <div class="info-card stat-card">
                            <div class="info-icon"><i class="fas fa-balance-scale"></i></div>
                            <div class="info-content">
                                <div class="info-label">Total Quantity</div>
                                <div class="info-value stat-number">@_orderOverview.TotalQuantity.ToString("N2")</div>
                            </div>
                        </div>
                        
                        <div class="info-card stat-card">
                            <div class="info-icon"><i class="fas fa-rupee-sign"></i></div>
                            <div class="info-content">
                                <div class="info-label">Order Value</div>
                                <div class="info-value stat-number">â‚¹@_detailedOrderProducts.Sum(p => p.Total).ToString("N2")</div>
                            </div>
                        </div>
                        
                        <div class="info-card stat-card">
                            <div class="info-icon"><i class="fas fa-clock"></i></div>
                            <div class="info-content">
                                <div class="info-label">Created At</div>
                                <div class="info-value">@_orderOverview.CreatedAt.ToString("dd/MM/yyyy")</div>
                                <div class="info-subtext">@_orderOverview.CreatedAt.ToString("hh:mm tt")</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Sale Information (if completed) -->
                @if (_orderOverview.SaleId.HasValue)
                {
                    <div class="info-card-group">
                        <h3>Sale Information</h3>
                        <div class="info-cards">
                            <div class="info-card sale-card">
                                <div class="info-icon"><i class="fas fa-receipt"></i></div>
                                <div class="info-content">
                                    <div class="info-label">Sale Bill Number</div>
                                    <div class="info-value">@_orderOverview.SaleBillNo</div>
                                </div>
                            </div>
                            
                            <div class="info-card sale-card">
                                <div class="info-icon"><i class="fas fa-calendar-check"></i></div>
                                <div class="info-content">
                                    <div class="info-label">Sale Date & Time</div>
                                    <div class="info-value">@_orderOverview.SaleDateTime?.ToString("dd/MM/yyyy")</div>
                                    <div class="info-subtext">@_orderOverview.SaleDateTime?.ToString("hh:mm tt")</div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <!-- Remarks (if any) -->
                @if (!string.IsNullOrEmpty(_orderOverview.Remarks))
                {
                    <div class="info-card-group full-width">
                        <h3>Additional Information</h3>
                        <div class="remarks-card">
                            <div class="remarks-header">
                                <i class="fas fa-sticky-note"></i>
                                <span>Remarks</span>
                            </div>
                            <div class="remarks-content">@_orderOverview.Remarks</div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Order Products Section -->
        <div class="products-section">
            <div class="section-header">
                <h2><i class="fas fa-boxes"></i> Order Products (@_detailedOrderProducts.Count)</h2>
            </div>
            
            <!-- Products Summary -->
            <div class="products-summary">
                <div class="summary-card">
                    <div class="summary-icon"><i class="fas fa-cube"></i></div>
                    <div class="summary-content">
                        <div class="summary-value">@_detailedOrderProducts.Count</div>
                        <div class="summary-label">Unique Products</div>
                    </div>
                </div>
                
                <div class="summary-card">
                    <div class="summary-icon"><i class="fas fa-weight"></i></div>
                    <div class="summary-content">
                        <div class="summary-value">@_detailedOrderProducts.Sum(p => p.Quantity).ToString("N0")</div>
                        <div class="summary-label">Total Quantity</div>
                    </div>
                </div>
                
                <div class="summary-card">
                    <div class="summary-icon"><i class="fas fa-tags"></i></div>
                    <div class="summary-content">
                        <div class="summary-value">@_detailedOrderProducts.Select(p => p.CategoryName).Distinct().Count()</div>
                        <div class="summary-label">Categories</div>
                    </div>
                </div>
                
                <div class="summary-card highlight">
                    <div class="summary-icon"><i class="fas fa-calculator"></i></div>
                    <div class="summary-content">
                        <div class="summary-value">â‚¹@_detailedOrderProducts.Sum(p => p.Total).ToString("N2")</div>
                        <div class="summary-label">Total Value</div>
                    </div>
                </div>
            </div>
            
            <!-- Products Grid -->
            <div class="products-grid-section">
                <SfGrid DataSource="_detailedOrderProducts"
                        AllowPaging="true"
                        AllowSorting="true"
                        AllowFiltering="true"
                        AllowResizing="true"
                        AllowExcelExport="true"
                        CssClass="products-grid">
                    <GridPageSettings PageSize="10" PageSizes="@(new int[] { 5, 10, 15, 25, 50 })" />
                    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu" />
                    <GridColumns>
                        <GridColumn Field="@nameof(DetailedOrderProductModel.ProductCode)" 
                                   HeaderText="Code" 
                                   Width="100" 
                                   TextAlign="TextAlign.Center" />
                        
                        <GridColumn Field="@nameof(DetailedOrderProductModel.ProductName)" 
                                   HeaderText="Product Name" 
                                   Width="250">
                            <Template>
                                @{
                                    var product = (context as DetailedOrderProductModel);
                                    <div class="product-name-display">
                                        <i class="fas fa-cube product-icon"></i>
                                        <span class="product-name">@product.ProductName</span>
                                    </div>
                                }
                            </Template>
                        </GridColumn>
                        
                        <GridColumn Field="@nameof(DetailedOrderProductModel.CategoryName)" 
                                   HeaderText="Category" 
                                   Width="150">
                            <Template>
                                @{
                                    var product = (context as DetailedOrderProductModel);
                                    <span class="category-badge">@product.CategoryName</span>
                                }
                            </Template>
                        </GridColumn>
                        
                        <GridColumn Field="@nameof(DetailedOrderProductModel.Quantity)" 
                                   HeaderText="Quantity" 
                                   Width="100" 
                                   TextAlign="TextAlign.Right"
                                   Format="N2" />
                        
                        <GridColumn Field="@nameof(DetailedOrderProductModel.Rate)" 
                                   HeaderText="Rate (â‚¹)" 
                                   Width="120" 
                                   TextAlign="TextAlign.Right"
                                   Format="N2" />
                        
                        <GridColumn Field="@nameof(DetailedOrderProductModel.Total)" 
                                   HeaderText="Total (â‚¹)" 
                                   Width="130" 
                                   TextAlign="TextAlign.Right"
                                   Format="N2">
                            <Template>
                                @{
                                    var product = (context as DetailedOrderProductModel);
                                    <span class="total-amount">â‚¹@product.Total.ToString("N2")</span>
                                }
                            </Template>
                        </GridColumn>
                    </GridColumns>
                </SfGrid>
            </div>
        </div>

        <!-- Action Buttons Section -->
        <div class="actions-section">
            <div class="actions-header">
                <h2><i class="fas fa-tools"></i> Actions</h2>
            </div>
            
            <div class="action-buttons">
                @if (_user.LocationId == 1 && _user.Admin)
                {
                    <button class="action-btn btn-edit" @onclick="EditOrder" disabled="@(_isProcessing || _orderOverview.SaleId.HasValue)">
                        <i class="fas fa-edit"></i>
                        <span>Edit Order</span>
                    </button>
                    
                    <button class="action-btn btn-delete" @onclick="DeleteOrder" disabled="@(_isProcessing || _orderOverview.SaleId.HasValue)">
                        <i class="fas fa-trash-alt"></i>
                        <span>Delete Order</span>
                    </button>
                }
                
                <button class="action-btn btn-challan" @onclick="ExportChallan" disabled="@_isProcessing">
                    <i class="fas fa-file-export"></i>
                    <span>Export Challan</span>
                </button>
                
                <button class="action-btn btn-pdf" @onclick="PrintPDF" disabled="@_isProcessing">
                    <i class="fas fa-print"></i>
                    <span>Print PDF</span>
                </button>
            </div>
            
            @if (_orderOverview.SaleId.HasValue)
            {
                <div class="completion-notice">
                    <i class="fas fa-info-circle"></i>
                    <span>This order has been completed and cannot be edited or deleted.</span>
                </div>
            }
        </div>
    </div>
}

<!-- Delete Confirmation Dialog -->
<SfDialog @ref="_deleteConfirmDialog" 
          @bind-Visible="_showDeleteConfirm"
          Width="500px"
          Height="auto"
          IsModal="true"
          AllowDragging="false"
          CssClass="delete-confirm-dialog">
    <DialogTemplates>
        <Header>
            <div class="dialog-header">
                <i class="fas fa-exclamation-triangle warning-icon"></i>
                <span>Confirm Delete Order</span>
            </div>
        </Header>
        <Content>
            <div class="dialog-content">
                <div class="warning-message">
                    <p><strong>Are you sure you want to delete this order?</strong></p>
                    <p>Order: <span class="order-highlight">@(_orderOverview?.OrderNo)</span></p>
                    <div class="warning-notice">
                        <i class="fas fa-info-circle"></i>
                        <span>This action cannot be reversed. The order will be permanently removed.</span>
                    </div>
                </div>
            </div>
        </Content>
        <FooterTemplate>
            <div class="dialog-footer">
                <button class="dialog-btn btn-cancel" @onclick="CancelDeleteOrder" disabled="@_isProcessing">
                    <i class="fas fa-times"></i>
                    Cancel
                </button>
                <button class="dialog-btn btn-confirm" @onclick="ConfirmDeleteOrder" disabled="@_isProcessing">
                    @if (_isProcessing)
                    {
                        <i class="fas fa-spinner fa-spin"></i>
                        <span>Deleting...</span>
                    }
                    else
                    {
                        <i class="fas fa-trash-alt"></i>
                        <span>Delete Order</span>
                    }
                </button>
            </div>
        </FooterTemplate>
    </DialogTemplates>
</SfDialog>

<style>
    :root {
        --primary-color: #28a745;
        --primary-light: rgba(40, 167, 69, 0.1);
        --secondary-color: #6c757d;
        --success-color: #28a745;
        --info-color: #17a2b8;
        --warning-color: #ffc107;
        --danger-color: #dc3545;
        --dark-color: #343a40;
        --light-color: #f8f9fa;
        --white: #ffffff;
        --shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        --shadow-lg: 0 4px 12px rgba(0, 0, 0, 0.15);
        --border-radius: 0.375rem;
        --border-radius-lg: 0.5rem;
        --transition: all 0.3s ease;
    }

    .order-view-container {
        padding: 20px;
        background: 
            radial-gradient(circle at 20% 20%, rgba(40, 167, 69, 0.05) 0%, transparent 50%),
            radial-gradient(circle at 80% 80%, rgba(40, 167, 69, 0.08) 0%, transparent 50%),
            linear-gradient(135deg, #f8f9fa 0%, #e9ecef 30%, #f1f3f4 70%, #e8f5e8 100%);
        min-height: 100vh;
        animation: fadeInUp 0.5s ease-out;
    }

    /* Loading & Error States */
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255, 255, 255, 0.95);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        backdrop-filter: blur(5px);
    }

    .loading-content {
        text-align: center;
        padding: 30px;
        background: var(--white);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow-lg);
        border: 1px solid rgba(40, 167, 69, 0.1);
    }

    .circular-dots-loader {
        display: inline-block;
        position: relative;
        width: 50px;
        height: 50px;
        margin-bottom: 20px;
    }

    .circular-dots-loader .dot {
        display: block;
        position: absolute;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: var(--primary-color);
        animation: dotPulse 1.2s infinite ease-in-out both;
    }

    .circular-dots-loader .dot-1 {
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        animation-delay: -0.6s;
    }

    .circular-dots-loader .dot-2 {
        top: 50%;
        right: 0;
        transform: translateY(-50%);
        animation-delay: -0.4s;
    }

    .circular-dots-loader .dot-3 {
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        animation-delay: -0.2s;
    }

    .loading-text {
        color: var(--dark-color);
        font-size: 16px;
        font-weight: 600;
        margin: 0;
    }

    .error-container {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        padding: 20px;
    }

    .error-content {
        text-align: center;
        padding: 60px 40px;
        background: var(--white);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow-lg);
        border: 1px solid #e9ecef;
        max-width: 500px;
    }

    .error-content i {
        font-size: 64px;
        color: var(--warning-color);
        margin-bottom: 20px;
    }

    .error-content h2 {
        color: var(--dark-color);
        margin-bottom: 15px;
        font-size: 28px;
    }

    .error-content p {
        color: var(--secondary-color);
        margin-bottom: 30px;
        font-size: 16px;
    }

    /* Header Section */
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        padding: 25px 30px;
        background: linear-gradient(135deg, var(--primary-color), #218838);
        border-radius: var(--border-radius-lg);
        color: var(--white);
        box-shadow: var(--shadow-lg);
    }

    .back-btn {
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 12px 20px;
        background: rgba(255, 255, 255, 0.2);
        color: var(--white);
        border: none;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        backdrop-filter: blur(10px);
    }

    .back-btn:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: translateY(-2px);
    }

    .btn-back {
        display: inline-flex;
        align-items: center;
        gap: 10px;
        padding: 12px 24px;
        background: var(--primary-color);
        color: var(--white);
        border: none;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
    }

    .btn-back:hover {
        background: #218838;
        transform: translateY(-2px);
    }

    .header-info {
        display: flex;
        align-items: center;
        gap: 30px;
    }

    .order-title h1 {
        margin: 0 0 5px 0;
        font-size: 28px;
        font-weight: 700;
    }

    .order-number {
        font-size: 18px;
        font-weight: 500;
        opacity: 0.9;
    }

    .order-status-header .status-badge {
        padding: 10px 20px;
        border-radius: 25px;
        font-size: 14px;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 8px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        backdrop-filter: blur(10px);
    }

    .status-badge.status-completed {
        background: rgba(34, 139, 34, 0.2);
        color: #90EE90;
    }

    .status-badge.status-pending {
        background: rgba(255, 165, 0, 0.2);
        color: #FFD700;
    }

    /* Section Headers */
    .section-header {
        margin-bottom: 25px;
    }

    .section-header h2 {
        display: flex;
        align-items: center;
        gap: 12px;
        font-size: 22px;
        font-weight: 700;
        color: var(--dark-color);
        margin: 0;
        padding-bottom: 10px;
        border-bottom: 3px solid var(--primary-color);
    }

    .section-header h2 i {
        color: var(--primary-color);
    }

    /* Order Information Section */
    .order-info-section {
        margin-bottom: 40px;
    }

    .info-cards-grid {
        display: grid;
        gap: 30px;
    }

    .info-card-group {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        padding: 25px;
        box-shadow: var(--shadow);
        border: 1px solid #e9ecef;
        transition: var(--transition);
    }

    .info-card-group:hover {
        box-shadow: var(--shadow-lg);
        transform: translateY(-2px);
    }

    .info-card-group.full-width {
        grid-column: 1 / -1;
    }

    .info-card-group h3 {
        margin: 0 0 20px 0;
        font-size: 16px;
        font-weight: 700;
        color: var(--primary-color);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        border-bottom: 2px solid var(--primary-light);
        padding-bottom: 8px;
    }

    .info-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 15px;
    }

    .info-card {
        display: flex;
        align-items: center;
        gap: 15px;
        padding: 15px;
        background: #f8f9fa;
        border-radius: var(--border-radius);
        border: 1px solid #e9ecef;
        transition: var(--transition);
    }

    .info-card:hover {
        background: var(--primary-light);
        border-color: var(--primary-color);
        transform: translateY(-1px);
    }

    .info-card.stat-card {
        background: linear-gradient(135deg, var(--primary-light), rgba(40, 167, 69, 0.05));
        border-color: var(--primary-color);
    }

    .info-card.sale-card {
        background: linear-gradient(135deg, rgba(23, 162, 184, 0.1), rgba(23, 162, 184, 0.05));
        border-color: var(--info-color);
    }

    .info-icon {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: var(--primary-color);
        color: var(--white);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 16px;
        flex-shrink: 0;
    }

    .sale-card .info-icon {
        background: var(--info-color);
    }

    .info-content {
        flex: 1;
    }

    .info-label {
        font-size: 12px;
        font-weight: 600;
        color: var(--secondary-color);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 4px;
    }

    .info-value {
        font-size: 16px;
        font-weight: 600;
        color: var(--dark-color);
        line-height: 1.2;
    }

    .info-value.stat-number {
        font-size: 20px;
        font-weight: 700;
        color: var(--primary-color);
    }

    .info-subtext {
        font-size: 14px;
        color: var(--secondary-color);
        margin-top: 2px;
    }

    /* Remarks Card */
    .remarks-card {
        background: #fff9c4;
        border: 1px solid #ffc107;
        border-radius: var(--border-radius);
        overflow: hidden;
    }

    .remarks-header {
        background: var(--warning-color);
        color: var(--dark-color);
        padding: 10px 15px;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .remarks-content {
        padding: 15px;
        font-style: italic;
        color: #856404;
        line-height: 1.5;
    }

    /* Products Section */
    .products-section {
        margin-bottom: 40px;
    }

    .products-summary {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .summary-card {
        display: flex;
        align-items: center;
        gap: 15px;
        padding: 20px;
        background: var(--white);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow);
        border: 1px solid #e9ecef;
        transition: var(--transition);
    }

    .summary-card:hover {
        transform: translateY(-3px);
        box-shadow: var(--shadow-lg);
    }

    .summary-card.highlight {
        background: linear-gradient(135deg, var(--primary-color), #218838);
        color: var(--white);
        border: none;
    }

    .summary-icon {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: var(--primary-light);
        color: var(--primary-color);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        flex-shrink: 0;
    }

    .summary-card.highlight .summary-icon {
        background: rgba(255, 255, 255, 0.2);
        color: var(--white);
    }

    .summary-content {
        text-align: left;
    }

    .summary-value {
        font-size: 24px;
        font-weight: 700;
        color: var(--primary-color);
        line-height: 1;
        margin-bottom: 5px;
    }

    .summary-card.highlight .summary-value {
        color: var(--white);
    }

    .summary-label {
        font-size: 14px;
        font-weight: 500;
        color: var(--secondary-color);
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .summary-card.highlight .summary-label {
        color: rgba(255, 255, 255, 0.9);
    }

    /* Products Grid */
    .products-grid-section {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        overflow: hidden;
        box-shadow: var(--shadow);
        border: 1px solid #e9ecef;
    }

    .products-grid .e-grid {
        border: none;
    }

    .products-grid .e-grid .e-gridheader {
        background: linear-gradient(135deg, var(--primary-color), #218838);
        color: var(--white);
        border: none;
    }

    .products-grid .e-grid .e-headercell {
        background: transparent;
        color: var(--white);
        font-weight: 700;
        border-right: 1px solid rgba(255, 255, 255, 0.2);
        border-bottom: none;
    }

    .products-grid .e-grid .e-headercell:last-child {
        border-right: none;
    }

    .products-grid .e-grid .e-row {
        border-bottom: 1px solid #f1f3f4;
    }

    .products-grid .e-grid .e-row:hover {
        background: var(--primary-light);
    }

    .products-grid .e-grid .e-altrow {
        background: #f8f9fa;
    }

    .products-grid .e-grid .e-altrow:hover {
        background: var(--primary-light);
    }

    .product-name-display {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .product-icon {
        color: var(--primary-color);
        font-size: 16px;
    }

    .product-name {
        font-weight: 500;
    }

    .category-badge {
        display: inline-block;
        padding: 4px 12px;
        background: linear-gradient(135deg, var(--info-color), #138496);
        color: var(--white);
        border-radius: 15px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .total-amount {
        font-weight: 700;
        color: var(--primary-color);
        font-size: 16px;
    }

    /* Actions Section */
    .actions-section {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        padding: 30px;
        box-shadow: var(--shadow);
        border: 1px solid #e9ecef;
    }

    .actions-header h2 {
        margin-bottom: 25px;
    }

    .action-buttons {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 25px;
    }

    .action-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 12px;
        padding: 15px 25px;
        border: none;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        text-decoration: none;
        min-height: 52px;
        position: relative;
        overflow: hidden;
    }

    .action-btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none !important;
    }

    .action-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s;
    }

    .action-btn:hover:not(:disabled)::before {
        left: 100%;
    }

    .btn-edit {
        background: linear-gradient(135deg, #007bff, #0056b3);
        color: var(--white);
        box-shadow: 0 4px 15px rgba(0, 123, 255, 0.2);
    }

    .btn-edit:hover:not(:disabled) {
        background: linear-gradient(135deg, #0056b3, #004085);
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(0, 123, 255, 0.3);
    }

    .btn-delete {
        background: linear-gradient(135deg, var(--danger-color), #c82333);
        color: var(--white);
        box-shadow: 0 4px 15px rgba(220, 53, 69, 0.2);
    }

    .btn-delete:hover:not(:disabled) {
        background: linear-gradient(135deg, #c82333, #a71e2a);
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(220, 53, 69, 0.3);
    }

    .btn-challan {
        background: linear-gradient(135deg, #fd7e14, #e55a00);
        color: var(--white);
        box-shadow: 0 4px 15px rgba(253, 126, 20, 0.2);
    }

    .btn-challan:hover:not(:disabled) {
        background: linear-gradient(135deg, #e55a00, #cc4b00);
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(253, 126, 20, 0.3);
    }

    .btn-pdf {
        background: linear-gradient(135deg, var(--primary-color), #218838);
        color: var(--white);
        box-shadow: 0 4px 15px rgba(40, 167, 69, 0.2);
    }

    .btn-pdf:hover:not(:disabled) {
        background: linear-gradient(135deg, #218838, #1e7e34);
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(40, 167, 69, 0.3);
    }

    .completion-notice {
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 18px 25px;
        background: linear-gradient(135deg, #fff3cd, #ffeaa7);
        border: 1px solid var(--warning-color);
        border-radius: var(--border-radius);
        color: #856404;
        font-size: 14px;
        font-weight: 500;
    }

    .completion-notice i {
        color: var(--warning-color);
        font-size: 18px;
    }

    /* Animations */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes dotPulse {
        0%, 80%, 100% {
            transform: scale(0);
        }
        40% {
            transform: scale(1);
        }
    }

    /* Responsive Design */
    @@media (max-width: 1024px) {
        .info-cards {
            grid-template-columns: 1fr;
        }
        
        .products-summary {
            grid-template-columns: repeat(2, 1fr);
        }
        
        .action-buttons {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @@media (max-width: 768px) {
        .order-view-container {
            padding: 15px;
        }
        
        .page-header {
            flex-direction: column;
            gap: 20px;
            text-align: center;
        }
        
        .header-info {
            flex-direction: column;
            gap: 15px;
        }
        
        .products-summary {
            grid-template-columns: 1fr;
        }
        
        .action-buttons {
            grid-template-columns: 1fr;
        }
        
        .info-card-group {
            padding: 20px;
        }
        
        .summary-card {
            padding: 15px;
        }
    }

    @@media (max-width: 480px) {
        .order-view-container {
            padding: 10px;
        }
        
        .page-header {
            padding: 20px;
        }
        
        .order-title h1 {
            font-size: 24px;
        }
        
        .section-header h2 {
            font-size: 18px;
        }
        
        .info-card {
            flex-direction: column;
            text-align: center;
            gap: 10px;
        }
        
        .summary-card {
            flex-direction: column;
            text-align: center;
            gap: 10px;
        }
        
        .action-btn {
            padding: 12px 20px;
            font-size: 12px;
        }
    }

    /* Delete Confirmation Dialog Styles */
    .delete-confirm-dialog .e-dialog {
        border-radius: var(--border-radius-lg);
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        border: none;
    }

    .dialog-header {
        display: flex;
        align-items: center;
        gap: 12px;
        font-size: 18px;
        font-weight: 700;
        color: var(--danger-color);
        padding: 10px 0;
    }

    .warning-icon {
        font-size: 24px;
        color: var(--warning-color);
    }

    .dialog-content {
        padding: 20px 0;
    }

    .warning-message p {
        margin: 0 0 15px 0;
        color: var(--dark-color);
        font-size: 16px;
        line-height: 1.5;
    }

    .order-highlight {
        font-weight: 700;
        color: var(--primary-color);
        background: var(--primary-light);
        padding: 2px 8px;
        border-radius: 4px;
    }

    .warning-notice {
        display: flex;
        align-items: flex-start;
        gap: 10px;
        padding: 15px;
        background: linear-gradient(135deg, #fff3cd, #ffeaa7);
        border: 1px solid var(--warning-color);
        border-radius: var(--border-radius);
        margin-top: 20px;
    }

    .warning-notice i {
        color: var(--warning-color);
        margin-top: 2px;
        flex-shrink: 0;
    }

    .warning-notice span {
        font-size: 14px;
        color: #856404;
        font-weight: 500;
    }

    .dialog-footer {
        display: flex;
        justify-content: flex-end;
        gap: 15px;
        padding: 15px 0 0 0;
    }

    .dialog-btn {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 12px 24px;
        border: none;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        min-width: 120px;
        justify-content: center;
    }

    .dialog-btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }

    .btn-cancel {
        background: #6c757d;
        color: var(--white);
    }

    .btn-cancel:hover:not(:disabled) {
        background: #5a6268;
        transform: translateY(-2px);
    }

    .btn-confirm {
        background: linear-gradient(135deg, var(--danger-color), #c82333);
        color: var(--white);
    }

    .btn-confirm:hover:not(:disabled) {
        background: linear-gradient(135deg, #c82333, #a71e2a);
        transform: translateY(-2px);
    }

    .fa-spinner {
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
</style>