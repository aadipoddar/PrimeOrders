@page "/Reports/Financial/TrialBalance"

@using PrimeBakesLibrary.Models.Common
@using PrimeBakesLibrary.Models.Accounts.FinancialAccounting
@using PrimeBakesLibrary.Models.Accounts.Masters
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Grids
@using PrimeBakes.Shared.Services

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />

<PageTitle>Trial Balance Report - PrimeBakes</PageTitle>

@if (_isLoading)
{
	<div class="loading-overlay">
		<div class="loading-content">
			<div class="circular-dots-loader">
				<span class="dot dot-1"></span>
				<span class="dot dot-2"></span>
				<span class="dot dot-3"></span>
			</div>
			<p class="loading-text">Loading Trial Balance...</p>
		</div>
	</div>
}
else
{
	<div class="trial-balance-container">
		<!-- Header Section -->
		<div class="page-header">
			<div class="header-content">
				<div class="header-title">
					<div class="title-icon">
						<i class="fas fa-balance-scale"></i>
					</div>
					<div class="title-info">
						<h1>Trial Balance Report</h1>
						<p>Account balances and trial balance verification</p>
					</div>
				</div>

				<div class="header-actions">
					<button @onclick='() => NavigationManager.NavigateTo("/Reports-Dashboard")' class="dashboard-btn">
						<i class="fas fa-tachometer-alt"></i>
						<span>Back to Dashboard</span>
					</button>
				</div>
			</div>
		</div>

		<!-- Filter Section -->
		<div class="filter-section">
			<div class="filter-card">
				<div class="filter-header">
					<h3><i class="fas fa-filter"></i> Filters</h3>
					<button @onclick="ToggleCharts" class="toggle-charts-btn">
						<i class="fas @(_showCharts ? "fa-chart-bar" : "fa-table")"></i>
						<span>@(_showCharts ? "Hide Charts" : "Show Charts")</span>
					</button>
				</div>

				<div class="filter-controls">
					<div class="filter-group">
						<label class="filter-label">
							<i class="fas fa-calendar-alt"></i>
							Date Range
						</label>
						<SfDateRangePicker TValue="DateOnly"
										   @bind-StartDate="_startDate"
										   @bind-EndDate="_endDate"
										   Format="dd/MM/yyyy"
										   Placeholder="Select Date Range"
										   CssClass="date-range-picker">
							<DateRangePickerEvents TValue="DateOnly" ValueChange="OnDateRangeChanged" />
						</SfDateRangePicker>
					</div>

					<div class="filter-group">
						<label class="filter-label">
							<i class="fas fa-layer-group"></i>
							Account Type
						</label>
						<SfDropDownList TValue="int" TItem="AccountTypeModel"
										Placeholder="All Account Types"
										DataSource="_accountTypes"
										@bind-Value="_selectedAccountTypeId"
										CssClass="dropdown-filter">
							<DropDownListFieldSettings Value="Id" Text="Name" />
							<DropDownListEvents TValue="int" TItem="AccountTypeModel" ValueChange="OnAccountTypeChanged" />
						</SfDropDownList>
					</div>

					<div class="filter-group">
						<label class="filter-label">
							<i class="fas fa-tags"></i>
							Group
						</label>
						<SfDropDownList TValue="int" TItem="GroupModel"
										Placeholder="All Groups"
										DataSource="_filteredGroups"
										@bind-Value="_selectedGroupId"
										CssClass="dropdown-filter">
							<DropDownListFieldSettings Value="Id" Text="Name" />
							<DropDownListEvents TValue="int" TItem="GroupModel" ValueChange="OnGroupChanged" />
						</SfDropDownList>
					</div>

					<div class="filter-actions">
						<button @onclick="ExportToExcel" class="export-btn">
							<i class="fas fa-file-excel"></i>
							<span>Export to Excel</span>
						</button>
					</div>
				</div>
			</div>
		</div>

		<!-- Summary Cards -->
		<div class="summary-section">
			<div class="summary-cards">
				<div class="summary-card opening-balance">
					<div class="card-icon">
						<i class="fas fa-play"></i>
					</div>
					<div class="card-content">
						<div class="card-value">₹@GetTotalOpeningBalance().ToString("N2")</div>
						<div class="card-label">Opening Balance</div>
					</div>
				</div>

				<div class="summary-card total-debit">
					<div class="card-icon">
						<i class="fas fa-arrow-up"></i>
					</div>
					<div class="card-content">
						<div class="card-value">₹@GetTotalDebit().ToString("N2")</div>
						<div class="card-label">Total Debit</div>
					</div>
				</div>

				<div class="summary-card total-credit">
					<div class="card-icon">
						<i class="fas fa-arrow-down"></i>
					</div>
					<div class="card-content">
						<div class="card-value">₹@GetTotalCredit().ToString("N2")</div>
						<div class="card-label">Total Credit</div>
					</div>
				</div>

				<div class="summary-card closing-balance">
					<div class="card-icon">
						<i class="fas fa-stop"></i>
					</div>
					<div class="card-content">
						<div class="card-value">₹@GetTotalClosingBalance().ToString("N2")</div>
						<div class="card-label">Closing Balance</div>
					</div>
				</div>

				<div class="summary-card net-balance">
					<div class="card-icon">
						<i class="fas fa-equals"></i>
					</div>
					<div class="card-content">
						<div class="card-value">₹@GetNetBalance().ToString("N2")</div>
						<div class="card-label">Net Balance</div>
					</div>
				</div>

				<div class="summary-card total-accounts">
					<div class="card-icon">
						<i class="fas fa-list"></i>
					</div>
					<div class="card-content">
						<div class="card-value">@GetTotalAccounts()</div>
						<div class="card-label">Total Accounts</div>
					</div>
				</div>
			</div>
		</div>

		@if (_showCharts)
		{
			<!-- Charts Section -->
			<div class="charts-section">
				<!-- First row of charts -->
				<div class="charts-row">
					<!-- Balance Overview Chart -->
					<div class="chart-card">
						<div class="chart-header">
							<h3><i class="fas fa-chart-pie"></i> Balance Overview</h3>
						</div>
						<div class="chart-content">
							<SfAccumulationChart>
								<AccumulationChartSeriesCollection>
									<AccumulationChartSeries DataSource="GetBalanceOverviewChartData()"
															 XName="Type"
															 YName="Amount"
															 Type="AccumulationType.Pie"
															 InnerRadius="40%">
										<AccumulationDataLabelSettings Visible="true" Name="Type" Position="AccumulationLabelPosition.Outside">
											<AccumulationChartDataLabelFont FontWeight="600" />
										</AccumulationDataLabelSettings>
									</AccumulationChartSeries>
								</AccumulationChartSeriesCollection>
								<AccumulationChartTooltipSettings Enable="true" Format="${point.x}: ₹${point.y}" />
							</SfAccumulationChart>
						</div>
					</div>

					<!-- Top Account Groups Chart -->
					<div class="chart-card">
						<div class="chart-header">
							<h3><i class="fas fa-chart-bar"></i> Top Account Groups</h3>
						</div>
						<div class="chart-content">
							<SfChart>
								<ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" />
								<ChartSeriesCollection>
									<ChartSeries DataSource="GetTopGroupsChartData()"
												 XName="GroupName"
												 YName="TotalBalance"
												 Type="ChartSeriesType.Column"
												 Fill="#e2137b">
										<ChartMarker>
											<ChartDataLabel Visible="true" Position="Syncfusion.Blazor.Charts.LabelPosition.Top">
												<ChartDataLabelFont FontWeight="600" />
											</ChartDataLabel>
										</ChartMarker>
									</ChartSeries>
								</ChartSeriesCollection>
								<ChartTooltipSettings Enable="true" Format="${point.x}: ₹${point.y}" />
							</SfChart>
						</div>
					</div>
				</div>

				<!-- Second row of charts -->
				<div class="charts-row">
					<!-- Debit vs Credit Analysis Chart -->
					<div class="chart-card">
						<div class="chart-header">
							<h3><i class="fas fa-chart-area"></i> Debit vs Credit Analysis</h3>
						</div>
						<div class="chart-content">
							<SfChart>
								<ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" />
								<ChartSeriesCollection>
									<ChartSeries DataSource="GetDebitCreditAnalysisChartData()"
												 XName="LedgerName"
												 YName="DebitAmount"
												 Name="Debit"
												 Type="ChartSeriesType.Column"
												 Fill="#28a745">
									</ChartSeries>
									<ChartSeries DataSource="GetDebitCreditAnalysisChartData()"
												 XName="LedgerName"
												 YName="CreditAmount"
												 Name="Credit"
												 Type="ChartSeriesType.Column"
												 Fill="#dc3545">
									</ChartSeries>
								</ChartSeriesCollection>
								<ChartTooltipSettings Enable="true" Format="${series.name}: ₹${point.y}" />
								<ChartLegendSettings Visible="true" Position="LegendPosition.Top" />
							</SfChart>
						</div>
					</div>

					<!-- Account Type Distribution Chart -->
					<div class="chart-card">
						<div class="chart-header">
							<h3><i class="fas fa-chart-donut"></i> Account Type Distribution</h3>
						</div>
						<div class="chart-content">
							<SfAccumulationChart>
								<AccumulationChartSeriesCollection>
									<AccumulationChartSeries DataSource="GetAccountTypeDistributionChartData()"
															 XName="AccountTypeName"
															 YName="TotalBalance"
															 Type="AccumulationType.Pie"
															 InnerRadius="50%">
										<AccumulationDataLabelSettings Visible="true" Name="AccountTypeName" Position="AccumulationLabelPosition.Outside">
											<AccumulationChartDataLabelFont FontWeight="600" />
										</AccumulationDataLabelSettings>
									</AccumulationChartSeries>
								</AccumulationChartSeriesCollection>
								<AccumulationChartTooltipSettings Enable="true" Format="${point.x}: ₹${point.y}" />
							</SfAccumulationChart>
						</div>
					</div>
				</div>
			</div>
		}

		<!-- Data Grid Section -->
		<div class="grid-section">
			<div class="grid-card">
				<div class="grid-header">
					<h3><i class="fas fa-table"></i> Trial Balance Details</h3>
					<div class="grid-actions">
						<span class="record-count">@_trialBalances.Count Records</span>
					</div>
				</div>

				<div class="grid-content">
					<SfGrid @ref="_sfGrid" DataSource="_trialBalances" AllowPaging="true" AllowSorting="true" AllowFiltering="true" AllowExcelExport="true">
						<GridPageSettings PageSize="50" />
						<GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel" />
						<GridColumns>
							<GridColumn Field="@nameof(TrialBalanceModel.LedgerCode)" HeaderText="Code" Width="80" />
							<GridColumn Field="@nameof(TrialBalanceModel.LedgerName)" HeaderText="Ledger Name" Width="200" />
							<GridColumn Field="@nameof(TrialBalanceModel.GroupName)" HeaderText="Group" Width="150" />
							<GridColumn Field="@nameof(TrialBalanceModel.AccountTypeName)" HeaderText="Account Type" Width="130" />
							<GridColumn Field="@nameof(TrialBalanceModel.OpeningBalance)" HeaderText="Opening Balance" Format="C2" Width="130" TextAlign="TextAlign.Right" />
							<GridColumn Field="@nameof(TrialBalanceModel.TotalDebit)" HeaderText="Total Debit" Format="C2" Width="120" TextAlign="TextAlign.Right" />
							<GridColumn Field="@nameof(TrialBalanceModel.TotalCredit)" HeaderText="Total Credit" Format="C2" Width="120" TextAlign="TextAlign.Right" />
							<GridColumn Field="@nameof(TrialBalanceModel.ClosingBalance)" HeaderText="Closing Balance" Format="C2" Width="130" TextAlign="TextAlign.Right" />
						</GridColumns>
					</SfGrid>
				</div>
			</div>
		</div>
	</div>
}

<style>
	:root {
		--primary-color: #e2137b;
		--primary-dark: #c10e6a;
		--primary-light: #f5c6df;
		--secondary-color: #6c757d;
		--success-color: #28a745;
		--warning-color: #ffc107;
		--danger-color: #dc3545;
		--info-color: #17a2b8;
		--light-color: #f8f9fa;
		--dark-color: #343a40;
		--border-color: #dee2e6;
		--shadow-color: rgba(0, 0, 0, 0.1);
		--accent-color: #ff6b9d;
	}

	.trial-balance-container {
		padding: 0;
		margin: 0;
		min-height: 100vh;
		background-color: #f8f9fa;
		font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
	}

	/* Loading Overlay */
	.loading-overlay {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: rgba(255, 255, 255, 0.9);
		display: flex;
		justify-content: center;
		align-items: center;
		z-index: 9999;
	}

	.loading-content {
		text-align: center;
		background: white;
		padding: 40px;
		border-radius: 15px;
		box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
	}

	.circular-dots-loader {
		display: inline-block;
		position: relative;
		width: 80px;
		height: 80px;
		margin-bottom: 20px;
	}

		.circular-dots-loader .dot {
			display: block;
			position: absolute;
			width: 16px;
			height: 16px;
			border-radius: 50%;
			background-color: var(--primary-color);
			animation: rotate 1.2s linear infinite;
		}

		.circular-dots-loader .dot-1 {
			animation-delay: 0s;
		}

		.circular-dots-loader .dot-2 {
			background-color: var(--primary-dark);
			animation-delay: -0.4s;
		}

		.circular-dots-loader .dot-3 {
			background-color: var(--accent-color);
			animation-delay: -0.8s;
		}

	@@keyframes rotate {
		0% {
			transform: rotate(0deg) translate(-30px) rotate(0deg);
		}

		100% {
			transform: rotate(360deg) translate(-30px) rotate(-360deg);
		}
	}

	.loading-text {
		font-size: 18px;
		color: var(--dark-color);
		font-weight: 500;
		margin: 0;
	}

	/* Header Section */
	.page-header {
		background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
		color: white;
		padding: 30px;
		margin-bottom: 30px;
	}

	.header-content {
		display: flex;
		justify-content: space-between;
		align-items: center;
		max-width: 1400px;
		margin: 0 auto;
	}

	.header-title {
		display: flex;
		align-items: center;
		gap: 20px;
	}

	.title-icon {
		width: 70px;
		height: 70px;
		background: rgba(255, 255, 255, 0.2);
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		font-size: 32px;
	}

	.title-info h1 {
		margin: 0 0 8px 0;
		font-size: 32px;
		font-weight: 700;
	}

	.title-info p {
		margin: 0;
		opacity: 0.9;
		font-size: 16px;
		font-weight: 400;
	}

	.dashboard-btn {
		background: rgba(255, 255, 255, 0.2);
		color: white;
		border: 2px solid rgba(255, 255, 255, 0.3);
		padding: 12px 24px;
		border-radius: 50px;
		display: flex;
		align-items: center;
		gap: 10px;
		font-weight: 600;
		transition: all 0.3s ease;
		cursor: pointer;
	}

		.dashboard-btn:hover {
			background: rgba(255, 255, 255, 0.3);
			border-color: rgba(255, 255, 255, 0.5);
			transform: translateY(-2px);
		}

	/* Filter Section */
	.filter-section {
		margin: 0 30px 30px 30px;
	}

	.filter-card {
		background: white;
		border-radius: 15px;
		box-shadow: 0 5px 15px var(--shadow-color);
		overflow: hidden;
	}

	.filter-header {
		background: linear-gradient(135deg, #f8f9fa, #e9ecef);
		padding: 20px 30px;
		border-bottom: 1px solid var(--border-color);
		display: flex;
		justify-content: space-between;
		align-items: center;
	}

		.filter-header h3 {
			margin: 0;
			color: var(--dark-color);
			font-size: 18px;
			font-weight: 600;
			display: flex;
			align-items: center;
			gap: 10px;
		}

	.toggle-charts-btn {
		background: var(--primary-color);
		color: white;
		border: none;
		padding: 10px 20px;
		border-radius: 25px;
		display: flex;
		align-items: center;
		gap: 8px;
		font-weight: 500;
		transition: all 0.3s ease;
		cursor: pointer;
	}

		.toggle-charts-btn:hover {
			background: var(--primary-dark);
			transform: translateY(-1px);
		}

	.filter-controls {
		padding: 30px;
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
		gap: 25px;
		align-items: end;
	}

	.filter-group {
		display: flex;
		flex-direction: column;
		gap: 8px;
	}

	.filter-label {
		font-weight: 600;
		color: var(--dark-color);
		font-size: 14px;
		display: flex;
		align-items: center;
		gap: 8px;
	}

	.filter-actions {
		display: flex;
		gap: 15px;
	}

	.export-btn {
		background: var(--success-color);
		color: white;
		border: none;
		padding: 12px 24px;
		border-radius: 25px;
		display: flex;
		align-items: center;
		gap: 10px;
		font-weight: 600;
		transition: all 0.3s ease;
		cursor: pointer;
	}

		.export-btn:hover {
			background: #218838;
			transform: translateY(-2px);
		}

	/* Summary Cards */
	.summary-section {
		margin: 0 30px 30px 30px;
	}

	.summary-cards {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
		gap: 20px;
	}

	.summary-card {
		background: white;
		border-radius: 15px;
		padding: 25px;
		box-shadow: 0 5px 15px var(--shadow-color);
		display: flex;
		align-items: center;
		gap: 20px;
		transition: all 0.3s ease;
		position: relative;
		overflow: hidden;
	}

		.summary-card::before {
			content: '';
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 4px;
			background: var(--primary-color);
		}

		.summary-card:hover {
			transform: translateY(-5px);
			box-shadow: 0 10px 25px var(--shadow-color);
		}

		.summary-card.opening-balance::before {
			background: var(--info-color);
		}

		.summary-card.total-debit::before {
			background: var(--success-color);
		}

		.summary-card.total-credit::before {
			background: var(--danger-color);
		}

		.summary-card.closing-balance::before {
			background: var(--warning-color);
		}

		.summary-card.net-balance::before {
			background: var(--primary-color);
		}

		.summary-card.total-accounts::before {
			background: var(--secondary-color);
		}

		.summary-card .card-icon {
			width: 60px;
			height: 60px;
			border-radius: 50%;
			display: flex;
			align-items: center;
			justify-content: center;
			font-size: 24px;
			color: white;
			flex-shrink: 0;
		}

	.opening-balance .card-icon {
		background: var(--info-color);
	}

	.total-debit .card-icon {
		background: var(--success-color);
	}

	.total-credit .card-icon {
		background: var(--danger-color);
	}

	.closing-balance .card-icon {
		background: var(--warning-color);
	}

	.net-balance .card-icon {
		background: var(--primary-color);
	}

	.total-accounts .card-icon {
		background: var(--secondary-color);
	}

	.card-content {
		flex: 1;
	}

	.card-value {
		font-size: 28px;
		font-weight: 700;
		color: var(--dark-color);
		margin-bottom: 5px;
	}

	.card-label {
		font-size: 14px;
		color: var(--secondary-color);
		font-weight: 500;
		text-transform: uppercase;
		letter-spacing: 0.5px;
	}

	/* Charts Section */
	.charts-section {
		margin: 0 30px 30px 30px;
	}

	.charts-row {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 30px;
		margin-bottom: 30px;
	}

		.charts-row:last-child {
			margin-bottom: 0;
		}

	.chart-card {
		background: white;
		border-radius: 15px;
		box-shadow: 0 5px 15px var(--shadow-color);
		overflow: hidden;
	}

	.chart-header {
		background: linear-gradient(135deg, #f8f9fa, #e9ecef);
		padding: 20px 25px;
		border-bottom: 1px solid var(--border-color);
	}

		.chart-header h3 {
			margin: 0;
			color: var(--dark-color);
			font-size: 16px;
			font-weight: 600;
			display: flex;
			align-items: center;
			gap: 10px;
		}

	.chart-content {
		padding: 25px;
	}

	/* Grid Section */
	.grid-section {
		margin: 0 30px 30px 30px;
	}

	.grid-card {
		background: white;
		border-radius: 15px;
		box-shadow: 0 5px 15px var(--shadow-color);
		overflow: hidden;
	}

	.grid-header {
		background: linear-gradient(135deg, #f8f9fa, #e9ecef);
		padding: 20px 30px;
		border-bottom: 1px solid var(--border-color);
		display: flex;
		justify-content: space-between;
		align-items: center;
	}

		.grid-header h3 {
			margin: 0;
			color: var(--dark-color);
			font-size: 18px;
			font-weight: 600;
			display: flex;
			align-items: center;
			gap: 10px;
		}

	.record-count {
		background: var(--primary-color);
		color: white;
		padding: 6px 15px;
		border-radius: 20px;
		font-size: 12px;
		font-weight: 600;
	}

	.grid-content {
		padding: 25px;
	}

	/* Responsive Design */
	@@media (max-width: 768px) {
		.trial-balance-container {
			padding: 0;
		}

		.page-header {
			padding: 20px 15px;
			margin-bottom: 20px;
		}

		.header-content {
			flex-direction: column;
			gap: 20px;
			text-align: center;
		}

		.title-info h1 {
			font-size: 24px;
		}

		.filter-section,
		.summary-section,
		.charts-section,
		.grid-section {
			margin: 0 15px 20px 15px;
		}

		.filter-controls {
			grid-template-columns: 1fr;
			padding: 20px;
		}

		.summary-cards {
			grid-template-columns: 1fr;
		}

		.charts-row {
			grid-template-columns: 1fr;
		}
	}
</style>