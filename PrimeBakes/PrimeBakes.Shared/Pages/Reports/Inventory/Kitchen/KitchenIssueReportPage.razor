@page "/Reports/Kitchen-Issue"

@using PrimeBakes.Shared.Services
@using PrimeBakesLibrary.Models.Common
@using PrimeBakesLibrary.Models.Inventory
@using PrimeBakesLibrary.Models.Inventory.Kitchen
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Inputs

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />

<PageTitle>Kitchen Issue Report - PrimeBakes</PageTitle>

@if (_isLoading)
{
    <div class="loading-overlay">
        <div class="loading-content">
            <div class="loading-spinner">
                <div class="spinner-circle"></div>
                <div class="spinner-circle"></div>
                <div class="spinner-circle"></div>
            </div>
            <h3>Loading Kitchen Issue Report...</h3>
            <p>Please wait while we gather your data</p>
        </div>
    </div>
}

<div class="kitchen-issue-report-container">
    <!-- Page Header -->
    <div class="page-header">
        <div class="header-content">
            <div class="title-section">
                <div class="icon-wrapper">
                    <i class="fas fa-utensils"></i>
                </div>
                <div class="title-text">
                    <h1>Kitchen Issue Report</h1>
                    <p>Track and analyze raw material issues to kitchens</p>
                </div>
            </div>
            <button @onclick='() => NavigationManager.NavigateTo("/Reports-Dashboard")' class="back-to-dashboard-btn">
                <i class="fas fa-arrow-left"></i>
                <span>Dashboard</span>
            </button>
        </div>
    </div>

    <!-- Filters Section -->
    <div class="filters-section">
        <div class="filters-container">
            <div class="filter-group">
                <label class="filter-label">Date Range</label>
                <SfDateRangePicker @bind-StartDate="_startDate"
                                 @bind-EndDate="_endDate"
                                 Placeholder="Select date range"
                                 CssClass="filter-control date-range"
                                 ShowClearButton="true">
                    <DateRangePickerEvents TValue="DateOnly" ValueChange="DateRangeChanged" />
                </SfDateRangePicker>
            </div>

            <div class="filter-group">
                <label class="filter-label">Kitchen</label>
                <SfDropDownList TValue="int"
                              TItem="KitchenModel"
                              @bind-Value="_selectedKitchenId"
                              DataSource="_kitchens"
                              Placeholder="Select kitchen"
                              CssClass="filter-control">
                    <DropDownListFieldSettings Value="Id" Text="Name" />
                    <DropDownListEvents TValue="int" TItem="KitchenModel" ValueChange="OnKitchenFilterChanged" />
                </SfDropDownList>
            </div>

            <div class="action-buttons">
                <button @onclick="RefreshData" class="refresh-btn">
                    <i class="fas fa-sync-alt"></i>
                    <span>Refresh</span>
                </button>

                <button @onclick="ExportToExcel" class="excel-btn">
                    <i class="fas fa-file-excel"></i>
                    <span>Export Excel</span>
                </button>
            </div>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="summary-cards">
        <div class="summary-card total-issues">
            <div class="card-icon">
                <i class="fas fa-clipboard-list"></i>
            </div>
            <div class="card-content">
                <div class="card-value">@_kitchenIssueOverviews.Count</div>
                <div class="card-label">Total Issues</div>
            </div>
            <div class="card-trend">
                <i class="fas fa-chart-line trend-up"></i>
            </div>
        </div>

        <div class="summary-card total-materials">
            <div class="card-icon">
                <i class="fas fa-boxes"></i>
            </div>
            <div class="card-content">
                <div class="card-value">@_kitchenIssueOverviews.Sum(x => x.TotalProducts)</div>
                <div class="card-label">Total Materials</div>
            </div>
            <div class="card-trend">
                <i class="fas fa-arrow-up trend-up"></i>
            </div>
        </div>

        <div class="summary-card total-quantity">
            <div class="card-icon">
                <i class="fas fa-weight"></i>
            </div>
            <div class="card-content">
                <div class="card-value">@_kitchenIssueOverviews.Sum(x => x.TotalQuantity).ToString("N1")</div>
                <div class="card-label">Total Quantity</div>
            </div>
            <div class="card-trend">
                <i class="fas fa-plus trend-up"></i>
            </div>
        </div>

        <div class="summary-card total-value">
            <div class="card-icon">
                <i class="fas fa-dollar-sign"></i>
            </div>
            <div class="card-content">
                <div class="card-value">₹@_kitchenIssueOverviews.Sum(x => x.TotalAmount).ToString("N0")</div>
                <div class="card-label">Total Value</div>
            </div>
            <div class="card-trend">
                <i class="fas fa-chart-bar trend-up"></i>
            </div>
        </div>
    </div>

    <!-- Mobile Charts Notice -->
    <div class="mobile-charts-notice">
        <div class="notice-content">
            <i class="fas fa-info-circle"></i>
            <p>Charts are best viewed on desktop and tablet devices</p>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="charts-section">
        <div class="chart-container">
            <div class="chart-card">
                <div class="chart-header">
                    <h3>Issues by Kitchen</h3>
                    <p>Distribution of issues across kitchens</p>
                </div>
                <div class="chart-content">
                    <SfChart Height="350px">
                        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Title="Kitchen" />
                        <ChartPrimaryYAxis Title="Number of Issues" LabelFormat="{value}" />
                        <ChartTooltipSettings Enable="true" />
                        <ChartSeriesCollection>
                            <ChartSeries DataSource="@GetKitchenWiseData()"
                                       XName="KitchenName" YName="IssueCount" 
                                       Type="ChartSeriesType.Column"
                                       Name="Issues" Fill="#28a745">
                                <ChartMarker Visible="false" />
                            </ChartSeries>
                        </ChartSeriesCollection>
                    </SfChart>
                </div>
            </div>
        </div>

        <div class="chart-container">
            <div class="chart-card">
                <div class="chart-header">
                    <h3>Daily Issue Trend</h3>
                    <p>Timeline of kitchen issues</p>
                </div>
                <div class="chart-content">
                    <SfChart Height="350px">
                        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Title="Date" />
                        <ChartPrimaryYAxis Title="Quantity Issued" LabelFormat="{value}" />
                        <ChartTooltipSettings Enable="true" />
                        <ChartSeriesCollection>
                            <ChartSeries DataSource="@GetDailyIssueData()"
                                       XName="Date" YName="TotalQuantity" 
                                       Type="ChartSeriesType.Line"
                                       Name="Daily Issues" Fill="#17a2b8">
                                <ChartMarker Visible="true" Width="8" Height="8" />
                            </ChartSeries>
                        </ChartSeriesCollection>
                    </SfChart>
                </div>
            </div>
        </div>

        <div class="chart-container full-width">
            <div class="chart-card">
                <div class="chart-header">
                    <h3>Kitchen Distribution</h3>
                    <p>Pie chart showing issue distribution by kitchen</p>
                </div>
                <div class="chart-content">
                    <SfAccumulationChart Title="" EnableSmartLabels="true" Height="400px">
                        <AccumulationChartSeriesCollection>
                            <AccumulationChartSeries DataSource="@GetPieChartData()" 
                                                   XName="KitchenName"
                                                   YName="TotalQuantity" 
                                                   Name="Kitchen Issues"
                                                   InnerRadius="40%" 
                                                   LegendShape="LegendShape.Circle">
                                <AccumulationDataLabelSettings Visible="true" 
                                                             Name="KitchenName"
                                                             Position="AccumulationLabelPosition.Outside" />
                                <AccumulationChartAnimation Enable="true" />
                            </AccumulationChartSeries>
                        </AccumulationChartSeriesCollection>
                        <AccumulationChartLegendSettings Visible="true" Position="LegendPosition.Right" />
                        <AccumulationChartTooltipSettings Enable="true" Format="${point.x}: ${point.y} (${point.percentage}%)" />
                    </SfAccumulationChart>
                </div>
            </div>
        </div>
    </div>

    <!-- Data Grid -->
    <div class="grid-section">
        <div class="grid-card">
            <div class="grid-header">
                <h3>Kitchen Issue Details</h3>
                <p>Detailed view of all kitchen issues</p>
            </div>
            <div class="grid-content">
                <SfGrid @ref="_sfGrid"
                      DataSource="_kitchenIssueOverviews"
                      AllowSorting="true"
                      AllowFiltering="true"
                      AllowResizing="true"
                      AllowPaging="true"
                      CssClass="modern-grid">
                    <GridPageSettings PageSize="15" PageSizes="@(new int[] { 10, 15, 25, 50 })" />
                    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu" />
                    <GridColumns>
                        <GridColumn Field="@nameof(KitchenIssueOverviewModel.TransactionNo)" 
                                  HeaderText="Transaction #" Width="130" />
                        <GridColumn Field="@nameof(KitchenIssueOverviewModel.IssueDate)" 
                                  HeaderText="Issue Date" Width="130" 
                                  Format="dd/MM/yyyy HH:mm" />
                        <GridColumn Field="@nameof(KitchenIssueOverviewModel.KitchenName)" 
                                  HeaderText="Kitchen" Width="150" />
                        <GridColumn Field="@nameof(KitchenIssueOverviewModel.UserName)" 
                                  HeaderText="Issued By" Width="140" />
                        <GridColumn Field="@nameof(KitchenIssueOverviewModel.TotalProducts)" 
                                  HeaderText="Materials" Width="100" 
                                  TextAlign="TextAlign.Right" />
                        <GridColumn Field="@nameof(KitchenIssueOverviewModel.TotalQuantity)" 
                                  HeaderText="Total Qty" Width="110" 
                                  Format="N2" TextAlign="TextAlign.Right" />
                        <GridColumn Field="@nameof(KitchenIssueOverviewModel.TotalAmount)" 
                                  HeaderText="Total Value" Width="120" 
                                  Format="C2" TextAlign="TextAlign.Right" />
                        <GridColumn Field="@nameof(KitchenIssueOverviewModel.Remarks)" 
                                  HeaderText="Remarks" Width="200" />
                        <GridColumn HeaderText="Actions" Width="120" TextAlign="TextAlign.Center">
                            <Template>
                                @{
                                    var issue = (context as KitchenIssueOverviewModel);
                                }
                                <button @onclick="() => ViewIssueDetails(issue)" 
                                      class="action-btn-grid" 
                                      title="View Details">
                                    <i class="fas fa-eye"></i>
                                    <span>View</span>
                                </button>
                            </Template>
                        </GridColumn>
                    </GridColumns>
                </SfGrid>
            </div>
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #28a745;
        --primary-dark: #1e7e34;
        --primary-light: #d4edda;
        --secondary-color: #6c757d;
        --success-color: #28a745;
        --warning-color: #ffc107;
        --danger-color: #dc3545;
        --info-color: #17a2b8;
        --light-color: #f8f9fa;
        --dark-color: #343a40;
        --white: #ffffff;
        --shadow-sm: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        --shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        --shadow-lg: 0 1rem 3rem rgba(0, 0, 0, 0.175);
        --border-radius: 0.375rem;
        --border-radius-lg: 0.5rem;
        --transition: all 0.3s ease;
        --kitchen-primary: #ff6b35;
        --kitchen-secondary: #f7931e;
    }

    .kitchen-issue-report-container {
        padding: 20px;
        background: 
            radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.03) 0%, transparent 50%),
            radial-gradient(circle at 80% 20%, rgba(255, 107, 53, 0.03) 0%, transparent 50%),
            radial-gradient(circle at 40% 40%, rgba(40, 167, 69, 0.02) 0%, transparent 50%),
            linear-gradient(135deg, #f8f9fa 0%, #e9ecef 30%, #f1f3f4 70%, #e8f5e8 100%);
        min-height: 100vh;
        position: relative;
    }

    .kitchen-issue-report-container::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: 
            url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%2328a745' fill-opacity='0.02'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E") repeat;
        pointer-events: none;
        z-index: 0;
    }

    .kitchen-issue-report-container > * {
        position: relative;
        z-index: 1;
    }

    /* Loading Overlay */
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .loading-content {
        text-align: center;
        color: var(--dark-color);
    }

    .loading-spinner {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 8px;
        margin-bottom: 20px;
    }

    .spinner-circle {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: var(--primary-color);
        animation: bounce 1.4s ease-in-out both infinite;
    }

    .spinner-circle:nth-child(1) { animation-delay: -0.32s; }
    .spinner-circle:nth-child(2) { animation-delay: -0.16s; }

    @@keyframes bounce {
        0%, 80%, 100% {
            transform: scale(0);
        }
        40% {
            transform: scale(1);
        }
    }

    /* Page Header */
    .page-header {
        margin-bottom: 30px;
    }

    .header-content {
        background: linear-gradient(135deg, var(--white) 0%, #fefefe 100%);
        padding: 30px;
        border-radius: var(--border-radius-lg);
        box-shadow: 
            var(--shadow),
            0 0 0 1px rgba(255, 255, 255, 0.05),
            inset 0 1px 0 rgba(255, 255, 255, 0.9);
        border-left: 5px solid var(--kitchen-primary);
        border-top: 1px solid rgba(255, 107, 53, 0.1);
        position: relative;
        overflow: hidden;
    }

    .header-content::before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 100px;
        height: 100px;
        background: radial-gradient(circle, rgba(255, 107, 53, 0.05) 0%, transparent 70%);
        border-radius: 50%;
        transform: translate(30px, -30px);
    }

    .title-section {
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .icon-wrapper {
        width: 60px;
        height: 60px;
        background: linear-gradient(135deg, var(--kitchen-primary), var(--kitchen-secondary));
        border-radius: var(--border-radius-lg);
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--white);
        font-size: 24px;
        box-shadow: var(--shadow-sm);
    }

    .title-text h1 {
        margin: 0;
        color: var(--dark-color);
        font-size: 28px;
        font-weight: 700;
    }

    .title-text p {
        margin: 5px 0 0;
        color: var(--secondary-color);
        font-size: 14px;
    }

    /* Back to Dashboard Button */
    .back-to-dashboard-btn {
        position: absolute;
        top: 20px;
        right: 20px;
        background: linear-gradient(135deg, var(--secondary-color), #5a6268);
        color: var(--white);
        border: none;
        padding: 10px 16px;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 8px;
        cursor: pointer;
        transition: var(--transition);
        box-shadow: 0 3px 10px rgba(108, 117, 125, 0.2);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        z-index: 10;
    }

    .back-to-dashboard-btn:hover {
        background: linear-gradient(135deg, #5a6268, #495057);
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(108, 117, 125, 0.3);
    }

    .back-to-dashboard-btn:active {
        transform: translateY(0);
        box-shadow: 0 3px 10px rgba(108, 117, 125, 0.2);
    }

    .back-to-dashboard-btn i {
        font-size: 12px;
        transition: transform 0.3s ease;
    }

    .back-to-dashboard-btn:hover i {
        transform: translateX(-2px);
    }

    /* Filters Section */
    .filters-section {
        margin-bottom: 30px;
    }

    .filters-container {
        background: linear-gradient(135deg, var(--white) 0%, #fefefe 100%);
        padding: 25px;
        border-radius: var(--border-radius-lg);
        box-shadow: 
            var(--shadow),
            0 0 0 1px rgba(255, 255, 255, 0.05),
            inset 0 1px 0 rgba(255, 255, 255, 0.9);
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        align-items: end;
        border: 1px solid rgba(255, 107, 53, 0.05);
        position: relative;
        overflow: hidden;
    }

    .filters-container::before {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        height: 2px;
        background: linear-gradient(90deg, var(--kitchen-primary), transparent, var(--kitchen-primary));
        opacity: 0.1;
    }

    .filter-group {
        min-width: 200px;
        flex: 1;
    }

    .filter-label {
        display: block;
        margin-bottom: 8px;
        font-weight: 600;
        color: var(--dark-color);
        font-size: 14px;
    }

    .filter-control {
        width: 100%;
        max-width: 100%;
        box-sizing: border-box;
    }

    /* Date Range Picker Specific Styling */
    .filter-control.date-range {
        overflow: hidden;
    }

    .filter-control.date-range .e-input-group {
        max-width: 100%;
        box-sizing: border-box;
    }

    .filter-control.date-range .e-input {
        font-size: 14px;
        padding: 8px 12px;
    }

    .action-buttons {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }

    .refresh-btn,
    .excel-btn {
        padding: 12px 24px;
        border-radius: var(--border-radius);
        font-weight: 600;
        font-size: 14px;
        display: flex;
        align-items: center;
        gap: 8px;
        transition: var(--transition);
        border: none;
        cursor: pointer;
        position: relative;
        overflow: hidden;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .refresh-btn {
        background: linear-gradient(135deg, var(--kitchen-primary), var(--kitchen-secondary));
        color: var(--white);
        box-shadow: 0 4px 15px rgba(255, 107, 53, 0.2);
    }

    .refresh-btn:hover {
        background: linear-gradient(135deg, var(--kitchen-secondary), #e07600);
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(255, 107, 53, 0.3);
    }

    .refresh-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s;
    }

    .refresh-btn:hover::before {
        left: 100%;
    }

    .excel-btn {
        background: linear-gradient(135deg, #217346, #1a5c37);
        color: var(--white);
        box-shadow: 0 4px 15px rgba(33, 115, 70, 0.2);
    }

    .excel-btn:hover {
        background: linear-gradient(135deg, #1a5c37, #155d31);
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(33, 115, 70, 0.3);
    }

    .excel-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s;
    }

    .excel-btn:hover::before {
        left: 100%;
    }

    /* Summary Cards */
    .summary-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .summary-card {
        background: linear-gradient(135deg, var(--white) 0%, #fefefe 100%);
        padding: 25px;
        border-radius: var(--border-radius-lg);
        box-shadow: 
            var(--shadow),
            0 0 0 1px rgba(255, 255, 255, 0.05),
            inset 0 1px 0 rgba(255, 255, 255, 0.9);
        display: flex;
        align-items: center;
        gap: 20px;
        transition: var(--transition);
        position: relative;
        overflow: hidden;
        border: 1px solid rgba(255, 107, 53, 0.05);
    }

    .summary-card::after {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 100px;
        height: 100px;
        background: radial-gradient(circle, rgba(255, 107, 53, 0.03) 0%, transparent 70%);
        border-radius: 50%;
        animation: float 6s ease-in-out infinite;
    }

    .summary-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: var(--kitchen-primary);
    }

    .summary-card:hover {
        transform: translateY(-5px);
        box-shadow: var(--shadow-lg);
    }

    .card-icon {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        color: var(--white);
        background: linear-gradient(135deg, var(--kitchen-primary), var(--kitchen-secondary));
    }

    .total-materials .card-icon {
        background: linear-gradient(135deg, var(--info-color), #138496);
    }

    .total-quantity .card-icon {
        background: linear-gradient(135deg, var(--warning-color), #e0a800);
    }

    .total-value .card-icon {
        background: linear-gradient(135deg, var(--success-color), var(--primary-dark));
    }

    .card-content {
        flex: 1;
    }

    .card-value {
        font-size: 32px;
        font-weight: 700;
        color: var(--dark-color);
        margin-bottom: 5px;
    }

    .card-label {
        font-size: 14px;
        color: var(--secondary-color);
        font-weight: 600;
    }

    .card-trend {
        font-size: 18px;
    }

    .trend-up {
        color: var(--success-color);
    }

    .trend-neutral {
        color: var(--secondary-color);
    }

    /* Mobile Charts Notice */
    .mobile-charts-notice {
        display: none;
        margin-bottom: 20px;
    }

    .notice-content {
        background: linear-gradient(135deg, #fff3cd, #ffeaa7);
        border: 1px solid #ffc107;
        border-radius: var(--border-radius-lg);
        padding: 15px 20px;
        text-align: center;
        color: #856404;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

    .notice-content i {
        font-size: 18px;
        color: #ffc107;
    }

    .notice-content p {
        margin: 0;
        font-size: 14px;
        font-weight: 500;
    }

    /* Charts Section */
    .charts-section {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
        margin-bottom: 30px;
    }

    .chart-container.full-width {
        grid-column: 1 / -1;
    }

    .chart-card {
        background: linear-gradient(135deg, var(--white) 0%, #fefefe 100%);
        border-radius: var(--border-radius-lg);
        box-shadow: 
            var(--shadow),
            0 0 0 1px rgba(255, 255, 255, 0.05),
            inset 0 1px 0 rgba(255, 255, 255, 0.9);
        overflow: hidden;
        transition: var(--transition);
        border: 1px solid rgba(255, 107, 53, 0.05);
        position: relative;
    }

    .chart-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, var(--kitchen-primary), var(--kitchen-secondary));
    }

    .chart-card:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-lg);
    }

    .chart-header {
        padding: 20px 25px;
        border-bottom: 1px solid rgba(255, 107, 53, 0.1);
    }

    .chart-header h3 {
        margin: 0 0 5px 0;
        color: var(--dark-color);
        font-size: 18px;
        font-weight: 600;
    }

    .chart-header p {
        margin: 0;
        color: var(--secondary-color);
        font-size: 14px;
    }

    .chart-content {
        padding: 15px;
    }

    /* Grid Section */
    .grid-section {
        margin-bottom: 30px;
    }

    .grid-card {
        background: linear-gradient(135deg, var(--white) 0%, #fefefe 100%);
        border-radius: var(--border-radius-lg);
        box-shadow: 
            var(--shadow),
            0 0 0 1px rgba(255, 255, 255, 0.05),
            inset 0 1px 0 rgba(255, 255, 255, 0.9);
        overflow: hidden;
        border: 1px solid rgba(255, 107, 53, 0.05);
    }

    .grid-header {
        padding: 20px 25px;
        border-bottom: 1px solid rgba(255, 107, 53, 0.1);
        background: linear-gradient(135deg, rgba(255, 107, 53, 0.02), rgba(247, 147, 30, 0.02));
    }

    .grid-header h3 {
        margin: 0 0 5px 0;
        color: var(--dark-color);
        font-size: 18px;
        font-weight: 600;
    }

    .grid-header p {
        margin: 0;
        color: var(--secondary-color);
        font-size: 14px;
    }

    .grid-content {
        padding: 20px;
    }

    /* Modern Grid Styling */
    .modern-grid .e-grid .e-gridheader {
        background: linear-gradient(135deg, rgba(255, 107, 53, 0.05), rgba(247, 147, 30, 0.05));
        border-bottom: 2px solid rgba(255, 107, 53, 0.1);
    }

    .modern-grid .e-grid .e-headercell {
        font-weight: 600;
        color: var(--dark-color);
        border-right: 1px solid rgba(255, 107, 53, 0.1);
    }

    .modern-grid .e-grid .e-row:hover {
        background: linear-gradient(135deg, rgba(255, 107, 53, 0.02), rgba(247, 147, 30, 0.02));
        cursor: pointer;
    }

    .modern-grid .e-grid .e-altrow {
        background: rgba(248, 249, 250, 0.5);
    }

    /* Action Button Styling */
    .action-btn-grid {
        background: linear-gradient(135deg, var(--info-color), #138496);
        color: var(--white);
        border: none;
        border-radius: var(--border-radius);
        padding: 6px 12px;
        font-size: 12px;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 4px;
        cursor: pointer;
        transition: var(--transition);
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .action-btn-grid:hover {
        background: linear-gradient(135deg, #138496, #117a8b);
        transform: translateY(-1px);
        box-shadow: 0 4px 10px rgba(23, 162, 184, 0.3);
    }

    .action-btn-grid i {
        font-size: 10px;
    }

    .action-btn-grid span {
        font-size: 11px;
    }

    /* Responsive Design */
    @@media (max-width: 1024px) {
        .charts-section {
            grid-template-columns: 1fr;
        }
        
        .summary-cards {
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        }
    }

    @@media (max-width: 768px) {
        .kitchen-issue-report-container {
            padding: 15px;
        }

        .page-header .header-content {
            padding: 20px;
        }

        .title-section {
            flex-direction: column;
            text-align: center;
            gap: 15px;
        }

        .back-to-dashboard-btn {
            position: static;
            margin-top: 15px;
            align-self: center;
        }

        .filters-container {
            flex-direction: column;
            gap: 15px;
        }

        .filter-group {
            min-width: unset;
        }

        .action-buttons {
            justify-content: center;
        }

        .summary-cards {
            grid-template-columns: 1fr;
            gap: 15px;
        }

        .summary-card {
            padding: 20px;
        }

        .card-value {
            font-size: 24px;
        }

        .mobile-charts-notice {
            display: block;
        }

        .charts-section {
            display: none;
        }

        .grid-content {
            padding: 10px;
            overflow-x: auto;
        }
    }

    @@media (max-width: 480px) {
        .kitchen-issue-report-container {
            padding: 10px;
        }

        .page-header .header-content {
            padding: 15px;
        }

        .title-text h1 {
            font-size: 24px;
        }

        .icon-wrapper {
            width: 50px;
            height: 50px;
            font-size: 20px;
        }

        .summary-card {
            padding: 15px;
        }

        .card-icon {
            width: 50px;
            height: 50px;
            font-size: 20px;
        }

        .card-value {
            font-size: 20px;
        }

        .refresh-btn,
        .excel-btn {
            padding: 10px 16px;
            font-size: 12px;
        }
    }

    /* Animation Keyframes */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes float {
        0%, 100% {
            transform: translateY(0px);
        }
        50% {
            transform: translateY(-10px);
        }
    }

    @@keyframes shimmer {
        0% {
            background-position: -468px 0;
        }
        100% {
            background-position: 468px 0;
        }
    }

    .summary-card,
    .chart-card,
    .grid-card {
        animation: fadeInUp 0.6s ease-out;
    }

    .summary-card:nth-child(1) { animation-delay: 0.1s; }
    .summary-card:nth-child(2) { animation-delay: 0.2s; }
    .summary-card:nth-child(3) { animation-delay: 0.3s; }
    .summary-card:nth-child(4) { animation-delay: 0.4s; }

    .chart-card:nth-child(1) { animation-delay: 0.5s; }
    .chart-card:nth-child(2) { animation-delay: 0.6s; }
    .chart-card:nth-child(3) { animation-delay: 0.7s; }
</style>
