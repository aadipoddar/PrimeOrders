@page "/Reports/Kitchen-Issue/View/{KitchenIssueId:int}"

@using PrimeBakesLibrary.Models.Inventory
@using PrimeBakesLibrary.Models.Common
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using PrimeBakes.Shared.Services
@using Microsoft.AspNetCore.Components

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />

<PageTitle>Kitchen Issue Details - @(_kitchenIssueOverview?.TransactionNo ?? "Loading...") - PrimeBakes</PageTitle>

@if (_isLoading)
{
    <div class="loading-overlay">
        <div class="loading-content">
            <div class="circular-dots-loader">
                <div class="dot dot-1"></div>
                <div class="dot dot-2"></div>
                <div class="dot dot-3"></div>
            </div>
            <h3 class="loading-text">Loading Kitchen Issue Details...</h3>
            <p>Please wait while we gather your data</p>
        </div>
    </div>
}
else if (_kitchenIssueOverview is null)
{
    <div class="error-container">
        <div class="error-content">
            <i class="fas fa-exclamation-triangle"></i>
            <h2>Kitchen Issue Not Found</h2>
            <p>The kitchen issue you're looking for could not be found or you don't have permission to view it.</p>
            <button @onclick='() => NavigationManager.NavigateTo("/Reports/Kitchen-Issue")' class="btn-back">
                <i class="fas fa-arrow-left"></i>
                <span>Back to Kitchen Issues</span>
            </button>
        </div>
    </div>
}
else
{
    <div class="kitchen-issue-view-container">
        <!-- Header Section -->
        <div class="page-header">
            <div class="header-info">
                <div class="issue-title">
                    <h1>Kitchen Issue Details</h1>
                    <div class="transaction-number">Transaction: @_kitchenIssueOverview.TransactionNo</div>
                </div>
                <div class="issue-status-header">
                    <div class="status-badge status-active">
                        <i class="fas fa-check-circle"></i>
                        <span>Active</span>
                    </div>
                </div>
            </div>
            <button @onclick='() => NavigationManager.NavigateTo("/Reports/Kitchen-Issue")' class="back-btn">
                <i class="fas fa-arrow-left"></i>
                <span>Back to Reports</span>
            </button>
        </div>

        <!-- Kitchen Issue Information Cards -->
        <div class="issue-info-section">
            <div class="section-header">
                <h2><i class="fas fa-info-circle"></i> Issue Information</h2>
            </div>

            <div class="info-cards-grid">
                <!-- Basic Information -->
                <div class="info-card-group">
                    <h3>Basic Details</h3>
                    <div class="info-cards">
                        <div class="info-card">
                            <div class="info-icon">
                                <i class="fas fa-hashtag"></i>
                            </div>
                            <div class="info-content">
                                <div class="info-label">Transaction Number</div>
                                <div class="info-value">@_kitchenIssueOverview.TransactionNo</div>
                            </div>
                        </div>

                        <div class="info-card">
                            <div class="info-icon">
                                <i class="fas fa-calendar-alt"></i>
                            </div>
                            <div class="info-content">
                                <div class="info-label">Issue Date</div>
                                <div class="info-value">@_kitchenIssueOverview.IssueDate.ToString("dd MMM yyyy")</div>
                                <div class="info-subtext">@_kitchenIssueOverview.IssueDate.ToString("dddd, hh:mm tt")</div>
                            </div>
                        </div>

                        <div class="info-card">
                            <div class="info-icon">
                                <i class="fas fa-utensils"></i>
                            </div>
                            <div class="info-content">
                                <div class="info-label">Kitchen</div>
                                <div class="info-value">@_kitchenIssueOverview.KitchenName</div>
                            </div>
                        </div>

                        <div class="info-card">
                            <div class="info-icon">
                                <i class="fas fa-user"></i>
                            </div>
                            <div class="info-content">
                                <div class="info-label">Issued By</div>
                                <div class="info-value">@_kitchenIssueOverview.UserName</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Statistics -->
                <div class="info-card-group">
                    <h3>Issue Statistics</h3>
                    <div class="info-cards">
                        <div class="info-card stat-card">
                            <div class="info-icon">
                                <i class="fas fa-boxes"></i>
                            </div>
                            <div class="info-content">
                                <div class="info-label">Total Materials</div>
                                <div class="info-value stat-number">@_kitchenIssueOverview.TotalProducts</div>
                            </div>
                        </div>

                        <div class="info-card stat-card">
                            <div class="info-icon">
                                <i class="fas fa-weight"></i>
                            </div>
                            <div class="info-content">
                                <div class="info-label">Total Quantity</div>
                                <div class="info-value stat-number">@_kitchenIssueOverview.TotalQuantity.ToString("N2")</div>
                            </div>
                        </div>

                        <div class="info-card stat-card">
                            <div class="info-icon">
                                <i class="fas fa-rupee-sign"></i>
                            </div>
                            <div class="info-content">
                                <div class="info-label">Total Value</div>
                                <div class="info-value stat-number">₹@_kitchenIssueOverview.TotalAmount.ToString("N2")</div>
                            </div>
                        </div>

                        <div class="info-card stat-card">
                            <div class="info-icon">
                                <i class="fas fa-clock"></i>
                            </div>
                            <div class="info-content">
                                <div class="info-label">Created At</div>
                                <div class="info-value">@_kitchenIssueOverview.CreatedAt.ToString("dd MMM yyyy")</div>
                                <div class="info-subtext">@_kitchenIssueOverview.CreatedAt.ToString("hh:mm tt")</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Remarks -->
                @if (!string.IsNullOrWhiteSpace(_kitchenIssueOverview.Remarks))
                {
                    <div class="info-card-group full-width">
                        <div class="remarks-card">
                            <div class="remarks-header">
                                <i class="fas fa-sticky-note"></i>
                                <span>Remarks</span>
                            </div>
                            <div class="remarks-content">
                                @_kitchenIssueOverview.Remarks
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Raw Materials Section -->
        <div class="materials-section">
            <div class="section-header">
                <h2><i class="fas fa-list"></i> Raw Materials Issued</h2>
            </div>

            <!-- Materials Summary -->
            <div class="materials-summary">
                <div class="summary-card highlight">
                    <div class="summary-icon">
                        <i class="fas fa-boxes"></i>
                    </div>
                    <div class="summary-content">
                        <div class="summary-value">@_detailedKitchenIssueMaterials.Count</div>
                        <div class="summary-label">Materials</div>
                    </div>
                </div>

                <div class="summary-card">
                    <div class="summary-icon">
                        <i class="fas fa-weight"></i>
                    </div>
                    <div class="summary-content">
                        <div class="summary-value">@_detailedKitchenIssueMaterials.Sum(x => x.Quantity).ToString("N1")</div>
                        <div class="summary-label">Total Quantity</div>
                    </div>
                </div>

                <div class="summary-card">
                    <div class="summary-icon">
                        <i class="fas fa-rupee-sign"></i>
                    </div>
                    <div class="summary-content">
                        <div class="summary-value">₹@_detailedKitchenIssueMaterials.Sum(x => x.Total).ToString("N0")</div>
                        <div class="summary-label">Total Value</div>
                    </div>
                </div>

                <div class="summary-card">
                    <div class="summary-icon">
                        <i class="fas fa-calculator"></i>
                    </div>
                    <div class="summary-content">
                        <div class="summary-value">₹@(_detailedKitchenIssueMaterials.Count > 0 ? _detailedKitchenIssueMaterials.Average(x => x.Total).ToString("N0") : "0")</div>
                        <div class="summary-label">Avg Value</div>
                    </div>
                </div>
            </div>

            <!-- Materials Grid -->
            <div class="materials-grid-section">
                <SfGrid DataSource="_detailedKitchenIssueMaterials"
                      AllowSorting="true"
                      AllowResizing="true"
                      CssClass="materials-grid">
                    <GridColumns>
                        <GridColumn HeaderText="Material" Width="300">
                            <Template>
                                @{
                                    var material = (context as DetailedKitchenIssueMaterialModel);
                                }
                                <div class="material-name-display">
                                    <i class="fas fa-cube material-icon"></i>
                                    <div>
                                        <div class="material-name">@material.MaterialName</div>
                                        <div class="material-code">@material.MaterialCode</div>
                                    </div>
                                </div>
                            </Template>
                        </GridColumn>
                        
                        <GridColumn HeaderText="Category" Width="150">
                            <Template>
                                @{
                                    var material = (context as DetailedKitchenIssueMaterialModel);
                                }
                                <span class="category-badge">@material.CategoryName</span>
                            </Template>
                        </GridColumn>

                        <GridColumn Field="@nameof(DetailedKitchenIssueMaterialModel.Quantity)" 
                                  HeaderText="Quantity" Width="120" 
                                  Format="N2" TextAlign="TextAlign.Right" />

                        <GridColumn Field="@nameof(DetailedKitchenIssueMaterialModel.Unit)" 
                                  HeaderText="Unit" Width="80" 
                                  TextAlign="TextAlign.Center" />

                        <GridColumn Field="@nameof(DetailedKitchenIssueMaterialModel.Rate)" 
                                  HeaderText="Rate" Width="120" 
                                  Format="C2" TextAlign="TextAlign.Right" />

                        <GridColumn HeaderText="Total" Width="140" TextAlign="TextAlign.Right">
                            <Template>
                                @{
                                    var material = (context as DetailedKitchenIssueMaterialModel);
                                }
                                <span class="total-amount">₹@material.Total.ToString("N2")</span>
                            </Template>
                        </GridColumn>
                    </GridColumns>
                </SfGrid>
            </div>
        </div>

        <!-- Action Buttons Section -->
        <div class="actions-section">
            <div class="section-header actions-header">
                <h2><i class="fas fa-cog"></i> Actions</h2>
            </div>

            <div class="action-buttons">
                <button @onclick="EditKitchenIssue" 
                      class="action-btn btn-edit" 
                      disabled="@(_isProcessing || _user.LocationId != 1 || !_user.Admin)">
                    <i class="fas fa-edit"></i>
                    <span>Edit Issue</span>
                </button>

                <button @onclick="DeleteKitchenIssue" 
                      class="action-btn btn-delete" 
                      disabled="@(_isProcessing || _user.LocationId != 1 || !_user.Admin)">
                    <i class="fas fa-trash-alt"></i>
                    <span>Delete Issue</span>
                </button>

                <button @onclick="PrintPDF" 
                      class="action-btn btn-pdf" 
                      disabled="@_isProcessing">
                    @if (_isProcessing)
                    {
                        <i class="fas fa-spinner fa-spin"></i>
                    }
                    else
                    {
                        <i class="fas fa-file-pdf"></i>
                    }
                    <span>Print PDF</span>
                </button>
            </div>

            @if (_user.LocationId != 1 || !_user.Admin)
            {
                <div class="permission-notice">
                    <i class="fas fa-info-circle"></i>
                    <span>Edit and delete actions are restricted to main location administrators.</span>
                </div>
            }
        </div>
    </div>
}

<!-- Delete Confirmation Dialog -->
<SfDialog @ref="_deleteConfirmDialog" 
          @bind-Visible="_showDeleteConfirm"
          Width="500px"
          Height="auto"
          IsModal="true"
          AllowDragging="false"
          CssClass="delete-confirm-dialog">
    <DialogTemplates>
        <Header>
            <div class="dialog-header">
                <i class="fas fa-exclamation-triangle warning-icon"></i>
                <span>Confirm Deletion</span>
            </div>
        </Header>
        <Content>
            <div class="dialog-content">
                <div class="warning-message">
                    <p>Are you sure you want to delete this kitchen issue?</p>
                    <div class="issue-highlight">
                        <strong>Transaction:</strong> @_kitchenIssueOverview?.TransactionNo<br/>
                        <strong>Kitchen:</strong> @_kitchenIssueOverview?.KitchenName<br/>
                        <strong>Date:</strong> @_kitchenIssueOverview?.IssueDate.ToString("dd MMM yyyy")
                    </div>
                </div>
                <div class="warning-notice">
                    <i class="fas fa-exclamation-triangle"></i>
                    <span>This action cannot be undone. The kitchen issue will be marked as inactive.</span>
                </div>
            </div>
        </Content>
        <FooterTemplate>
            <div class="dialog-footer">
                <button @onclick="CancelDeleteKitchenIssue" 
                      class="dialog-btn btn-cancel" 
                      disabled="@_isProcessing">
                    <i class="fas fa-times"></i>
                    <span>Cancel</span>
                </button>
                <button @onclick="ConfirmDeleteKitchenIssue" 
                      class="dialog-btn btn-confirm" 
                      disabled="@_isProcessing">
                    @if (_isProcessing)
                    {
                        <i class="fas fa-spinner fa-spin"></i>
                    }
                    else
                    {
                        <i class="fas fa-trash-alt"></i>
                    }
                    <span>Delete Issue</span>
                </button>
            </div>
        </FooterTemplate>
    </DialogTemplates>
</SfDialog>

<style>
    :root {
        --kitchen-primary: #ff6b35;
        --kitchen-secondary: #f7931e;
        --kitchen-light: rgba(255, 107, 53, 0.1);
        --secondary-color: #6c757d;
        --success-color: #28a745;
        --info-color: #17a2b8;
        --warning-color: #ffc107;
        --danger-color: #dc3545;
        --dark-color: #343a40;
        --light-color: #f8f9fa;
        --white: #ffffff;
        --shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        --shadow-lg: 0 4px 12px rgba(0, 0, 0, 0.15);
        --border-radius: 0.375rem;
        --border-radius-lg: 0.5rem;
        --transition: all 0.3s ease;
    }

    .kitchen-issue-view-container {
        padding: 20px;
        background: 
            radial-gradient(circle at 20% 80%, rgba(255, 107, 53, 0.03) 0%, transparent 50%),
            radial-gradient(circle at 80% 20%, rgba(247, 147, 30, 0.03) 0%, transparent 50%),
            radial-gradient(circle at 40% 40%, rgba(255, 193, 7, 0.02) 0%, transparent 50%),
            linear-gradient(135deg, #f8f9fa 0%, #e9ecef 30%, #f1f3f4 70%, #fff4e6 100%);
        min-height: 100vh;
        animation: fadeInUp 0.5s ease-out;
    }

    /* Loading & Error States */
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255, 255, 255, 0.95);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        backdrop-filter: blur(5px);
    }

    .loading-content {
        text-align: center;
        padding: 30px;
        background: var(--white);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow-lg);
        border: 1px solid rgba(255, 107, 53, 0.1);
    }

    .circular-dots-loader {
        display: inline-block;
        position: relative;
        width: 50px;
        height: 50px;
        margin-bottom: 20px;
    }

    .circular-dots-loader .dot {
        display: block;
        position: absolute;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: var(--kitchen-primary);
        animation: dotPulse 1.2s infinite ease-in-out both;
    }

    .circular-dots-loader .dot-1 {
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        animation-delay: -0.6s;
    }

    .circular-dots-loader .dot-2 {
        top: 50%;
        right: 0;
        transform: translateY(-50%);
        animation-delay: -0.4s;
    }

    .circular-dots-loader .dot-3 {
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        animation-delay: -0.2s;
    }

    .loading-text {
        color: var(--dark-color);
        font-size: 16px;
        font-weight: 600;
        margin: 0;
    }

    .error-container {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        padding: 20px;
    }

    .error-content {
        text-align: center;
        padding: 60px 40px;
        background: var(--white);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow-lg);
        border: 1px solid #e9ecef;
        max-width: 500px;
    }

    .error-content i {
        font-size: 64px;
        color: var(--warning-color);
        margin-bottom: 20px;
    }

    .error-content h2 {
        color: var(--dark-color);
        margin-bottom: 15px;
        font-size: 28px;
    }

    .error-content p {
        color: var(--secondary-color);
        margin-bottom: 30px;
        font-size: 16px;
    }

    /* Header Section */
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        padding: 25px 30px;
        background: linear-gradient(135deg, var(--kitchen-primary), var(--kitchen-secondary));
        border-radius: var(--border-radius-lg);
        color: var(--white);
        box-shadow: var(--shadow-lg);
    }

    .back-btn {
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 12px 20px;
        background: rgba(255, 255, 255, 0.2);
        color: var(--white);
        border: none;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        backdrop-filter: blur(10px);
    }

    .back-btn:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: translateY(-2px);
    }

    .btn-back {
        display: inline-flex;
        align-items: center;
        gap: 10px;
        padding: 12px 24px;
        background: var(--kitchen-primary);
        color: var(--white);
        border: none;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
    }

    .btn-back:hover {
        background: var(--kitchen-secondary);
        transform: translateY(-2px);
    }

    .header-info {
        display: flex;
        align-items: center;
        gap: 30px;
    }

    .issue-title h1 {
        margin: 0 0 5px 0;
        font-size: 28px;
        font-weight: 700;
    }

    .transaction-number {
        font-size: 18px;
        font-weight: 500;
        opacity: 0.9;
    }

    .issue-status-header .status-badge {
        padding: 10px 20px;
        border-radius: 25px;
        font-size: 14px;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 8px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        backdrop-filter: blur(10px);
    }

    .status-badge.status-active {
        background: rgba(34, 139, 34, 0.2);
        color: #90EE90;
    }

    /* Section Headers */
    .section-header {
        margin-bottom: 25px;
    }

    .section-header h2 {
        display: flex;
        align-items: center;
        gap: 12px;
        font-size: 22px;
        font-weight: 700;
        color: var(--dark-color);
        margin: 0;
        padding-bottom: 10px;
        border-bottom: 3px solid var(--kitchen-primary);
    }

    .section-header h2 i {
        color: var(--kitchen-primary);
    }

    /* Issue Information Section */
    .issue-info-section {
        margin-bottom: 40px;
    }

    .info-cards-grid {
        display: grid;
        gap: 30px;
    }

    .info-card-group {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        padding: 25px;
        box-shadow: var(--shadow);
        border: 1px solid #e9ecef;
        transition: var(--transition);
    }

    .info-card-group:hover {
        box-shadow: var(--shadow-lg);
        transform: translateY(-2px);
    }

    .info-card-group.full-width {
        grid-column: 1 / -1;
    }

    .info-card-group h3 {
        margin: 0 0 20px 0;
        font-size: 16px;
        font-weight: 700;
        color: var(--kitchen-primary);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        border-bottom: 2px solid var(--kitchen-light);
        padding-bottom: 8px;
    }

    .info-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 15px;
    }

    .info-card {
        display: flex;
        align-items: center;
        gap: 15px;
        padding: 15px;
        background: #f8f9fa;
        border-radius: var(--border-radius);
        border: 1px solid #e9ecef;
        transition: var(--transition);
    }

    .info-card:hover {
        background: var(--kitchen-light);
        border-color: var(--kitchen-primary);
        transform: translateY(-1px);
    }

    .info-card.stat-card {
        background: linear-gradient(135deg, var(--kitchen-light), rgba(255, 107, 53, 0.05));
        border-color: var(--kitchen-primary);
    }

    .info-icon {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: var(--kitchen-primary);
        color: var(--white);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 16px;
        flex-shrink: 0;
    }

    .info-content {
        flex: 1;
    }

    .info-label {
        font-size: 12px;
        font-weight: 600;
        color: var(--secondary-color);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 4px;
    }

    .info-value {
        font-size: 16px;
        font-weight: 600;
        color: var(--dark-color);
        line-height: 1.2;
    }

    .info-value.stat-number {
        font-size: 20px;
        font-weight: 700;
        color: var(--kitchen-primary);
    }

    .info-subtext {
        font-size: 14px;
        color: var(--secondary-color);
        margin-top: 2px;
    }

    /* Remarks Card */
    .remarks-card {
        background: #fff9c4;
        border: 1px solid #ffc107;
        border-radius: var(--border-radius);
        overflow: hidden;
    }

    .remarks-header {
        background: var(--warning-color);
        color: var(--dark-color);
        padding: 10px 15px;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .remarks-content {
        padding: 15px;
        font-style: italic;
        color: #856404;
        line-height: 1.5;
    }

    /* Materials Section */
    .materials-section {
        margin-bottom: 40px;
    }

    .materials-summary {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .summary-card {
        display: flex;
        align-items: center;
        gap: 15px;
        padding: 20px;
        background: var(--white);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow);
        border: 1px solid #e9ecef;
        transition: var(--transition);
    }

    .summary-card:hover {
        transform: translateY(-3px);
        box-shadow: var(--shadow-lg);
    }

    .summary-card.highlight {
        background: linear-gradient(135deg, var(--kitchen-primary), var(--kitchen-secondary));
        color: var(--white);
        border: none;
    }

    .summary-icon {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: var(--kitchen-light);
        color: var(--kitchen-primary);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        flex-shrink: 0;
    }

    .summary-card.highlight .summary-icon {
        background: rgba(255, 255, 255, 0.2);
        color: var(--white);
    }

    .summary-content {
        text-align: left;
    }

    .summary-value {
        font-size: 24px;
        font-weight: 700;
        color: var(--kitchen-primary);
        line-height: 1;
        margin-bottom: 5px;
    }

    .summary-card.highlight .summary-value {
        color: var(--white);
    }

    .summary-label {
        font-size: 14px;
        font-weight: 500;
        color: var(--secondary-color);
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .summary-card.highlight .summary-label {
        color: rgba(255, 255, 255, 0.9);
    }

    /* Materials Grid */
    .materials-grid-section {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        overflow: hidden;
        box-shadow: var(--shadow);
        border: 1px solid #e9ecef;
    }

    .materials-grid .e-grid {
        border: none;
    }

    .materials-grid .e-grid .e-gridheader {
        background: linear-gradient(135deg, var(--kitchen-primary), var(--kitchen-secondary));
        color: var(--white);
        border: none;
    }

    .materials-grid .e-grid .e-headercell {
        background: transparent;
        color: var(--white);
        font-weight: 700;
        border-right: 1px solid rgba(255, 255, 255, 0.2);
        border-bottom: none;
    }

    .materials-grid .e-grid .e-headercell:last-child {
        border-right: none;
    }

    .materials-grid .e-grid .e-row {
        border-bottom: 1px solid #f1f3f4;
    }

    .materials-grid .e-grid .e-row:hover {
        background: var(--kitchen-light);
    }

    .materials-grid .e-grid .e-altrow {
        background: #f8f9fa;
    }

    .materials-grid .e-grid .e-altrow:hover {
        background: var(--kitchen-light);
    }

    .material-name-display {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .material-icon {
        color: var(--kitchen-primary);
        font-size: 16px;
    }

    .material-name {
        font-weight: 500;
        line-height: 1.2;
    }

    .material-code {
        font-size: 12px;
        color: var(--secondary-color);
        font-weight: 400;
    }

    .category-badge {
        display: inline-block;
        padding: 4px 12px;
        background: linear-gradient(135deg, var(--info-color), #138496);
        color: var(--white);
        border-radius: 15px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .total-amount {
        font-weight: 700;
        color: var(--kitchen-primary);
        font-size: 16px;
    }

    /* Actions Section */
    .actions-section {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        padding: 30px;
        box-shadow: var(--shadow);
        border: 1px solid #e9ecef;
    }

    .actions-header h2 {
        margin-bottom: 25px;
    }

    .action-buttons {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 25px;
    }

    .action-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 12px;
        padding: 15px 25px;
        border: none;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        text-decoration: none;
        min-height: 52px;
        position: relative;
        overflow: hidden;
    }

    .action-btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none !important;
    }

    .action-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s;
    }

    .action-btn:hover:not(:disabled)::before {
        left: 100%;
    }

    .btn-edit {
        background: linear-gradient(135deg, #007bff, #0056b3);
        color: var(--white);
        box-shadow: 0 4px 15px rgba(0, 123, 255, 0.2);
    }

    .btn-edit:hover:not(:disabled) {
        background: linear-gradient(135deg, #0056b3, #004085);
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(0, 123, 255, 0.3);
    }

    .btn-delete {
        background: linear-gradient(135deg, var(--danger-color), #c82333);
        color: var(--white);
        box-shadow: 0 4px 15px rgba(220, 53, 69, 0.2);
    }

    .btn-delete:hover:not(:disabled) {
        background: linear-gradient(135deg, #c82333, #a71e2a);
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(220, 53, 69, 0.3);
    }

    .btn-pdf {
        background: linear-gradient(135deg, var(--kitchen-primary), var(--kitchen-secondary));
        color: var(--white);
        box-shadow: 0 4px 15px rgba(255, 107, 53, 0.2);
    }

    .btn-pdf:hover:not(:disabled) {
        background: linear-gradient(135deg, var(--kitchen-secondary), #e07600);
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(255, 107, 53, 0.3);
    }

    .btn-excel {
        background: linear-gradient(135deg, #217346, #1a5c37);
        color: var(--white);
        box-shadow: 0 4px 15px rgba(33, 115, 70, 0.2);
    }

    .btn-excel:hover:not(:disabled) {
        background: linear-gradient(135deg, #1a5c37, #155d31);
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(33, 115, 70, 0.3);
    }

    .permission-notice {
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 18px 25px;
        background: linear-gradient(135deg, #fff3cd, #ffeaa7);
        border: 1px solid var(--warning-color);
        border-radius: var(--border-radius);
        color: #856404;
        font-size: 14px;
        font-weight: 500;
    }

    .permission-notice i {
        color: var(--warning-color);
        font-size: 18px;
    }

    /* Delete Confirmation Dialog Styles */
    .delete-confirm-dialog .e-dialog {
        border-radius: var(--border-radius-lg);
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        border: none;
    }

    .dialog-header {
        display: flex;
        align-items: center;
        gap: 12px;
        font-size: 18px;
        font-weight: 600;
        color: var(--danger-color);
    }

    .warning-icon {
        color: var(--danger-color);
        font-size: 20px;
    }

    .dialog-content {
        padding: 20px 0;
    }

    .warning-message p {
        font-size: 16px;
        color: var(--dark-color);
        margin-bottom: 20px;
        line-height: 1.5;
    }

    .issue-highlight {
        background: #f8f9fa;
        border: 1px solid #e9ecef;
        border-radius: var(--border-radius);
        padding: 15px;
        margin-bottom: 20px;
        font-size: 14px;
        line-height: 1.6;
    }

    .warning-notice {
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 15px;
        background: linear-gradient(135deg, #fff3cd, #ffeaa7);
        border: 1px solid var(--warning-color);
        border-radius: var(--border-radius);
        color: #856404;
    }

    .warning-notice i {
        color: var(--warning-color);
        font-size: 16px;
        flex-shrink: 0;
    }

    .warning-notice span {
        font-size: 14px;
        font-weight: 500;
        line-height: 1.4;
    }

    .dialog-footer {
        display: flex;
        justify-content: flex-end;
        gap: 15px;
        padding-top: 20px;
    }

    .dialog-btn {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 12px 24px;
        border: none;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        min-width: 120px;
        justify-content: center;
    }

    .dialog-btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }

    .btn-cancel {
        background: var(--secondary-color);
        color: var(--white);
    }

    .btn-cancel:hover:not(:disabled) {
        background: #5a6268;
        transform: translateY(-2px);
    }

    .btn-confirm {
        background: var(--danger-color);
        color: var(--white);
    }

    .btn-confirm:hover:not(:disabled) {
        background: #c82333;
        transform: translateY(-2px);
    }

    .fa-spinner {
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    /* Animations */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes dotPulse {
        0%, 80%, 100% {
            transform: scale(0.8);
        }
        40% {
            transform: scale(1);
        }
    }

    /* Responsive Design */
    @@media (max-width: 1024px) {
        .info-cards {
            grid-template-columns: 1fr;
        }
        
        .materials-summary {
            grid-template-columns: repeat(2, 1fr);
        }
        
        .action-buttons {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @@media (max-width: 768px) {
        .kitchen-issue-view-container {
            padding: 15px;
        }
        
        .page-header {
            flex-direction: column;
            gap: 20px;
            text-align: center;
        }
        
        .header-info {
            flex-direction: column;
            gap: 15px;
        }
        
        .materials-summary {
            grid-template-columns: 1fr;
        }
        
        .action-buttons {
            grid-template-columns: 1fr;
        }
        
        .info-card-group {
            padding: 20px;
        }
        
        .summary-card {
            padding: 15px;
        }
    }

    @@media (max-width: 480px) {
        .kitchen-issue-view-container {
            padding: 10px;
        }
        
        .page-header {
            padding: 20px;
        }
        
        .issue-title h1 {
            font-size: 24px;
        }
        
        .section-header h2 {
            font-size: 20px;
        }
        
        .info-card {
            flex-direction: column;
            text-align: center;
            gap: 12px;
        }
        
        .summary-card {
            flex-direction: column;
            text-align: center;
            gap: 12px;
        }
        
        .action-btn {
            padding: 12px 20px;
            font-size: 13px;
        }
    }
</style>
