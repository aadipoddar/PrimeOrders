@page "/Reports/Kitchen-Production/View/{ProductionId:int}"

@using PrimeBakes.Shared.Services
@using PrimeBakesLibrary.Models.Common
@using PrimeBakesLibrary.Models.Inventory.Kitchen
@using PrimeBakesLibrary.Models.Product
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Popups

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />

<PageTitle>Kitchen Production Details - PrimeBakes</PageTitle>

@if (_isLoading)
{
    <div class="loading-overlay">
        <div class="loading-content">
            <div class="loading-spinner">
                <div class="spinner-circle"></div>
                <div class="spinner-circle"></div>
                <div class="spinner-circle"></div>
            </div>
            <h3>Loading Production Details...</h3>
            <p>Please wait while we fetch the information</p>
        </div>
    </div>
}

<div class="kitchen-production-view-container">
    <!-- Page Header -->
    <div class="page-header">
        <div class="header-content">
            <div class="header-left">
                <div class="title-section">
                    <div class="icon-wrapper">
                        <i class="fas fa-eye"></i>
                    </div>
                    <div class="title-text">
                        <h1>Production Details</h1>
                        <p>View and manage kitchen production information</p>
                    </div>
                </div>
            </div>

            <div class="header-actions">
                <button @onclick='() => NavigationManager.NavigateTo("/Reports/Kitchen-Production")' class="back-btn">
                    <i class="fas fa-arrow-left"></i>
                    <span>Back</span>
                </button>

                @if (_kitchenProductionOverview != null)
                {
                    <div class="action-buttons">
                        @if (_user?.LocationId == 1 && _user?.Admin == true)
                        {
                            <button @onclick="EditKitchenProduction" class="edit-btn" disabled="@_isProcessing">
                                <i class="fas fa-edit"></i>
                                <span>Edit</span>
                            </button>

                            <button @onclick="DeleteKitchenProduction" class="delete-btn" disabled="@_isProcessing">
                                <i class="fas fa-trash"></i>
                                <span>Delete</span>
                            </button>
                        }

                        <button @onclick="PrintPDF" class="print-btn" disabled="@_isProcessing">
                            <i class="fas fa-print"></i>
                            <span>@(_isProcessing ? "Processing..." : "Print")</span>
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>

    @if (_kitchenProductionOverview != null)
    {
        <!-- Production Information Cards -->
        <div class="info-cards-section">
            <div class="info-card primary-info">
                <div class="card-header">
                    <div class="card-icon">
                        <i class="fas fa-industry"></i>
                    </div>
                    <div class="card-title">
                        <h3>Production Information</h3>
                        <p>Basic production details and status</p>
                    </div>
                </div>
                <div class="card-content">
                    <div class="info-grid">
                        <div class="info-item">
                            <label>Transaction No:</label>
                            <span class="transaction-badge">@_kitchenProductionOverview.TransactionNo</span>
                        </div>
                        <div class="info-item">
                            <label>Production Date:</label>
                            <span>@_kitchenProductionOverview.ProductionDate.ToString("dd/MM/yyyy HH:mm")</span>
                        </div>
                        <div class="info-item">
                            <label>Kitchen:</label>
                            <span class="kitchen-badge">@_kitchenProductionOverview.KitchenName</span>
                        </div>
                        <div class="info-item">
                            <label>Produced By:</label>
                            <span>@_kitchenProductionOverview.UserName</span>
                        </div>
                        <div class="info-item">
                            <label>Status:</label>
                            <span class="status-badge active">Active</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="info-card summary-info">
                <div class="card-header">
                    <div class="card-icon">
                        <i class="fas fa-chart-bar"></i>
                    </div>
                    <div class="card-title">
                        <h3>Production Summary</h3>
                        <p>Quantities and totals overview</p>
                    </div>
                </div>
                <div class="card-content">
                    <div class="summary-stats">
                        <div class="stat-item products">
                            <div class="stat-icon">
                                <i class="fas fa-boxes"></i>
                            </div>
                            <div class="stat-details">
                                <div class="stat-value">@_detailedKitchenProductionProducts.Count</div>
                                <div class="stat-label">Products</div>
                            </div>
                        </div>
                        <div class="stat-item quantity">
                            <div class="stat-icon">
                                <i class="fas fa-weight"></i>
                            </div>
                            <div class="stat-details">
                                <div class="stat-value">@_detailedKitchenProductionProducts.Sum(x => x.Quantity).ToString("N1")</div>
                                <div class="stat-label">Total Qty</div>
                            </div>
                        </div>
                        <div class="stat-item value">
                            <div class="stat-icon">
                                <i class="fas fa-dollar-sign"></i>
                            </div>
                            <div class="stat-details">
                                <div class="stat-value">₹@_detailedKitchenProductionProducts.Sum(x => x.Total).ToString("N0")</div>
                                <div class="stat-label">Total Value</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrWhiteSpace(_kitchenProductionOverview.Remarks))
            {
                <div class="info-card remarks-info">
                    <div class="card-header">
                        <div class="card-icon">
                            <i class="fas fa-comment-alt"></i>
                        </div>
                        <div class="card-title">
                            <h3>Remarks</h3>
                            <p>Additional notes and comments</p>
                        </div>
                    </div>
                    <div class="card-content">
                        <div class="remarks-content">
                            @_kitchenProductionOverview.Remarks
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Products Grid -->
        <div class="grid-section">
            <div class="grid-card">
                <div class="grid-header">
                    <div class="grid-title">
                        <div class="title-icon">
                            <i class="fas fa-list-alt"></i>
                        </div>
                        <div class="title-text">
                            <h3>Production Products</h3>
                            <p>Detailed list of products produced</p>
                        </div>
                    </div>
                </div>
                <div class="grid-content">
                    <SfGrid DataSource="_detailedKitchenProductionProducts"
                          AllowSorting="true"
                          AllowFiltering="true"
                          AllowResizing="true"
                          AllowPaging="true"
                          CssClass="modern-grid production-grid">
                        <GridPageSettings PageSize="10" PageSizes="@(new int[] { 10, 25, 50 })" />
                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu" />
                        <GridColumns>
                            <GridColumn Field="@nameof(DetailedKitchenProductionProductModel.ProductCode)" 
                                      HeaderText="Product Code" Width="120" />
                            <GridColumn Field="@nameof(DetailedKitchenProductionProductModel.ProductName)" 
                                      HeaderText="Product Name" Width="200" />
                            <GridColumn Field="@nameof(DetailedKitchenProductionProductModel.CategoryName)" 
                                      HeaderText="Category" Width="150" />
                            <GridColumn Field="@nameof(DetailedKitchenProductionProductModel.Unit)" 
                                      HeaderText="Unit" Width="100" TextAlign="TextAlign.Center" />
                            <GridColumn Field="@nameof(DetailedKitchenProductionProductModel.Rate)" 
                                      HeaderText="Rate" Width="120" 
                                      Format="C2" TextAlign="TextAlign.Right" />
                            <GridColumn Field="@nameof(DetailedKitchenProductionProductModel.Quantity)" 
                                      HeaderText="Quantity" Width="120" 
                                      Format="N2" TextAlign="TextAlign.Right" />
                            <GridColumn Field="@nameof(DetailedKitchenProductionProductModel.Total)" 
                                      HeaderText="Total Amount" Width="150" 
                                      Format="C2" TextAlign="TextAlign.Right" />
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>
    }
    else if (!_isLoading)
    {
        <!-- No Data Found -->
        <div class="no-data-container">
            <div class="no-data-content">
                <div class="no-data-icon">
                    <i class="fas fa-search"></i>
                </div>
                <h3>Production Not Found</h3>
                <p>The requested kitchen production record could not be found or may have been deleted.</p>
                <button @onclick='() => NavigationManager.NavigateTo("/kitchen/production")' class="back-to-list-btn">
                    <i class="fas fa-arrow-left"></i>
                    <span>Back to Production List</span>
                </button>
            </div>
        </div>
    }
</div>

<!-- Delete Confirmation Dialog -->
@if (_showDeleteConfirm && _kitchenProductionOverview != null)
{
    <div class="modal-overlay">
        <div class="delete-confirmation-modal">
            <div class="modal-header">
                <h3>Confirm Deletion</h3>
                <button @onclick="CancelDeleteKitchenProduction" class="close-btn" type="button">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-content">
                <div class="delete-confirmation-content">
                    <div class="confirmation-icon">
                        <i class="fas fa-exclamation-triangle"></i>
                    </div>
                    <div class="confirmation-message">
                        <p>Are you sure you want to delete this kitchen production?</p>
                        <p class="warning-text">This action cannot be undone and will permanently remove all production data.</p>
                        <div class="production-info">
                            <strong>Transaction #:</strong> @_kitchenProductionOverview.TransactionNo<br />
                            <strong>Date:</strong> @_kitchenProductionOverview.ProductionDate.ToString("dd/MM/yyyy HH:mm")<br />
                            <strong>Kitchen:</strong> @_kitchenProductionOverview.KitchenName
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-actions">
                <button @onclick="CancelDeleteKitchenProduction" class="cancel-btn" type="button" disabled="@_isProcessing">
                    Cancel
                </button>
                <button @onclick="ConfirmDeleteKitchenProduction" class="delete-confirm-btn" type="button" disabled="@_isProcessing">
                    @if (_isProcessing)
                    {
                        <i class="fas fa-spinner fa-spin"></i>
                        <span>Deleting...</span>
                    }
                    else
                    {
                        <span>Delete</span>
                    }
                </button>
            </div>
        </div>
    </div>
}

<style>
    :root {
        --primary-color: #28a745;
        --primary-dark: #1e7e34;
        --primary-light: #d4edda;
        --secondary-color: #6c757d;
        --success-color: #28a745;
        --warning-color: #ffc107;
        --danger-color: #dc3545;
        --info-color: #17a2b8;
        --light-color: #f8f9fa;
        --dark-color: #343a40;
        --white: #ffffff;
        --shadow-sm: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        --shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        --shadow-lg: 0 1rem 3rem rgba(0, 0, 0, 0.175);
        --border-radius: 0.375rem;
        --border-radius-lg: 0.5rem;
        --transition: all 0.3s ease;
        --kitchen-primary: #ff6b35;
        --kitchen-secondary: #f7931e;
    }

    .kitchen-production-view-container {
        padding: 20px;
        background: 
            radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.03) 0%, transparent 50%),
            radial-gradient(circle at 80% 20%, rgba(255, 107, 53, 0.03) 0%, transparent 50%),
            radial-gradient(circle at 40% 40%, rgba(40, 167, 69, 0.02) 0%, transparent 50%),
            linear-gradient(135deg, #f8f9fa 0%, #e9ecef 30%, #f1f3f4 70%, #e8f5e8 100%);
        min-height: 100vh;
        position: relative;
    }

    .kitchen-production-view-container::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: 
            url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%2328a745' fill-opacity='0.02'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E") repeat;
        pointer-events: none;
        z-index: 0;
    }

    .kitchen-production-view-container > * {
        position: relative;
        z-index: 1;
    }

    /* Loading Overlay */
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .loading-content {
        text-align: center;
        color: var(--dark-color);
    }

    .loading-spinner {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 8px;
        margin-bottom: 20px;
    }

    .spinner-circle {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: var(--primary-color);
        animation: bounce 1.4s ease-in-out both infinite;
    }

    .spinner-circle:nth-child(1) { animation-delay: -0.32s; }
    .spinner-circle:nth-child(2) { animation-delay: -0.16s; }

    @@keyframes bounce {
        0%, 80%, 100% {
            transform: scale(0);
        }
        40% {
            transform: scale(1);
        }
    }

    /* Page Header */
    .page-header {
        margin-bottom: 30px;
    }

    .header-content {
        background: linear-gradient(135deg, var(--white) 0%, #fefefe 100%);
        padding: 30px;
        border-radius: var(--border-radius-lg);
        box-shadow: 
            var(--shadow),
            0 0 0 1px rgba(255, 255, 255, 0.05),
            inset 0 1px 0 rgba(255, 255, 255, 0.9);
        border-left: 5px solid var(--kitchen-primary);
        border-top: 1px solid rgba(255, 107, 53, 0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: relative;
        overflow: hidden;
    }

    .header-content::before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 100px;
        height: 100px;
        background: radial-gradient(circle, rgba(255, 107, 53, 0.05) 0%, transparent 70%);
        border-radius: 50%;
        transform: translate(30px, -30px);
    }

    .header-left {
        flex: 1;
    }

    .title-section {
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .icon-wrapper {
        width: 60px;
        height: 60px;
        background: linear-gradient(135deg, var(--kitchen-primary), var(--kitchen-secondary));
        border-radius: var(--border-radius-lg);
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--white);
        font-size: 24px;
        box-shadow: var(--shadow-sm);
    }

    .title-text h1 {
        margin: 0;
        color: var(--dark-color);
        font-size: 28px;
        font-weight: 700;
    }

    .title-text p {
        margin: 5px 0 0;
        color: var(--secondary-color);
        font-size: 14px;
    }

    .header-actions {
        display: flex;
        align-items: center;
        gap: 15px;
        flex-wrap: wrap;
    }

    .action-buttons {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }

    .back-btn,
    .edit-btn,
    .delete-btn,
    .print-btn {
        padding: 12px 20px;
        border-radius: var(--border-radius);
        font-weight: 600;
        font-size: 14px;
        display: flex;
        align-items: center;
        gap: 8px;
        transition: var(--transition);
        border: none;
        cursor: pointer;
        position: relative;
        overflow: hidden;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .back-btn {
        background: linear-gradient(135deg, var(--secondary-color), #5a6268);
        color: var(--white);
        box-shadow: 0 4px 15px rgba(108, 117, 125, 0.2);
    }

    .back-btn:hover {
        background: linear-gradient(135deg, #5a6268, #495057);
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(108, 117, 125, 0.3);
    }

    .edit-btn {
        background: linear-gradient(135deg, var(--info-color), #138496);
        color: var(--white);
        box-shadow: 0 4px 15px rgba(23, 162, 184, 0.2);
    }

    .edit-btn:hover {
        background: linear-gradient(135deg, #138496, #117a8b);
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(23, 162, 184, 0.3);
    }

    .delete-btn {
        background: linear-gradient(135deg, var(--danger-color), #c82333);
        color: var(--white);
        box-shadow: 0 4px 15px rgba(220, 53, 69, 0.2);
    }

    .delete-btn:hover {
        background: linear-gradient(135deg, #c82333, #bd2130);
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(220, 53, 69, 0.3);
    }

    .print-btn {
        background: linear-gradient(135deg, var(--kitchen-primary), var(--kitchen-secondary));
        color: var(--white);
        box-shadow: 0 4px 15px rgba(255, 107, 53, 0.2);
    }

    .print-btn:hover {
        background: linear-gradient(135deg, var(--kitchen-secondary), #e07600);
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(255, 107, 53, 0.3);
    }

    /* Info Cards Section */
    .info-cards-section {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
        margin-bottom: 30px;
    }

    .info-cards-section .remarks-info {
        grid-column: 1 / -1;
    }

    .info-card {
        background: linear-gradient(135deg, var(--white) 0%, #fefefe 100%);
        border-radius: var(--border-radius-lg);
        box-shadow: 
            var(--shadow),
            0 0 0 1px rgba(255, 255, 255, 0.05),
            inset 0 1px 0 rgba(255, 255, 255, 0.9);
        overflow: hidden;
        transition: var(--transition);
        border: 1px solid rgba(255, 107, 53, 0.05);
        position: relative;
    }

    .info-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, var(--kitchen-primary), var(--kitchen-secondary));
    }

    .info-card:hover {
        transform: translateY(-3px);
        box-shadow: var(--shadow-lg);
    }

    .card-header {
        padding: 20px 25px;
        border-bottom: 1px solid rgba(255, 107, 53, 0.1);
        display: flex;
        align-items: center;
        gap: 15px;
        background: linear-gradient(135deg, rgba(255, 107, 53, 0.02), rgba(247, 147, 30, 0.02));
    }

    .card-icon {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: linear-gradient(135deg, var(--kitchen-primary), var(--kitchen-secondary));
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--white);
        font-size: 20px;
    }

    .card-title h3 {
        margin: 0 0 5px 0;
        color: var(--dark-color);
        font-size: 18px;
        font-weight: 600;
    }

    .card-title p {
        margin: 0;
        color: var(--secondary-color);
        font-size: 14px;
    }

    .card-content {
        padding: 25px;
    }

    /* Info Grid */
    .info-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
    }

    .info-item {
        display: flex;
        flex-direction: column;
        gap: 5px;
    }

    .info-item label {
        font-size: 13px;
        font-weight: 600;
        color: var(--secondary-color);
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .info-item span {
        font-size: 15px;
        color: var(--dark-color);
        font-weight: 500;
    }

    /* Badges */
    .transaction-badge {
        background: linear-gradient(135deg, var(--kitchen-primary), var(--kitchen-secondary));
        color: var(--white);
        padding: 6px 12px;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        display: inline-block;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .kitchen-badge {
        background: linear-gradient(135deg, var(--info-color), #138496);
        color: var(--white);
        padding: 6px 12px;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        display: inline-block;
    }

    .status-badge {
        padding: 6px 12px;
        border-radius: var(--border-radius);
        font-size: 13px;
        font-weight: 600;
        display: inline-block;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .status-badge.active {
        background: linear-gradient(135deg, var(--success-color), var(--primary-dark));
        color: var(--white);
    }

    /* Summary Stats */
    .summary-stats {
        display: flex;
        gap: 20px;
        justify-content: space-around;
    }

    .stat-item {
        display: flex;
        align-items: center;
        gap: 15px;
        flex: 1;
        text-align: center;
        justify-content: center;
    }

    .stat-icon {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 18px;
        color: var(--white);
    }

    .stat-item.products .stat-icon {
        background: linear-gradient(135deg, var(--info-color), #138496);
    }

    .stat-item.quantity .stat-icon {
        background: linear-gradient(135deg, var(--warning-color), #e0a800);
    }

    .stat-item.value .stat-icon {
        background: linear-gradient(135deg, var(--success-color), var(--primary-dark));
    }

    .stat-details {
        text-align: left;
    }

    .stat-value {
        font-size: 24px;
        font-weight: 700;
        color: var(--dark-color);
        margin-bottom: 5px;
    }

    .stat-label {
        font-size: 13px;
        color: var(--secondary-color);
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    /* Remarks Content */
    .remarks-content {
        background: rgba(255, 107, 53, 0.03);
        padding: 20px;
        border-radius: var(--border-radius);
        border-left: 4px solid var(--kitchen-primary);
        font-size: 15px;
        line-height: 1.6;
        color: var(--dark-color);
    }

    /* Grid Section */
    .grid-section {
        margin-bottom: 30px;
    }

    .grid-card {
        background: linear-gradient(135deg, var(--white) 0%, #fefefe 100%);
        border-radius: var(--border-radius-lg);
        box-shadow: 
            var(--shadow),
            0 0 0 1px rgba(255, 255, 255, 0.05),
            inset 0 1px 0 rgba(255, 255, 255, 0.9);
        overflow: hidden;
        border: 1px solid rgba(255, 107, 53, 0.05);
    }

    .grid-header {
        padding: 20px 25px;
        border-bottom: 1px solid rgba(255, 107, 53, 0.1);
        background: linear-gradient(135deg, rgba(255, 107, 53, 0.02), rgba(247, 147, 30, 0.02));
    }

    .grid-title {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .title-icon {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: linear-gradient(135deg, var(--kitchen-primary), var(--kitchen-secondary));
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--white);
        font-size: 20px;
    }

    .title-text h3 {
        margin: 0 0 5px 0;
        color: var(--dark-color);
        font-size: 18px;
        font-weight: 600;
    }

    .title-text p {
        margin: 0;
        color: var(--secondary-color);
        font-size: 14px;
    }

    .grid-content {
        padding: 20px;
    }

    /* Modern Grid Styling */
    .modern-grid .e-grid .e-gridheader {
        background: linear-gradient(135deg, rgba(255, 107, 53, 0.05), rgba(247, 147, 30, 0.05));
        border-bottom: 2px solid rgba(255, 107, 53, 0.1);
    }

    .modern-grid .e-grid .e-headercell {
        font-weight: 600;
        color: var(--dark-color);
        border-right: 1px solid rgba(255, 107, 53, 0.1);
    }

    .modern-grid .e-grid .e-row:hover {
        background: linear-gradient(135deg, rgba(255, 107, 53, 0.02), rgba(247, 147, 30, 0.02));
    }

    .modern-grid .e-grid .e-altrow {
        background: rgba(248, 249, 250, 0.5);
    }

    /* Expiry Badges */
    .expiry-badge {
        padding: 4px 8px;
        border-radius: var(--border-radius);
        font-size: 12px;
        font-weight: 600;
        display: inline-block;
        text-transform: uppercase;
        letter-spacing: 0.3px;
    }

    .expiry-badge.expiry-normal {
        background: linear-gradient(135deg, var(--success-color), var(--primary-dark));
        color: var(--white);
    }

    .expiry-badge.expiry-caution {
        background: linear-gradient(135deg, var(--warning-color), #e0a800);
        color: var(--white);
    }

    .expiry-badge.expiry-warning {
        background: linear-gradient(135deg, var(--danger-color), #c82333);
        color: var(--white);
    }

    .expiry-badge.expiry-none {
        background: linear-gradient(135deg, var(--secondary-color), #5a6268);
        color: var(--white);
    }

    /* No Data Container */
    .no-data-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 400px;
        padding: 40px;
    }

    .no-data-content {
        text-align: center;
        max-width: 400px;
    }

    .no-data-icon {
        width: 80px;
        height: 80px;
        margin: 0 auto 20px;
        background: linear-gradient(135deg, var(--secondary-color), #5a6268);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--white);
        font-size: 32px;
    }

    .no-data-content h3 {
        color: var(--dark-color);
        font-size: 24px;
        margin-bottom: 15px;
    }

    .no-data-content p {
        color: var(--secondary-color);
        margin-bottom: 25px;
        line-height: 1.6;
    }

    .back-to-list-btn {
        background: linear-gradient(135deg, var(--kitchen-primary), var(--kitchen-secondary));
        color: var(--white);
        border: none;
        padding: 12px 24px;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 8px;
        cursor: pointer;
        transition: var(--transition);
        margin: 0 auto;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .back-to-list-btn:hover {
        background: linear-gradient(135deg, var(--kitchen-secondary), #e07600);
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(255, 107, 53, 0.3);
    }

    /* Delete Confirmation Modal */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(5px);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10000;
        animation: fadeIn 0.3s ease-out;
    }

    .delete-confirmation-modal {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow-lg);
        max-width: 500px;
        width: 90%;
        max-height: 80vh;
        overflow: hidden;
        animation: slideInUp 0.3s ease-out;
    }

    .modal-header {
        padding: 20px 25px;
        border-bottom: 1px solid rgba(220, 53, 69, 0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: linear-gradient(135deg, rgba(220, 53, 69, 0.02), rgba(200, 35, 51, 0.02));
    }

    .modal-header h3 {
        margin: 0;
        color: var(--dark-color);
        font-size: 18px;
        font-weight: 600;
    }

    .close-btn {
        background: none;
        border: none;
        color: var(--secondary-color);
        font-size: 18px;
        cursor: pointer;
        padding: 5px;
        border-radius: 50%;
        transition: var(--transition);
        width: 35px;
        height: 35px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .close-btn:hover {
        background: rgba(220, 53, 69, 0.1);
        color: var(--danger-color);
    }

    .modal-content {
        padding: 25px;
    }

    .delete-confirmation-content {
        display: flex;
        gap: 20px;
        align-items: flex-start;
    }

    .confirmation-icon {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: linear-gradient(135deg, var(--danger-color), #c82333);
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--white);
        font-size: 24px;
        flex-shrink: 0;
    }

    .confirmation-message {
        flex: 1;
    }

    .confirmation-message p {
        margin-bottom: 10px;
        color: var(--dark-color);
        line-height: 1.5;
    }

    .warning-text {
        color: var(--danger-color);
        font-weight: 600;
        font-size: 14px;
    }

    .production-info {
        background: rgba(220, 53, 69, 0.05);
        padding: 15px;
        border-radius: var(--border-radius);
        border-left: 4px solid var(--danger-color);
        margin-top: 15px;
        font-size: 14px;
        line-height: 1.6;
    }

    .modal-actions {
        padding: 20px 25px;
        border-top: 1px solid rgba(220, 53, 69, 0.1);
        display: flex;
        justify-content: flex-end;
        gap: 15px;
        background: rgba(248, 249, 250, 0.5);
    }

    .cancel-btn {
        background: linear-gradient(135deg, var(--secondary-color), #5a6268);
        color: var(--white);
        border: none;
        padding: 10px 20px;
        border-radius: var(--border-radius);
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .cancel-btn:hover:not(:disabled) {
        background: linear-gradient(135deg, #5a6268, #495057);
        transform: translateY(-1px);
    }

    .cancel-btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }

    .delete-confirm-btn {
        background: linear-gradient(135deg, var(--danger-color), #c82333);
        color: var(--white);
        border: none;
        padding: 10px 20px;
        border-radius: var(--border-radius);
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .delete-confirm-btn:hover:not(:disabled) {
        background: linear-gradient(135deg, #c82333, #bd2130);
        transform: translateY(-1px);
    }

    .delete-confirm-btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }

    @@keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    @@keyframes slideInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Responsive Design */
    @@media (max-width: 1024px) {
        .info-cards-section {
            grid-template-columns: 1fr;
        }

        .summary-stats {
            flex-direction: column;
            gap: 15px;
        }

        .stat-item {
            justify-content: flex-start;
        }
    }

    @@media (max-width: 768px) {
        .kitchen-production-view-container {
            padding: 15px;
        }

        .header-content {
            flex-direction: column;
            gap: 20px;
            align-items: flex-start;
            padding: 20px;
        }

        .title-section {
            flex-direction: column;
            text-align: center;
            gap: 15px;
        }

        .header-actions {
            width: 100%;
            justify-content: center;
        }

        .action-buttons {
            flex-wrap: wrap;
            justify-content: center;
        }

        .info-grid {
            grid-template-columns: 1fr;
            gap: 15px;
        }

        .summary-stats {
            flex-direction: column;
            gap: 10px;
        }

        .grid-content {
            padding: 10px;
            overflow-x: auto;
        }

        .delete-confirmation-content {
            flex-direction: column;
            text-align: center;
            gap: 15px;
        }
    }

    @@media (max-width: 480px) {
        .kitchen-production-view-container {
            padding: 10px;
        }

        .header-content {
            padding: 15px;
        }

        .title-text h1 {
            font-size: 24px;
        }

        .icon-wrapper {
            width: 50px;
            height: 50px;
            font-size: 20px;
        }

        .card-content {
            padding: 20px;
        }

        .stat-value {
            font-size: 20px;
        }

        .back-btn,
        .edit-btn,
        .delete-btn,
        .print-btn {
            padding: 10px 16px;
            font-size: 12px;
        }
    }

    /* Animation Keyframes */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .info-card,
    .grid-card {
        animation: fadeInUp 0.6s ease-out;
    }

    .info-card:nth-child(1) { animation-delay: 0.1s; }
    .info-card:nth-child(2) { animation-delay: 0.2s; }
    .info-card:nth-child(3) { animation-delay: 0.3s; }
</style>