@page "/Reports/Purchase"

@using PrimeBakesLibrary.Models.Inventory
@using PrimeBakesLibrary.Models.Common
@using PrimeBakesLibrary.Models.Accounts.Masters
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Grids
@using ChartLabelPosition = Syncfusion.Blazor.Charts.LabelPosition
@using PrimeBakes.Shared.Services

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />

<PageTitle>Purchase Report - PrimeBakes</PageTitle>

@if (_isLoading)
{
    <div class="loading-overlay">
        <div class="loading-content">
            <div class="circular-dots-loader">
                <span class="dot dot-1"></span>
                <span class="dot dot-2"></span>
                <span class="dot dot-3"></span>
            </div>
            <p class="loading-text">Loading Purchase Report...</p>
        </div>
    </div>
}
else
{
    <div class="purchase-summary-container">
        <!-- Header Section -->
        <div class="page-header">
            <div class="header-content">
                <div class="header-title">
                    <div class="title-icon">
                        <i class="fas fa-shopping-cart"></i>
                    </div>
                    <div class="title-info">
                        <h1>Purchase Report</h1>
                        <p>Comprehensive procurement analytics and supplier insights</p>
                    </div>
                </div>
                
                <div class="header-actions">
                    <button @onclick='() => NavigationManager.NavigateTo("/Reports-Dashboard")' class="dashboard-btn">
                        <i class="fas fa-tachometer-alt"></i>
                        <span>Back to Dashboard</span>
                    </button>
                </div>
            </div>
        </div>

        <!-- Filter Section -->
        <div class="filter-section">
            <div class="filter-card">
                <div class="filter-header">
                    <h3><i class="fas fa-filter"></i> Filters</h3>
                </div>
                
                <div class="filter-controls">
                    <div class="filter-group">
                        <label class="filter-label">
                            <i class="fas fa-calendar-alt"></i>
                            Date Range
                        </label>
                        <SfDateRangePicker TValue="DateOnly"
                                          @bind-StartDate="_startDate"
                                          @bind-EndDate="_endDate"
                                          Format="dd/MM/yyyy"
                                          Placeholder="Select Date Range"
                                          CssClass="date-range-picker">
                            <DateRangePickerEvents TValue="DateOnly" ValueChange="OnDateRangeChanged" />
                        </SfDateRangePicker>
                    </div>
                </div>
                
                <div class="filter-actions">
                    <button @onclick="ToggleCharts" class="chart-toggle-btn @(_showCharts ? "active" : "")">
                        <i class="fas fa-chart-pie"></i>
                        <span>@(_showCharts ? "Hide Charts" : "Show Charts")</span>
                    </button>
                    
                    <button @onclick="ExportToExcel" class="export-btn" disabled="@_isProcessing">
                        <i class="fas fa-file-excel"></i>
                        <span>Export Excel</span>
                    </button>
                </div>
            </div>
        </div>

        <!-- Data Grid Section -->
        <div class="grid-section">
            <div class="section-header">
                <h2><i class="fas fa-table"></i> Purchase Details</h2>
                <div class="grid-actions">
                    <button @onclick="ExportToExcel" class="export-btn" disabled="@_isProcessing">
                        <i class="fas fa-file-excel"></i>
                        <span>Export to Excel</span>
                    </button>
                </div>
            </div>

            <div class="grid-card">
                <div class="grid-content">
                    <SfGrid DataSource="_purchaseOverviews"
                            AllowSorting="true"
                            AllowFiltering="true"
                            AllowResizing="true"
                            AllowPaging="true"
                            AllowExcelExport="true"
                            AllowPdfExport="true"
                            CssClass="modern-grid"
                            Toolbar="@(new List<string>() { "Search" })">
                        <GridPageSettings PageSize="15" PageSizes="@(new int[] { 10, 15, 25, 50 })" />
                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu" />
                        <GridColumns>
                            <GridColumn Field="@nameof(PurchaseOverviewModel.BillNo)"
                                        HeaderText="Bill No"
                                        Width="120"
                                        TextAlign="TextAlign.Center"
                                        AllowFiltering="true" />

                            <GridColumn Field="@nameof(PurchaseOverviewModel.BillDateTime)"
                                        HeaderText="Purchase Date"
                                        Width="140"
                                        Format="dd/MM/yyyy hh:mm tt"
                                        AllowFiltering="true" />

                            <GridColumn Field="@nameof(PurchaseOverviewModel.SupplierName)"
                                        HeaderText="Supplier"
                                        Width="180"
                                        AllowFiltering="true" />

                            <GridColumn Field="@nameof(PurchaseOverviewModel.UserName)"
                                        HeaderText="Created By"
                                        Width="130"
                                        AllowFiltering="true" />

                            <GridColumn Field="@nameof(PurchaseOverviewModel.TotalItems)"
                                        HeaderText="Items"
                                        Width="80"
                                        TextAlign="TextAlign.Right"
                                        AllowFiltering="false" />

                            <GridColumn Field="@nameof(PurchaseOverviewModel.TotalQuantity)"
                                        HeaderText="Quantity"
                                        Width="100"
                                        Format="N2"
                                        TextAlign="TextAlign.Right"
                                        AllowFiltering="false" />

                            <GridColumn Field="@nameof(PurchaseOverviewModel.BaseTotal)"
                                        HeaderText="Base Total"
                                        Width="120"
                                        Format="C2"
                                        TextAlign="TextAlign.Right"
                                        AllowFiltering="false" />

                            <GridColumn Field="@nameof(PurchaseOverviewModel.DiscountAmount)"
                                        HeaderText="Discount"
                                        Width="100"
                                        Format="C2"
                                        TextAlign="TextAlign.Right"
                                        AllowFiltering="false" />

                            <GridColumn Field="@nameof(PurchaseOverviewModel.TotalTaxAmount)"
                                        HeaderText="Tax"
                                        Width="100"
                                        Format="C2"
                                        TextAlign="TextAlign.Right"
                                        AllowFiltering="false" />

                            <GridColumn Field="@nameof(PurchaseOverviewModel.Total)"
                                        HeaderText="Total Amount"
                                        Width="130"
                                        Format="C2"
                                        TextAlign="TextAlign.Right"
                                        AllowFiltering="false">
                                <Template>
                                    @{
                                        var purchase = (context as PurchaseOverviewModel);
                                        <div class="amount-cell">
                                            <span class="amount-value @(purchase.Total > 50000 ? "high-amount" : purchase.Total > 10000 ? "medium-amount" : "normal-amount")">
                                                ₹@purchase.Total.ToString("N2")
                                            </span>
                                        </div>
                                    }
                                </Template>
                            </GridColumn>

                            <GridColumn HeaderText="Actions"
                                        Width="100"
                                        TextAlign="TextAlign.Center"
                                        AllowFiltering="false"
                                        AllowSorting="false">
                                <Template>
                                    @{
                                        var purchase = (context as PurchaseOverviewModel);
                                    }
                                    <button class="view-btn"
                                            @onclick="() => ViewPurchaseDetails(purchase.PurchaseId)"
                                            title="View Purchase Details">
                                        <i class="fas fa-eye"></i>
                                        <span>View</span>
                                    </button>
                                </Template>
                            </GridColumn>

                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>

        <!-- Summary Cards Section -->
        <div class="summary-section">
            <div class="section-header">
                <h2><i class="fas fa-chart-line"></i> Purchase Overview</h2>
                <div class="period-info">
                    @_startDate.ToString("dd MMM yyyy") - @_endDate.ToString("dd MMM yyyy")
                </div>
            </div>
            
            <div class="summary-cards">
                <!-- Total Purchases Card -->
                <div class="summary-card highlight-card">
                    <div class="card-icon">
                        <i class="fas fa-rupee-sign"></i>
                    </div>
                    <div class="card-content">
                        <div class="card-value">₹@GetTotalPurchases().ToString("N2")</div>
                        <div class="card-label">Total Purchases</div>
                        <div class="card-trend">
                            <i class="fas fa-arrow-up"></i>
                            <span>@_purchaseOverviews.Count transactions</span>
                        </div>
                    </div>
                </div>
                
                <!-- Total Quantity Card -->
                <div class="summary-card">
                    <div class="card-icon">
                        <i class="fas fa-cubes"></i>
                    </div>
                    <div class="card-content">
                        <div class="card-value">@GetTotalQuantity().ToString("N0")</div>
                        <div class="card-label">Total Quantity</div>
                        <div class="card-trend">
                            <i class="fas fa-box"></i>
                            <span>@GetTotalItems() items</span>
                        </div>
                    </div>
                </div>
                
                <!-- Average Purchase Card -->
                <div class="summary-card">
                    <div class="card-icon">
                        <i class="fas fa-calculator"></i>
                    </div>
                    <div class="card-content">
                        <div class="card-value">₹@GetAveragePurchase().ToString("N2")</div>
                        <div class="card-label">Average Purchase</div>
                        <div class="card-trend">
                            <i class="fas fa-chart-bar"></i>
                            <span>per transaction</span>
                        </div>
                    </div>
                </div>
                
                <!-- Tax Amount Card -->
                <div class="summary-card">
                    <div class="card-icon">
                        <i class="fas fa-percentage"></i>
                    </div>
                    <div class="card-content">
                        <div class="card-value">₹@GetTotalTax().ToString("N2")</div>
                        <div class="card-label">Total Tax</div>
                        <div class="card-trend">
                            <i class="fas fa-receipt"></i>
                            <span>GST paid</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Supplier-wise Summary Section -->
        <div class="supplier-summary-section">
            <div class="section-header">
                <h2><i class="fas fa-truck"></i> Supplier Performance</h2>
            </div>
            
            <div class="supplier-cards">
                @foreach (var supplierGroup in GetSupplierSummary())
                {
                    <div class="supplier-card">
                        <div class="supplier-header">
                            <div class="supplier-icon">
                                <i class="fas fa-building"></i>
                            </div>
                            <div class="supplier-info">
                                <h4>@supplierGroup.SupplierName</h4>
                                <p>@supplierGroup.PurchaseCount purchases</p>
                            </div>
                        </div>
                        
                        <div class="supplier-stats">
                            <div class="stat-item">
                                <div class="stat-value">₹@supplierGroup.TotalPurchases.ToString("N2")</div>
                                <div class="stat-label">Total Purchases</div>
                            </div>
                            
                            <div class="stat-item">
                                <div class="stat-value">@supplierGroup.TotalQuantity.ToString("N0")</div>
                                <div class="stat-label">Quantity</div>
                            </div>
                        </div>
                        
                        <div class="supplier-progress">
                            <div class="progress-bar">
                                <div class="progress-fill" style="width: @(GetSupplierPercentage(supplierGroup.TotalPurchases))%"></div>
                            </div>
                            <div class="progress-label">@(GetSupplierPercentage(supplierGroup.TotalPurchases).ToString("N1"))% of total</div>
                        </div>
                    </div>
                }
                
                @if (!GetSupplierSummary().Any())
                {
                    <div class="no-data-card">
                        <i class="fas fa-chart-line"></i>
                        <h4>No Purchase Data</h4>
                        <p>No purchases found for the selected date range and supplier.</p>
                    </div>
                }
            </div>
        </div>

        <!-- Tax Breakdown Section -->
        @if (_purchaseOverviews.Any())
        {
            <div class="breakdown-section">
                <div class="section-header">
                    <h2><i class="fas fa-receipt"></i> Tax Breakdown by Supplier</h2>
                </div>
                
                <div class="breakdown-grid">
                    @foreach (var taxGroup in GetTaxBreakdownBySupplier())
                    {
                        <div class="breakdown-card">
                            <div class="breakdown-header">
                                <h4>@taxGroup.SupplierName</h4>
                                <div class="tax-total">₹@taxGroup.TotalTax.ToString("N2")</div>
                            </div>
                            <div class="breakdown-details">
                                <div class="tax-detail-row">
                                    <span>CGST:</span>
                                    <span>₹@taxGroup.CGST.ToString("N2")</span>
                                </div>
                                <div class="tax-detail-row">
                                    <span>SGST:</span>
                                    <span>₹@taxGroup.SGST.ToString("N2")</span>
                                </div>
                                <div class="tax-detail-row">
                                    <span>IGST:</span>
                                    <span>₹@taxGroup.IGST.ToString("N2")</span>
                                </div>
                                <div class="tax-progress">
                                    <div class="tax-progress-bar">
                                        <div class="tax-progress-fill" style="width: @(GetTaxPercentage(taxGroup.TotalTax))%"></div>
                                    </div>
                                    <span class="tax-percentage">@(GetTaxPercentage(taxGroup.TotalTax).ToString("N1"))% of total tax</span>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- Monthly Purchase Trend Section -->
        @if (_purchaseOverviews.Any())
        {
            <div class="breakdown-section">
                <div class="section-header">
                    <h2><i class="fas fa-calendar"></i> Monthly Purchase Trends</h2>
                </div>
                
                <div class="monthly-trend-grid">
                    @foreach (var monthlyData in GetMonthlyPurchaseTrends())
                    {
                        <div class="monthly-card">
                            <div class="monthly-header">
                                <h4>@monthlyData.MonthName</h4>
                                <div class="monthly-total">₹@monthlyData.TotalAmount.ToString("N2")</div>
                            </div>
                            <div class="monthly-details">
                                <div class="metric-row">
                                    <div class="metric-item">
                                        <span class="metric-label">Transactions</span>
                                        <span class="metric-value">@monthlyData.TransactionCount</span>
                                    </div>
                                    <div class="metric-item">
                                        <span class="metric-label">Avg Amount</span>
                                        <span class="metric-value">₹@monthlyData.AverageAmount.ToString("N2")</span>
                                    </div>
                                </div>
                                <div class="metric-row">
                                    <div class="metric-item">
                                        <span class="metric-label">Items</span>
                                        <span class="metric-value">@monthlyData.TotalItems</span>
                                    </div>
                                    <div class="metric-item">
                                        <span class="metric-label">Suppliers</span>
                                        <span class="metric-value">@monthlyData.UniqueSuppliers</span>
                                    </div>
                                </div>
                                <div class="monthly-progress">
                                    <div class="monthly-progress-bar">
                                        <div class="monthly-progress-fill" style="width: @(GetMonthlyPercentage(monthlyData.TotalAmount))%"></div>
                                    </div>
                                    <span class="monthly-percentage">@(GetMonthlyPercentage(monthlyData.TotalAmount).ToString("N1"))% of total</span>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- Detailed Supplier Performance Section -->
        @if (_purchaseOverviews.Any())
        {
            <div class="breakdown-section">
                <div class="section-header">
                    <h2><i class="fas fa-building"></i> Detailed Supplier Analysis</h2>
                </div>
                
                <div class="supplier-details-grid">
                    @foreach (var supplierDetails in GetDetailedSupplierPerformance())
                    {
                        <div class="supplier-details-card">
                            <div class="supplier-details-header">
                                <h4>@supplierDetails.SupplierName</h4>
                                <div class="supplier-status @(supplierDetails.PerformanceRating.ToLower())">
                                    @supplierDetails.PerformanceRating
                                </div>
                            </div>
                            
                            <div class="supplier-metrics">
                                <div class="metric-row">
                                    <div class="metric-item">
                                        <span class="metric-label">Total Purchases</span>
                                        <span class="metric-value">₹@supplierDetails.TotalPurchases.ToString("N2")</span>
                                    </div>
                                    <div class="metric-item">
                                        <span class="metric-label">Transactions</span>
                                        <span class="metric-value">@supplierDetails.TransactionCount</span>
                                    </div>
                                </div>
                                
                                <div class="metric-row">
                                    <div class="metric-item">
                                        <span class="metric-label">Avg Transaction</span>
                                        <span class="metric-value">₹@supplierDetails.AverageTransaction.ToString("N2")</span>
                                    </div>
                                    <div class="metric-item">
                                        <span class="metric-label">Items Purchased</span>
                                        <span class="metric-value">@supplierDetails.TotalItems</span>
                                    </div>
                                </div>
                                
                                <div class="metric-row">
                                    <div class="metric-item">
                                        <span class="metric-label">Tax Paid</span>
                                        <span class="metric-value">₹@supplierDetails.TotalTax.ToString("N2")</span>
                                    </div>
                                    <div class="metric-item">
                                        <span class="metric-label">Discount:</span>
                                        <span class="discount-amount">₹@supplierDetails.TotalDiscount.ToString("N2")</span>
                                    </div>
                                </div>
                                
                                <div class="discount-savings">
                                    <span class="metric-label">Net Purchases</span>
                                    <span class="metric-value">₹@((supplierDetails.TotalPurchases - supplierDetails.TotalTax).ToString("N2"))</span>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- Charts Section -->
        @if (_showCharts && _purchaseOverviews.Any())
        {
            <div class="charts-section">
                <div class="section-header">
                    <h2><i class="fas fa-chart-pie"></i> Purchase Analytics</h2>
                </div>
                
                <div class="charts-grid">
                    <!-- Purchase Trend Chart -->
                    <div class="chart-card">
                        <div class="chart-header">
                            <h4>Purchase Trend</h4>
                            <p>Daily purchase performance</p>
                        </div>
                        <div class="chart-container">
                            <SfChart>
                                <ChartArea>
                                    <ChartAreaBorder Width="0" />
                                </ChartArea>
                                <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime" 
                                                 LabelFormat="dd/MM"
                                                 IntervalType="IntervalType.Days">
                                    <ChartAxisLabelStyle Color="#666" />
                                </ChartPrimaryXAxis>
                                <ChartPrimaryYAxis LabelFormat="₹{value}">
                                    <ChartAxisLabelStyle Color="#666" />
                                </ChartPrimaryYAxis>
                                <ChartSeriesCollection>
                                    <ChartSeries DataSource="GetDailyPurchaseData()" 
                                               XName="Date" 
                                               YName="Amount" 
                                               Type="ChartSeriesType.SplineArea"
                                               Name="Purchases"
                                               Fill="#1976d2"
                                               Opacity="0.7">
                                        <ChartMarker Visible="true" Fill="#1976d2" />
                                    </ChartSeries>
                                </ChartSeriesCollection>
                                <ChartTooltipSettings Enable="true" Format="Date: ${point.x}<br/>Purchases: ₹${point.y}" />
                            </SfChart>
                        </div>
                    </div>
                    
                    <!-- Supplier Distribution Chart -->
                    <div class="chart-card">
                        <div class="chart-header">
                            <h4>Supplier Distribution</h4>
                            <p>Purchase share by supplier</p>
                        </div>
                        <div class="chart-container">
                            <SfAccumulationChart>
                                <AccumulationChartSeriesCollection>
                                    <AccumulationChartSeries DataSource="GetSupplierDistributionData()" 
                                                           XName="Supplier" 
                                                           YName="Amount" 
                                                           Type="AccumulationType.Pie"
                                                           Radius="80%">
                                        <AccumulationDataLabelSettings Visible="true" Name="Supplier" Position="AccumulationLabelPosition.Outside" />
                                    </AccumulationChartSeries>
                                </AccumulationChartSeriesCollection>
                                <AccumulationChartTooltipSettings Enable="true" Format="${point.x}: ₹${point.y}" />
                                <AccumulationChartLegendSettings Visible="true" Position="LegendPosition.Bottom" />
                            </SfAccumulationChart>
                        </div>
                    </div>
                    
                    <!-- Monthly Comparison Chart -->
                    <div class="chart-card wide-chart">
                        <div class="chart-header">
                            <h4>Monthly Purchase Comparison</h4>
                            <p>Purchase trends by month</p>
                        </div>
                        <div class="chart-container">
                            <SfChart>
                                <ChartArea>
                                    <ChartAreaBorder Width="0" />
                                </ChartArea>
                                <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
                                    <ChartAxisLabelStyle Color="#666" />
                                </ChartPrimaryXAxis>
                                <ChartPrimaryYAxis LabelFormat="₹{value}">
                                    <ChartAxisLabelStyle Color="#666" />
                                </ChartPrimaryYAxis>
                                <ChartSeriesCollection>
                                    <ChartSeries DataSource="GetMonthlyComparisonData()" 
                                               XName="Month" 
                                               YName="Amount" 
                                               Type="ChartSeriesType.Column"
                                               Name="Purchases"
                                               Fill="#1976d2">
                                        <ChartMarker>
                                            <ChartDataLabel Visible="true" Position="ChartLabelPosition.Middle" />
                                        </ChartMarker>
                                    </ChartSeries>
                                </ChartSeriesCollection>
                                <ChartTooltipSettings Enable="true" Format="${point.x}: ₹${point.y}" />
                            </SfChart>
                        </div>
                    </div>
                </div>
            </div>
        }
        else if (_showCharts && !_purchaseOverviews.Any())
        {
            <div class="no-charts-message">
                <div class="no-charts-content">
                    <i class="fas fa-chart-pie"></i>
                    <h3>No Data for Charts</h3>
                    <p>Charts will appear when purchase data is available for the selected period.</p>
                </div>
            </div>
        }

    </div>
}

<style>
    :root {
        --primary-color: #1976d2;
        --primary-light: rgba(25, 118, 210, 0.1);
        --primary-dark: #1565c0;
        --secondary-color: #bbdefb;
        --accent-color: #2196f3;
        --success-color: #4caf50;
        --warning-color: #ff9800;
        --danger-color: #f44336;
        --dark-color: #2c2c54;
        --light-color: #f3f8ff;
        --white: #ffffff;
        --shadow: 0 2px 8px rgba(25, 118, 210, 0.15);
        --shadow-lg: 0 8px 25px rgba(25, 118, 210, 0.2);
        --border-radius: 0.5rem;
        --border-radius-lg: 0.75rem;
        --transition: all 0.3s ease;
    }

    .purchase-summary-container {
        padding: 20px;
        background: 
            radial-gradient(circle at 15% 15%, rgba(25, 118, 210, 0.05) 0%, transparent 50%),
            radial-gradient(circle at 85% 85%, rgba(33, 150, 243, 0.08) 0%, transparent 50%),
            linear-gradient(135deg, #f3f8ff 0%, #e3f2fd 30%, #bbdefb 70%, #90caf9 100%);
        min-height: 100vh;
        animation: fadeInUp 0.6s ease-out;
    }

    /* Loading States */
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255, 255, 255, 0.95);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        backdrop-filter: blur(8px);
    }

    .loading-content {
        text-align: center;
        padding: 40px;
        background: var(--white);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow-lg);
        border: 1px solid rgba(25, 118, 210, 0.1);
    }

    .circular-dots-loader {
        display: inline-block;
        position: relative;
        width: 60px;
        height: 60px;
        margin-bottom: 25px;
    }

    .circular-dots-loader .dot {
        display: block;
        position: absolute;
        width: 14px;
        height: 14px;
        border-radius: 50%;
        background: var(--primary-color);
        animation: dotPulse 1.4s infinite ease-in-out both;
    }

    .circular-dots-loader .dot-1 {
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        animation-delay: -0.8s;
    }

    .circular-dots-loader .dot-2 {
        top: 50%;
        right: 0;
        transform: translateY(-50%);
        animation-delay: -0.4s;
    }

    .circular-dots-loader .dot-3 {
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        animation-delay: 0s;
    }

    .loading-text {
        color: var(--dark-color);
        font-size: 18px;
        font-weight: 600;
        margin: 0;
    }

    /* Header Section */
    .page-header {
        margin-bottom: 30px;
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        border-radius: var(--border-radius-lg);
        padding: 30px;
        color: var(--white);
        box-shadow: var(--shadow-lg);
        position: relative;
        overflow: hidden;
    }

    .page-header::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -20%;
        width: 200px;
        height: 200px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        animation: float 6s ease-in-out infinite;
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: relative;
        z-index: 2;
    }

    .header-title {
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .title-icon {
        width: 70px;
        height: 70px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 28px;
        backdrop-filter: blur(10px);
    }

    .title-info h1 {
        margin: 0 0 8px 0;
        font-size: 32px;
        font-weight: 700;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .title-info p {
        margin: 0;
        font-size: 16px;
        opacity: 0.9;
        font-weight: 400;
    }

    .dashboard-btn {
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 14px 24px;
        background: rgba(255, 255, 255, 0.2);
        color: var(--white);
        border: none;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .dashboard-btn:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: translateY(-2px);
    }

    /* Filter Section */
    .filter-section {
        margin-bottom: 30px;
    }

    .filter-card {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        padding: 25px;
        box-shadow: var(--shadow);
        border: 1px solid rgba(25, 118, 210, 0.1);
    }

    .filter-header h3 {
        display: flex;
        align-items: center;
        gap: 10px;
        margin: 0 0 20px 0;
        color: var(--primary-color);
        font-size: 18px;
        font-weight: 700;
    }

    .filter-controls {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 20px;
    }

    .filter-group {
        display: flex;
        flex-direction: column;
        gap: 8px;
    }

    .filter-label {
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 14px;
        font-weight: 600;
        color: var(--dark-color);
    }

    .filter-label i {
        color: var(--primary-color);
        width: 16px;
    }

    .filter-actions {
        display: flex;
        gap: 15px;
        flex-wrap: wrap;
    }

    .chart-toggle-btn, .export-btn {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 12px 20px;
        border: 2px solid var(--primary-color);
        background: transparent;
        color: var(--primary-color);
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
    }

    .chart-toggle-btn:hover, .export-btn:hover {
        background: var(--primary-color);
        color: var(--white);
        transform: translateY(-2px);
    }

    .chart-toggle-btn.active {
        background: var(--primary-color);
        color: var(--white);
    }

    .export-btn {
        border-color: var(--success-color);
        color: var(--success-color);
    }

    .export-btn:hover {
        background: var(--success-color);
        color: var(--white);
    }

    /* Section Headers */
    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
    }

    .section-header h2 {
        display: flex;
        align-items: center;
        gap: 12px;
        font-size: 24px;
        font-weight: 700;
        color: var(--dark-color);
        margin: 0;
    }

    .section-header h2 i {
        color: var(--primary-color);
    }

    .period-info {
        background: var(--primary-light);
        color: var(--primary-color);
        padding: 8px 16px;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        border: 1px solid rgba(25, 118, 210, 0.2);
    }

    /* Summary Cards */
    .summary-section {
        margin-bottom: 40px;
    }

    .summary-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 20px;
    }

    .summary-card {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        padding: 25px;
        box-shadow: var(--shadow);
        border: 1px solid rgba(25, 118, 210, 0.1);
        transition: var(--transition);
        position: relative;
        overflow: hidden;
    }

    .summary-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
    }

    .summary-card:hover {
        transform: translateY(-5px);
        box-shadow: var(--shadow-lg);
    }

    .summary-card.highlight-card {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: var(--white);
        border: none;
    }

    .summary-card.highlight-card::before {
        background: rgba(255, 255, 255, 0.3);
    }

    .summary-card {
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .card-icon {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: var(--primary-light);
        color: var(--primary-color);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        flex-shrink: 0;
    }

    .highlight-card .card-icon {
        background: rgba(255, 255, 255, 0.2);
        color: var(--white);
    }

    .card-content {
        flex: 1;
    }

    .card-value {
        font-size: 28px;
        font-weight: 700;
        color: var(--primary-color);
        line-height: 1;
        margin-bottom: 8px;
    }

    .highlight-card .card-value {
        color: var(--white);
    }

    .card-label {
        font-size: 16px;
        font-weight: 600;
        color: var(--dark-color);
        margin-bottom: 6px;
    }

    .highlight-card .card-label {
        color: rgba(255, 255, 255, 0.9);
    }

    .card-trend {
        display: flex;
        align-items: center;
        gap: 6px;
        font-size: 14px;
        color: var(--success-color);
        font-weight: 500;
    }

    .highlight-card .card-trend {
        color: rgba(255, 255, 255, 0.8);
    }

    /* Supplier Summary */
    .supplier-summary-section {
        margin-bottom: 40px;
    }

    .supplier-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
        gap: 20px;
    }

    .supplier-card {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        padding: 25px;
        box-shadow: var(--shadow);
        border: 1px solid rgba(25, 118, 210, 0.1);
        transition: var(--transition);
    }

    .supplier-card:hover {
        transform: translateY(-3px);
        box-shadow: var(--shadow-lg);
    }

    .supplier-header {
        display: flex;
        align-items: center;
        gap: 15px;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 2px solid var(--primary-light);
    }

    .supplier-icon {
        width: 50px;
        height: 50px;
        background: var(--primary-light);
        color: var(--primary-color);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
    }

    .supplier-info h4 {
        margin: 0 0 5px 0;
        color: var(--dark-color);
        font-size: 18px;
        font-weight: 700;
    }

    .supplier-info p {
        margin: 0;
        color: var(--primary-color);
        font-size: 14px;
        font-weight: 600;
    }

    .supplier-stats {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 15px;
        margin-bottom: 20px;
    }

    .stat-item {
        text-align: center;
        padding: 15px 10px;
        background: #f3f8ff;
        border-radius: var(--border-radius);
        border: 1px solid rgba(25, 118, 210, 0.1);
    }

    .stat-value {
        font-size: 18px;
        font-weight: 700;
        color: var(--primary-color);
        margin-bottom: 5px;
    }

    .stat-label {
        font-size: 12px;
        color: var(--dark-color);
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .supplier-progress {
        text-align: center;
    }

    .progress-bar {
        width: 100%;
        height: 8px;
        background: #e8eaf6;
        border-radius: 4px;
        overflow: hidden;
        margin-bottom: 8px;
    }

    .progress-fill {
        height: 100%;
        background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        border-radius: 4px;
        transition: width 1s ease;
    }

    .progress-label {
        font-size: 12px;
        color: var(--primary-color);
        font-weight: 600;
    }

    .no-data-card {
        grid-column: 1 / -1;
        text-align: center;
        padding: 60px 40px;
        background: var(--white);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow);
        border: 2px dashed rgba(25, 118, 210, 0.2);
    }

    .no-data-card i {
        font-size: 48px;
        color: var(--primary-color);
        opacity: 0.6;
        margin-bottom: 20px;
    }

    .no-data-card h4 {
        color: var(--dark-color);
        margin-bottom: 10px;
        font-size: 20px;
    }

    .no-data-card p {
        color: #666;
        margin: 0;
    }

    /* Charts Section */
    .charts-section {
        margin-bottom: 40px;
    }

    .charts-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 25px;
    }

    .chart-card {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        padding: 25px;
        box-shadow: var(--shadow);
        border: 1px solid rgba(25, 118, 210, 0.1);
        transition: var(--transition);
    }

    .chart-card:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-lg);
    }

    .chart-card.wide-chart {
        grid-column: 1 / -1;
    }

    .chart-header {
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 2px solid var(--primary-light);
    }

    .chart-header h4 {
        margin: 0 0 5px 0;
        color: var(--dark-color);
        font-size: 18px;
        font-weight: 700;
    }

    .chart-header p {
        margin: 0;
        color: #666;
        font-size: 14px;
    }

    .chart-container {
        height: 300px;
    }

    .no-charts-message {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        padding: 60px;
        text-align: center;
        box-shadow: var(--shadow);
        border: 2px dashed rgba(25, 118, 210, 0.2);
    }

    .no-charts-content i {
        font-size: 64px;
        color: var(--primary-color);
        opacity: 0.6;
        margin-bottom: 25px;
    }

    .no-charts-content h3 {
        color: var(--dark-color);
        margin-bottom: 15px;
        font-size: 24px;
    }

    .no-charts-content p {
        color: #666;
        margin: 0;
        font-size: 16px;
    }

    /* Breakdown Sections */
    .breakdown-section {
        margin: 30px 0;
    }

    .breakdown-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    .breakdown-card {
        background: white;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 4px 15px rgba(25, 118, 210, 0.15);
        border: 1px solid rgba(25, 118, 210, 0.1);
        transition: all 0.3s ease;
    }

    .breakdown-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 25px rgba(25, 118, 210, 0.2);
    }

    .breakdown-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 2px solid rgba(25, 118, 210, 0.1);
    }

    .breakdown-header h4 {
        margin: 0;
        color: var(--dark-color);
        font-size: 18px;
        font-weight: 700;
    }

    .tax-total {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 8px 15px;
        border-radius: 20px;
        font-size: 16px;
        font-weight: 700;
    }

    .breakdown-details {
        display: flex;
        flex-direction: column;
        gap: 12px;
    }

    .tax-detail-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 0;
        border-bottom: 1px solid rgba(25, 118, 210, 0.1);
    }

    .tax-detail-row:last-child {
        border-bottom: none;
    }

    .tax-detail-row span:first-child {
        color: var(--text-color);
        font-weight: 600;
    }

    .tax-detail-row span:last-child {
        color: var(--primary-color);
        font-weight: 700;
        font-size: 16px;
    }

    .tax-progress {
        margin-top: 15px;
    }

    .tax-progress-bar {
        width: 100%;
        height: 8px;
        background: rgba(25, 118, 210, 0.1);
        border-radius: 4px;
        overflow: hidden;
        margin-bottom: 8px;
    }

    .tax-progress-fill {
        height: 100%;
        background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        border-radius: 4px;
        transition: width 0.3s ease;
    }

    .tax-percentage {
        font-size: 12px;
        color: var(--text-color);
        font-weight: 600;
    }

    /* Monthly Trends */
    .monthly-trend-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    .monthly-card {
        background: white;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 4px 15px rgba(25, 118, 210, 0.15);
        border: 1px solid rgba(25, 118, 210, 0.1);
        transition: all 0.3s ease;
    }

    .monthly-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 25px rgba(25, 118, 210, 0.2);
    }

    .monthly-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 2px solid rgba(25, 118, 210, 0.1);
    }

    .monthly-header h4 {
        margin: 0;
        color: var(--dark-color);
        font-size: 18px;
        font-weight: 700;
    }

    .monthly-total {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 8px 15px;
        border-radius: 20px;
        font-size: 16px;
        font-weight: 700;
    }

    .monthly-details {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .metric-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 15px;
    }

    .metric-item {
        background: #f3f8ff;
        padding: 15px;
        border-radius: 8px;
        border: 1px solid rgba(25, 118, 210, 0.1);
        text-align: center;
    }

    .metric-label {
        display: block;
        font-size: 12px;
        color: var(--text-color);
        font-weight: 600;
        margin-bottom: 8px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .metric-value {
        font-size: 16px;
        color: var(--primary-color);
        font-weight: 700;
    }

    .monthly-progress {
        text-align: center;
    }

    .monthly-progress-bar {
        width: 100%;
        height: 8px;
        background: rgba(25, 118, 210, 0.1);
        border-radius: 4px;
        overflow: hidden;
        margin-bottom: 8px;
    }

    .monthly-progress-fill {
        height: 100%;
        background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        border-radius: 4px;
        transition: width 0.3s ease;
    }

    .monthly-percentage {
        font-size: 12px;
        color: var(--primary-color);
        font-weight: 600;
    }

    /* Supplier Details */
    .supplier-details-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        gap: 25px;
        margin-top: 20px;
    }

    .supplier-details-card {
        background: white;
        border-radius: 12px;
        padding: 25px;
        box-shadow: 0 4px 15px rgba(25, 118, 210, 0.15);
        border: 1px solid rgba(25, 118, 210, 0.1);
        transition: all 0.3s ease;
    }

    .supplier-details-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 25px rgba(25, 118, 210, 0.2);
    }

    .supplier-details-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 2px solid rgba(25, 118, 210, 0.1);
    }

    .supplier-details-header h4 {
        margin: 0;
        color: var(--dark-color);
        font-size: 20px;
        font-weight: 700;
    }

    .supplier-status {
        padding: 6px 15px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .supplier-status.excellent {
        background: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .supplier-status.good {
        background: #cce7ff;
        color: #004085;
        border: 1px solid #b3d7ff;
    }

    .supplier-status.average {
        background: #fff3cd;
        color: #856404;
        border: 1px solid #ffeaa7;
    }

    .supplier-status.poor {
        background: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

    .supplier-metrics {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .discount-savings {
        background: linear-gradient(135deg, rgba(25, 118, 210, 0.1), rgba(21, 101, 192, 0.1));
        padding: 15px;
        border-radius: 8px;
        text-align: center;
        border: 1px solid rgba(25, 118, 210, 0.2);
    }

    .discount-amount {
        color: var(--primary-color);
        font-weight: 700;
        font-size: 16px;
    }

    /* Animations */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(40px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes dotPulse {
        0%, 80%, 100% {
            transform: scale(0);
        }
        40% {
            transform: scale(1);
        }
    }

    @@keyframes float {
        0%, 100% {
            transform: translateY(0px);
        }
        50% {
            transform: translateY(-20px);
        }
    }

    /* Responsive Design */
    @@media (max-width: 1024px) {
        .charts-grid {
            grid-template-columns: 1fr;
        }
        
        .chart-card.wide-chart {
            grid-column: 1;
        }
        
        .summary-cards {
            grid-template-columns: repeat(2, 1fr);
        }
        
        .supplier-stats {
            grid-template-columns: 1fr;
            gap: 10px;
        }
    }

    @@media (max-width: 768px) {
        .purchase-summary-container {
            padding: 15px;
        }
        
        .page-header {
            padding: 25px 20px;
        }
        
        .header-content {
            flex-direction: column;
            gap: 20px;
            text-align: center;
        }
        
        .title-info h1 {
            font-size: 28px;
        }
        
        .summary-cards {
            grid-template-columns: 1fr;
        }
        
        .supplier-cards {
            grid-template-columns: 1fr;
        }
        
        .filter-controls {
            grid-template-columns: 1fr;
        }
        
        .filter-actions {
            justify-content: center;
        }
    }

    @@media (max-width: 480px) {
        .purchase-summary-container {
            padding: 10px;
        }
        
        .page-header {
            padding: 20px 15px;
        }
        
        .title-info h1 {
            font-size: 24px;
        }
        
        .title-icon {
            width: 60px;
            height: 60px;
            font-size: 24px;
        }
        
        .summary-card {
            flex-direction: column;
            text-align: center;
            gap: 15px;
        }
        
        .card-value {
            font-size: 24px;
        }
        
        .section-header {
            flex-direction: column;
            gap: 15px;
            text-align: center;
        }
    }

    /* Grid Section */
    .grid-section {
        margin-bottom: 30px;
    }

    .grid-card {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow);
        border: 1px solid rgba(25, 118, 210, 0.1);
        overflow: hidden;
    }

    .grid-content {
        padding: 0;
    }

    .grid-actions {
        display: flex;
        gap: 10px;
    }

    /* Grid Cell Styles */
    .amount-cell {
        text-align: right;
        font-weight: 600;
    }

    .amount-value {
        padding: 4px 8px;
        border-radius: 4px;
        font-weight: 700;
    }

    .amount-value.high-amount {
        background: rgba(76, 175, 80, 0.1);
        color: #4caf50;
        border: 1px solid rgba(76, 175, 80, 0.3);
    }

    .amount-value.medium-amount {
        background: rgba(255, 152, 0, 0.1);
        color: #ff9800;
        border: 1px solid rgba(255, 152, 0, 0.3);
    }

    .amount-value.normal-amount {
        background: var(--primary-light);
        color: var(--primary-color);
        border: 1px solid rgba(25, 118, 210, 0.3);
    }

    .remarks-cell {
        max-width: 200px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        cursor: help;
    }

    /* View Button in Grid */
    .view-btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 6px;
        padding: 8px 12px;
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        color: var(--white);
        border: none;
        border-radius: var(--border-radius);
        cursor: pointer;
        transition: var(--transition);
        box-shadow: 0 2px 8px rgba(25, 118, 210, 0.2);
        font-size: 12px;
        font-weight: 600;
        min-width: 70px;
    }

    .view-btn:hover {
        background: linear-gradient(135deg, var(--primary-dark), #0d47a1);
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(25, 118, 210, 0.3);
    }

    .view-btn i {
        font-size: 11px;
    }

    .view-btn span {
        font-size: 11px;
        font-weight: 600;
    }

    /* No Records Template */
    .no-records {
        text-align: center;
        padding: 60px 40px;
        color: var(--dark-color);
    }

    .no-records-icon {
        font-size: 48px;
        color: var(--primary-color);
        opacity: 0.6;
        margin-bottom: 20px;
    }

    .no-records h4 {
        margin-bottom: 15px;
        font-size: 20px;
        font-weight: 700;
    }

    .no-records p {
        color: #666;
        margin-bottom: 10px;
        font-size: 14px;
    }

    /* Modern Grid Styling */
    .modern-grid .e-grid .e-gridheader {
        background: linear-gradient(135deg, #f8f9fa, #ffffff);
        border-bottom: 2px solid var(--primary-color);
    }

    .modern-grid .e-grid .e-headercell {
        font-weight: 700;
        color: var(--dark-color);
        border-right: 1px solid #dee2e6;
        font-size: 13px;
    }

    .modern-grid .e-grid .e-row:hover {
        background: var(--primary-light);
        cursor: pointer;
    }

    .modern-grid .e-grid .e-altrow {
        background: #f8f9fa;
    }

    .modern-grid .e-grid .e-rowcell {
        border-right: 1px solid #e9ecef;
        padding: 12px 8px;
        font-size: 13px;
    }

    .modern-grid .e-pager {
        background: var(--light-color);
        border-top: 1px solid rgba(25, 118, 210, 0.1);
    }

    .modern-grid .e-pager .e-numericitem {
        background: transparent;
        border: 1px solid rgba(25, 118, 210, 0.3);
        color: var(--primary-color);
        margin: 0 2px;
    }

    .modern-grid .e-pager .e-numericitem.e-currentitem {
        background: var(--primary-color);
        color: var(--white);
    }

    .modern-grid .e-pager .e-numericitem:hover {
        background: var(--primary-light);
    }

    /* Grid Responsive Design */
    @@media (max-width: 768px) {
        .grid-section {
            margin: 20px -15px 30px -15px;
        }
        
        .grid-card {
            border-radius: 0;
            border-left: none;
            border-right: none;
        }
        
        .modern-grid .e-grid .e-rowcell {
            padding: 8px 4px;
            font-size: 12px;
        }
        
        .modern-grid .e-grid .e-headercell {
            font-size: 11px;
            padding: 8px 4px;
        }
    }

    /* Syncfusion Customizations */
    .e-daterangepicker.date-range-picker .e-input-group {
        border-color: rgba(25, 118, 210, 0.3);
        border-radius: var(--border-radius);
    }

    .e-daterangepicker.date-range-picker .e-input-group:focus-within {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.2);
    }

    .e-dropdownlist.supplier-dropdown .e-input-group {
        border-color: rgba(25, 118, 210, 0.3);
        border-radius: var(--border-radius);
    }

    .e-dropdownlist.supplier-dropdown .e-input-group:focus-within {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.2);
    }
</style>