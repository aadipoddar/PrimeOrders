@page "/Accounting"

@using PrimeBakesLibrary.Models.Accounts.FinancialAccounting;
@using PrimeBakesLibrary.Models.Accounts.Masters;
@using PrimeBakesLibrary.Models.Common;
@using PrimeBakesLibrary.Data.Common;
@using Syncfusion.Blazor.Spinner;
@using Syncfusion.Blazor.Popups;

<PageTitle>Financial Accounting</PageTitle>

<HeadContent>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" 
		  integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" 
		  crossorigin="anonymous" referrerpolicy="no-referrer" />
</HeadContent>

@if (_isLoading)
{
	<div class="loading-overlay">
		<div class="loading-content">
			<div class="circular-dots-loader">
				<span class="dot dot-1"></span>
				<span class="dot dot-2"></span>
				<span class="dot dot-3"></span>
			</div>
			<p class="loading-text">Loading Financial Accounting...</p>
		</div>
	</div>
}

<div class="accounting-page">
	<div class="page-header">
		<div style="display: flex; justify-content: space-between; align-items: center;">
			<div>
				<h1>Financial Accounting</h1>
				<p class="subtitle">Manage your accounting transactions and vouchers</p>
			</div>
			<SfButton Content="Back to Dashboard"
					  CssClass="btn-primary"
					  IconCss="e-icons e-home"
					  OnClick="@(() => NavigationManager.NavigateTo("/"))" />
		</div>
	</div>

	<div class="main-content">
		<!-- Transaction Details Card -->
		<div class="card">
			<div class="card-header">
				<span class="icon">📋</span>
				<h3>Transaction Details</h3>
			</div>

			<div class="form-group">
				<label>Voucher Type</label>
				<SfComboBox TValue="int"
							TItem="VoucherModel"
							Value="_accounting.VoucherId"
							DataSource="_vouchers"
							Placeholder="Select Voucher Type"
							FloatLabelType="FloatLabelType.Auto">
					<ComboBoxEvents TItem="VoucherModel" TValue="int" ValueChange="OnVoucherTypeChanged" />
					<ComboBoxFieldSettings Text="Name" Value="Id" />
				</SfComboBox>
			</div>

			<div class="form-row">
				<div class="form-group">
					<label>Accounting Date</label>
					<SfDatePicker TValue="DateOnly"
								  Format="dd-MM-yyyy"
								  Value="_accounting.AccountingDate">
						<DatePickerEvents TValue="DateOnly" ValueChange="OnAccountingDateChanged" />
					</SfDatePicker>
				</div>

				<div class="form-group">
					<label>Transaction No.</label>
					<SfTextBox Readonly="true"
							   Value="@_accounting.TransactionNo"/>
				</div>
			</div>

			<div class="form-group">
				<label>Financial Year</label>
				<SfTextBox Readonly="true"
						   Value="@($"{_financialYear?.StartDate:dd-MM-yyyy} to {_financialYear?.EndDate:dd-MM-yyyy} | {_financialYear?.Remarks}")" />
			</div>

			<div class="form-group">
				<label>Transaction Remarks</label>
				<SfTextBox Placeholder="Enter remarks for this transaction..."
						   @bind-Value="_accounting.Remarks"
						   Multiline="true" />
			</div>
		</div>

		<!-- Transaction Summary Card -->
		<div class="card summary-card">
			<div class="card-header">
				<span class="icon">💰</span>
				<h3>Transaction Summary</h3>
			</div>

			<div class="summary-row">
				<span class="summary-label">Total Debit:</span>
				<span class="summary-value">₹ @_totalDebit.ToString("N2")</span>
			</div>

			<div class="summary-row">
				<span class="summary-label">Total Credit:</span>
				<span class="summary-value">₹ @_totalCredit.ToString("N2")</span>
			</div>

			<div class="summary-row @(_balance == 0 ? "balance-zero" : (_balance > 0 ? "balance-positive" : "balance-negative"))">
				<span class="summary-label">Balance:</span>
				<span class="summary-value">₹ @_balance.ToString("N2")</span>
			</div>

			<div class="actions-row">
				<SfButton Content="Clear All"
						  CssClass="btn-danger"
						  IconCss="e-icons e-close"
						  OnClick="() => _clearConfirmDialog.ShowAsync()"
						  Disabled="@(_accountingCart.Count == 0)" />

				<SfButton Content="Save Transaction"
						  CssClass="btn-success"
						  IconCss="e-icons e-save"
						  OnClick="ShowSaveConfirmDialog"
						  Disabled="@(!ValidateForm())" />
			</div>
		</div>

		<!-- Add Ledger Entry Card -->
		<div class="card full-width">
			<div class="card-header">
				<span class="icon">📝</span>
				<h3>Add Ledger Entry</h3>
			</div>

			<div class="ledger-entry-row">
				<div class="form-group">
					<label>Search Ledger</label>
					<SfAutoComplete TValue="LedgerModel"
									TItem="LedgerModel"
									Placeholder="Select a Ledger"
									Value="@_selectedLedger"
									DataSource="@_ledgers"
									AllowFiltering="true"
									FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains">
						<AutoCompleteEvents TItem="LedgerModel" TValue="LedgerModel" ValueChange="OnLedgerChanged" />
						<AutoCompleteFieldSettings Value="Name" />
					</SfAutoComplete>
				</div>

				<div class="form-group">
					<label>Debit Amount</label>
					<SfNumericTextBox TValue="decimal?"
									  Placeholder="Enter debit amount"
									  Value="_selectedCart?.Debit"
									  Decimals="2"
									  Min="0"
									  Step="0.01m"
									  Format="N2"
									  ShowSpinButton="false"
									  Enabled="@(_selectedLedger != null)">
						<NumericTextBoxEvents TValue="decimal?" ValueChange="OnDebitChanged" />
					</SfNumericTextBox>
				</div>

				<div class="form-group">
					<label>Credit Amount</label>
					<SfNumericTextBox TValue="decimal?"
									  Placeholder="Enter credit amount"
									  Value="_selectedCart?.Credit"
									  Decimals="2"
									  Min="0"
									  Step="0.01m"
									  Format="N2"
									  ShowSpinButton="false"
									  Enabled="@(_selectedLedger != null)">
						<NumericTextBoxEvents TValue="decimal?" ValueChange="OnCreditChanged" />
					</SfNumericTextBox>
				</div>

				<div class="form-group">
					<label>Entry Remarks</label>
					<SfTextBox Placeholder="Enter remarks for this entry..."
							   Value="@_selectedCart?.Remarks"
							   ValueChanged="OnRemarksChanged"
							   Enabled="@(_selectedLedger != null)"
							   Multiline="false" />
				</div>

				<SfButton Content="@(_isRetrieving ? "Loading..." : "References")"
						  CssClass="btn-primary"
						  IconCss="e-icons e-search"
						  OnClick="RetrieveReferences"
						  Disabled="@(_isRetrieving || _selectedLedger == null)" />

				<div class="form-group">
					<label>Reference (Optional)</label>
					<SfComboBox TValue="LedgerOverviewModel"
								TItem="LedgerOverviewModel"
								Value="_selectedLedgerReference"
								DataSource="_ledgerReferences"
								Placeholder="Select reference..."
								Enabled="@(_ledgerReferences.Count > 0)">
						<ComboBoxEvents TItem="LedgerOverviewModel" TValue="LedgerOverviewModel" ValueChange="OnReferenceChanged" />
						<ComboBoxFieldSettings Text="ReferenceNo" Value="Id" />
					</SfComboBox>
				</div>

				<SfButton Content="Add Ledger"
						  CssClass="btn-success"
						  IconCss="e-icons e-plus"
						  OnClick="AddToCart"
						  Disabled="@(_selectedLedger == null || (_selectedCart?.Debit == null && _selectedCart?.Credit == null))" />
			</div>

		</div>
	</div>

	<!-- Accounting Entries Grid -->
	<div class="grid-section">
		<div class="grid-card">
			<div class="grid-header">
				<div class="header-content">
					<div class="header-title">
						<span class="grid-icon">📊</span>
						<div>
							<h3>Accounting Entries</h3>
							<p class="grid-subtitle">Manage your transaction entries (@_accountingCart.Count entries)</p>
						</div>
					</div>
					@if (_accountingCart.Count > 0)
					{
						<div class="summary-badges">
							<span class="summary-badge debit">
								<span class="badge-label">Total Debit</span>
								<span class="badge-value">₹@_totalDebit.ToString("N2")</span>
							</span>
							<span class="summary-badge credit">
								<span class="badge-label">Total Credit</span>
								<span class="badge-value">₹@_totalCredit.ToString("N2")</span>
							</span>
						</div>
					}
				</div>
			</div>

			<div class="grid-content">
				@if (_accountingCart.Count == 0)
				{
					<div class="empty-grid-state">
						<div class="empty-icon">📝</div>
						<h4>No Entries Added</h4>
						<p>Add ledger entries above to see them listed here</p>
					</div>
				}
				else
				{
					<SfGrid @ref="_sfAccountingCart"
							ID="AccountingCartGrid"
							DataSource="@_accountingCart"
							AllowPaging="true"
							AllowTextWrap="true"
							Height="auto"
							GridLines="GridLine.None"
							AllowSorting="true"
							AllowResizing="true"
							CssClass="modern-accounting-grid"
							Toolbar="@(new List<string>() { "Search" })">
						<GridColumns>
							<GridColumn Field="Name" HeaderText="Ledger Name" Width="200">
								<Template Context="data">
									@{
										var cartItem = (AccountingCartModel)data;
									}
									<div class="ledger-cell">
										<div class="ledger-info">
											<span class="ledger-name">@cartItem.Name</span>
										</div>
									</div>
								</Template>
							</GridColumn>
							<GridColumn Field="Debit" HeaderText="Debit Amount" Width="120" Format="N2" TextAlign="TextAlign.Right">
								<Template Context="data">
									@{
										var cartItem = (AccountingCartModel)data;
									}
									<div class="amount-cell debit-cell">
										@if (cartItem.Debit.HasValue && cartItem.Debit > 0)
										{
											<span class="currency-symbol">₹</span>
											<span class="amount-value">@cartItem.Debit.Value.ToString("N2")</span>
										}
										else
										{
											<span class="no-amount">-</span>
										}
									</div>
								</Template>
							</GridColumn>
							<GridColumn Field="Credit" HeaderText="Credit Amount" Width="120" Format="N2" TextAlign="TextAlign.Right">
								<Template Context="data">
									@{
										var cartItem = (AccountingCartModel)data;
									}
									<div class="amount-cell credit-cell">
										@if (cartItem.Credit.HasValue && cartItem.Credit > 0)
										{
											<span class="currency-symbol">₹</span>
											<span class="amount-value">@cartItem.Credit.Value.ToString("N2")</span>
										}
										else
										{
											<span class="no-amount">-</span>
										}
									</div>
								</Template>
							</GridColumn>
							<GridColumn Field="ReferenceNo" HeaderText="Reference" Width="150">
								<Template Context="data">
									@{
										var cartItem = (AccountingCartModel)data;
									}
									<div class="reference-cell">
										@if (!string.IsNullOrEmpty(cartItem.ReferenceNo))
										{
											<span class="reference-badge">@cartItem.ReferenceNo</span>
										}
										else
										{
											<span class="no-reference">No Reference</span>
										}
									</div>
								</Template>
							</GridColumn>
							<GridColumn Field="Remarks" HeaderText="Remarks" Width="200">
								<Template Context="data">
									@{
										var cartItem = (AccountingCartModel)data;
									}
									<div class="remarks-cell">
										@if (!string.IsNullOrEmpty(cartItem.Remarks))
										{
											<span class="remarks-text" title="@cartItem.Remarks">@cartItem.Remarks</span>
										}
										else
										{
											<span class="no-remarks">No remarks</span>
										}
									</div>
								</Template>
							</GridColumn>
							<GridColumn HeaderText="Actions" Width="150" AllowSorting="false" AllowFiltering="false">
								<Template Context="data">
									@{
										var cartItem = (AccountingCartModel)data;
									}
									<div class="action-buttons">
										<button class="action-btn edit-btn" @onclick="@(() => EditCartItem(cartItem))" title="Edit Entry">
											<i class="fas fa-edit"></i>
										</button>
										<button class="action-btn remove-btn" @onclick="@(() => ShowRemoveConfirmDialog(cartItem))" title="Remove Entry">
											<i class="fas fa-trash"></i>
										</button>
									</div>
								</Template>
							</GridColumn>
						</GridColumns>
						<GridPageSettings PageSize="10" PageSizes="@(new int[] { 5, 10, 15, 20 })"></GridPageSettings>
					</SfGrid>
				}
			</div>
		</div>
	</div>
</div>

<!-- Toast Notifications -->
<SfToast @ref="_sfToast"
		 ID="toast_success"
		 Timeout="3000"
		 ShowCloseButton="true">
	<ToastPosition X="Right" Y="Top" />
	<ToastAnimationSettings>
		<ToastShowAnimationSettings Effect="ToastEffect.SlideRightIn" Duration="600" />
		<ToastHideAnimationSettings Effect="ToastEffect.SlideRightOut" Duration="600" />
	</ToastAnimationSettings>
</SfToast>

<SfToast @ref="_sfErrorToast"
		 ID="toast_error"
		 Timeout="5000"
		 ShowCloseButton="true">
	<ToastPosition X="Right" Y="Top" />
	<ToastAnimationSettings>
		<ToastShowAnimationSettings Effect="ToastEffect.SlideRightIn" Duration="600" />
		<ToastHideAnimationSettings Effect="ToastEffect.SlideRightOut" Duration="600" />
	</ToastAnimationSettings>
</SfToast>

<SfToast @ref="_sfWarningToast"
		 ID="toast_warning"
		 Timeout="4000"
		 ShowCloseButton="true">
	<ToastPosition X="Right" Y="Top" />
	<ToastAnimationSettings>
		<ToastShowAnimationSettings Effect="ToastEffect.SlideRightIn" Duration="600" />
		<ToastHideAnimationSettings Effect="ToastEffect.SlideRightOut" Duration="600" />
	</ToastAnimationSettings>
</SfToast>

<SfToast @ref="_sfInfoToast"
		 ID="toast_info"
		 Timeout="4000"
		 ShowCloseButton="true">
	<ToastPosition X="Right" Y="Top" />
	<ToastAnimationSettings>
		<ToastShowAnimationSettings Effect="ToastEffect.SlideRightIn" Duration="600" />
		<ToastHideAnimationSettings Effect="ToastEffect.SlideRightOut" Duration="600" />
	</ToastAnimationSettings>
</SfToast>

<!-- Confirmation Dialogs -->
<SfDialog @ref="_saveConfirmDialog"
		  Width="600px"
		  Height="auto"
		  IsModal="true"
		  Visible="false"
		  ShowCloseIcon="false"
		  AllowDragging="true"
		  EnableResize="false"
		  CssClass="modern-dialog">
	<DialogPositionData X="Center" Y="Center" />
	<DialogTemplates>
		<Header>
			<div class="dialog-header save-dialog">
				<div class="dialog-icon save-icon">
					<i class="fas fa-save"></i>
				</div>
				<div class="dialog-title-section">
					<h4>Confirm Transaction</h4>
					<p>Review your transaction before saving</p>
				</div>
			</div>
		</Header>
		<Content>
			<div class="dialog-content">
				<div class="transaction-summary">
					<div class="summary-item">
						<span class="summary-label">Transaction No:</span>
						<span class="summary-value">@_accounting.TransactionNo</span>
					</div>
					<div class="summary-item">
						<span class="summary-label">Total Entries:</span>
						<span class="summary-value">@_accountingCart.Count</span>
					</div>
					<div class="summary-row amounts-row">
						<div class="amount-item">
							<span class="amount-label">Total Debit</span>
							<span class="amount-value debit">₹@_totalDebit.ToString("N2")</span>
						</div>
						<div class="amount-item">
							<span class="amount-label">Total Credit</span>
							<span class="amount-value credit">₹@_totalCredit.ToString("N2")</span>
						</div>
					</div>
					<div class="balance-row">
						<span class="balance-label">Balance:</span>
						<span class="balance-value @(_balance == 0 ? "balanced" : "unbalanced")">
							₹@_balance.ToString("N2")
							@if (_balance == 0)
							{
								<i class="fas fa-check-circle balance-icon"></i>
							}
						</span>
					</div>
				</div>
			</div>
		</Content>
		<FooterTemplate>
			<div class="dialog-footer">
				<button class="dialog-btn btn-cancel" @onclick="() => _saveConfirmDialog.HideAsync()" disabled="@_isSaving">
					<i class="fas fa-times"></i>
					<span>Cancel</span>
				</button>
				<button class="dialog-btn btn-save" @onclick="ConfirmAccountingEntry" disabled="@_isSaving">
					@if (_isSaving)
					{
						<i class="fas fa-spinner fa-spin"></i>
						<span>Saving...</span>
					}
					else
					{
						<i class="fas fa-save"></i>
						<span>Save Transaction</span>
					}
				</button>
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<SfDialog @ref="_clearConfirmDialog"
		  Width="450px"
		  Height="auto"
		  IsModal="true"
		  Visible="false"
		  ShowCloseIcon="false"
		  AllowDragging="true"
		  EnableResize="false"
		  CssClass="modern-dialog">
	<DialogPositionData X="Center" Y="Center" />
	<DialogTemplates>
		<Header>
			<div class="dialog-header clear-dialog">
				<div class="dialog-icon clear-icon">
					<i class="fas fa-broom"></i>
				</div>
				<div class="dialog-title-section">
					<h4>Clear All Entries</h4>
					<p>This action cannot be undone</p>
				</div>
			</div>
		</Header>
		<Content>
			<div class="dialog-content">
				<div class="warning-content">
					<div class="warning-icon">
						<i class="fas fa-exclamation-triangle"></i>
					</div>
					<div class="warning-text">
						<p>Are you sure you want to clear all accounting entries?</p>
						<p class="warning-note">You will lose <strong>@_accountingCart.Count entries</strong> and all unsaved changes.</p>
					</div>
				</div>
			</div>
		</Content>
		<FooterTemplate>
			<div class="dialog-footer">
				<button class="dialog-btn btn-cancel" @onclick="() => _clearConfirmDialog.HideAsync()">
					<i class="fas fa-times"></i>
					<span>Cancel</span>
				</button>
				<button class="dialog-btn btn-clear" @onclick="ConfirmClearCart">
					<i class="fas fa-broom"></i>
					<span>Clear All</span>
				</button>
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<SfDialog @ref="_removeConfirmDialog"
		  Width="450px"
		  Height="auto"
		  IsModal="true"
		  Visible="false"
		  ShowCloseIcon="false"
		  AllowDragging="true"
		  EnableResize="false"
		  CssClass="modern-dialog">
	<DialogPositionData X="Center" Y="Center" />
	<DialogTemplates>
		<Header>
			<div class="dialog-header remove-dialog">
				<div class="dialog-icon remove-icon">
					<i class="fas fa-trash-alt"></i>
				</div>
				<div class="dialog-title-section">
					<h4>Remove Entry</h4>
					<p>Delete this accounting entry</p>
				</div>
			</div>
		</Header>
		<Content>
			<div class="dialog-content">
				@if (_itemToRemove != null)
				{
					<div class="remove-content">
						<div class="entry-details">
							<div class="entry-item">
								<span class="entry-label">Ledger:</span>
								<span class="entry-value">@_itemToRemove.Name</span>
							</div>
							<div class="entry-item">
								<span class="entry-label">Amount:</span>
								<span class="entry-value">
									@if (_itemToRemove.Debit.HasValue)
									{
										<span class="debit-amount">₹@_itemToRemove.Debit.Value.ToString("N2") (Debit)</span>
									}
									else if (_itemToRemove.Credit.HasValue)
									{
										<span class="credit-amount">₹@_itemToRemove.Credit.Value.ToString("N2") (Credit)</span>
									}
								</span>
							</div>
						</div>
						<p class="remove-warning">Are you sure you want to remove this entry?</p>
					</div>
				}
			</div>
		</Content>
		<FooterTemplate>
			<div class="dialog-footer">
				<button class="dialog-btn btn-cancel" @onclick="HideRemoveConfirmDialog">
					<i class="fas fa-times"></i>
					<span>Cancel</span>
				</button>
				<button class="dialog-btn btn-remove" @onclick="ConfirmRemoveEntry">
					<i class="fas fa-trash-alt"></i>
					<span>Remove Entry</span>
				</button>
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<style>
	:root {
		--primary-color: #e2137b;
		--primary-dark: #c10e69;
		--secondary-color: #2c3e50;
		--success-color: #4caf50;
		--warning-color: #ff9800;
		--danger-color: #f44336;
		--info-color: #2196f3;
		--light-bg: #f8f9fa;
		--card-bg: #ffffff;
		--border-color: #e1e5e9;
		--text-primary: #2c3e50;
		--text-secondary: #666;
		--text-muted: #999;
	}

	.accounting-page {
		padding: 15px;
		background-color: var(--light-bg);
		min-height: 100vh;
		width: 100%;
		margin: 0;
	}

	.page-header {
		background: linear-gradient(135deg, #e2137b 0%, #c41e3a 100%);
		color: white;
		padding: 20px 30px;
		border-radius: 10px;
		margin-bottom: 20px;
		box-shadow: 0 4px 15px rgba(226, 19, 123, 0.2);
	}

		.page-header h1 {
			margin: 0;
			font-size: 28px;
			font-weight: 600;
		}

		.page-header .subtitle {
			margin: 5px 0 0 0;
			opacity: 0.9;
			font-size: 14px;
		}

	.main-content {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 20px;
		margin-bottom: 20px;
		width: 100%;
	}

	.card {
		background: white;
		padding: 20px;
		border-radius: 10px;
		box-shadow: 0 2px 10px rgba(226, 19, 123, 0.1);
		border: 1px solid #e1e5e9;
		width: 100%;
	}

	.card-header {
		display: flex;
		align-items: center;
		margin-bottom: 20px;
		padding-bottom: 15px;
		border-bottom: 2px solid #f0f0f0;
	}

		.card-header h3 {
			margin: 0;
			color: #2c3e50;
			font-size: 18px;
			font-weight: 600;
		}

		.card-header .icon {
			margin-right: 10px;
			font-size: 20px;
			color: #e2137b;
		}

	.form-row {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 15px;
		margin-bottom: 15px;
	}

	.form-group {
		margin-bottom: 15px;
	}

		.form-group label {
			display: block;
			margin-bottom: 5px;
			font-weight: 500;
			color: #2c3e50;
			font-size: 14px;
		}

	.summary-card {
		background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
		color: #2c3e50;
		border: 2px solid #e2137b;
	}

	.summary-row {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 8px 0;
		border-bottom: 1px solid rgba(226, 19, 123, 0.2);
	}

		.summary-row:last-child {
			border-bottom: none;
			font-size: 18px;
			font-weight: 600;
			margin-top: 10px;
			padding-top: 15px;
			border-top: 2px solid rgba(226, 19, 123, 0.3);
		}

	.summary-label {
		font-weight: 500;
	}

	.summary-value {
		font-family: 'Courier New', monospace;
		font-weight: 600;
	}

	.balance-positive {
		color: #00ff88;
	}

	.balance-negative {
		color: #ff6b6b;
	}

	.balance-zero {
		color: #4ecdc4;
	}

	.actions-row {
		display: flex;
		gap: 15px;
		justify-content: flex-end;
		margin-top: 20px;
		padding-top: 15px;
		border-top: 1px solid #e1e5e9;
	}

	.full-width {
		grid-column: 1 / -1;
	}

	/* Grid Section Styling */
	.grid-section {
		margin-top: 30px;
		width: 100%;
	}

	.grid-card {
		background: var(--card-bg);
		border-radius: 12px;
		box-shadow: 0 4px 20px rgba(226, 19, 123, 0.08);
		border: 1px solid var(--border-color);
		overflow: hidden;
	}

	.grid-header {
		background: linear-gradient(135deg, rgba(226, 19, 123, 0.02) 0%, rgba(255, 255, 255, 0.98) 100%);
		padding: 25px 30px;
		border-bottom: 2px solid rgba(226, 19, 123, 0.08);
	}

	.header-content {
		display: flex;
		justify-content: space-between;
		align-items: center;
	}

	.header-title {
		display: flex;
		align-items: center;
		gap: 15px;
	}

	.grid-icon {
		font-size: 24px;
		color: var(--primary-color);
	}

	.grid-header h3 {
		margin: 0 0 5px 0;
		color: var(--text-primary);
		font-size: 20px;
		font-weight: 700;
	}

	.grid-subtitle {
		margin: 0;
		color: var(--text-secondary);
		font-size: 14px;
		font-weight: 500;
	}

	.summary-badges {
		display: flex;
		gap: 15px;
	}

	.summary-badge {
		background: linear-gradient(135deg, var(--card-bg) 0%, rgba(226, 19, 123, 0.05) 100%);
		border: 1px solid rgba(226, 19, 123, 0.15);
		border-radius: 8px;
		padding: 12px 16px;
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 4px;
	}

	.badge-label {
		font-size: 12px;
		font-weight: 500;
		color: var(--text-secondary);
		text-transform: uppercase;
		letter-spacing: 0.5px;
	}

	.badge-value {
		font-size: 16px;
		font-weight: 700;
		font-family: 'Courier New', monospace;
	}

	.summary-badge.debit .badge-value {
		color: #dc3545;
	}

	.summary-badge.credit .badge-value {
		color: #28a745;
	}

	.grid-content {
		padding: 25px 30px;
	}

	/* Empty State */
	.empty-grid-state {
		text-align: center;
		padding: 60px 40px;
		color: var(--text-secondary);
	}

	.empty-icon {
		font-size: 64px;
		margin-bottom: 20px;
		opacity: 0.6;
	}

	.empty-grid-state h4 {
		margin: 0 0 10px 0;
		color: var(--text-primary);
		font-size: 20px;
		font-weight: 600;
	}

	.empty-grid-state p {
		margin: 0;
		font-size: 14px;
		line-height: 1.5;
	}

	/* Modern Grid Styling */
	.modern-accounting-grid .e-grid {
		border: none;
		border-radius: 8px;
		overflow: hidden;
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
	}

	.modern-accounting-grid .e-grid .e-gridheader {
		background: linear-gradient(135deg, var(--primary-color) 0%, #c10e69 100%);
		border-bottom: none;
	}

	.modern-accounting-grid .e-grid .e-headercell {
		background: transparent;
		color: white;
		font-weight: 600;
		font-size: 13px;
		text-align: center;
		border-right: 1px solid rgba(255, 255, 255, 0.2);
		padding: 15px 8px;
	}

	.modern-accounting-grid .e-grid .e-headercell:last-child {
		border-right: none;
	}

	.modern-accounting-grid .e-grid .e-row {
		border-bottom: 1px solid rgba(226, 19, 123, 0.08);
		transition: all 0.2s ease;
	}

	.modern-accounting-grid .e-grid .e-row:hover {
		background: rgba(226, 19, 123, 0.03);
		transform: translateY(-1px);
		box-shadow: 0 2px 8px rgba(226, 19, 123, 0.1);
	}

	.modern-accounting-grid .e-grid .e-altrow {
		background: rgba(248, 249, 250, 0.5);
	}

	.modern-accounting-grid .e-grid .e-rowcell {
		border-right: 1px solid rgba(226, 19, 123, 0.08);
		padding: 12px 8px;
		vertical-align: middle;
	}

	.modern-accounting-grid .e-grid .e-rowcell:last-child {
		border-right: none;
	}

	/* Grid Cell Styles */
	.ledger-cell {
		display: flex;
		align-items: center;
		gap: 10px;
	}

	.ledger-icon {
		font-size: 16px;
		color: var(--primary-color);
		flex-shrink: 0;
	}

	.ledger-info {
		flex: 1;
		min-width: 0;
	}

	.ledger-name {
		font-weight: 600;
		color: var(--text-primary);
		display: block;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	.amount-cell {
		display: flex;
		align-items: center;
		justify-content: flex-end;
		gap: 4px;
		font-weight: 600;
		font-family: 'Courier New', monospace;
	}

	.amount-cell.debit-cell .amount-value {
		color: #dc3545;
	}

	.amount-cell.credit-cell .amount-value {
		color: #28a745;
	}

	.currency-symbol {
		color: var(--text-secondary);
		font-size: 12px;
	}

	.no-amount {
		color: var(--text-muted);
		font-style: italic;
	}

	.reference-cell {
		text-align: center;
	}

	.reference-badge {
		background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
		color: white;
		padding: 4px 8px;
		border-radius: 12px;
		font-size: 11px;
		font-weight: 600;
		text-transform: uppercase;
		letter-spacing: 0.5px;
	}

	.no-reference {
		color: var(--text-muted);
		font-style: italic;
		font-size: 12px;
	}

	.remarks-cell {
		max-width: 180px;
	}

	.remarks-text {
		display: block;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		color: var(--text-primary);
		font-size: 13px;
	}

	.no-remarks {
		color: var(--text-muted);
		font-style: italic;
		font-size: 12px;
	}

	.action-buttons {
		display: flex;
		gap: 8px;
		justify-content: center;
	}

	.action-btn {
		width: 32px;
		height: 32px;
		border: none;
		border-radius: 6px;
		display: flex;
		align-items: center;
		justify-content: center;
		cursor: pointer;
		transition: all 0.2s ease;
		font-size: 12px;
	}

	.edit-btn {
		background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
		color: white;
	}

	.edit-btn:hover {
		background: linear-gradient(135deg, #138496 0%, #117a8b 100%);
		transform: translateY(-1px);
		box-shadow: 0 4px 8px rgba(23, 162, 184, 0.3);
	}

	.remove-btn {
		background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
		color: white;
	}

	.remove-btn:hover {
		background: linear-gradient(135deg, #c82333 0%, #bd2130 100%);
		transform: translateY(-1px);
		box-shadow: 0 4px 8px rgba(220, 53, 69, 0.3);
	}

	/* Toolbar Styling */
	.modern-accounting-grid .e-toolbar {
		background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
		border-bottom: 1px solid var(--border-color);
		padding: 10px 15px;
	}

	.modern-accounting-grid .e-toolbar .e-input-group input {
		border: 2px solid var(--border-color);
		border-radius: 20px;
		padding: 8px 15px;
		font-size: 13px;
	}

	.modern-accounting-grid .e-toolbar .e-input-group input:focus {
		border-color: var(--primary-color);
		box-shadow: 0 0 0 2px rgba(226, 19, 123, 0.2);
	}

	/* Pager Styling */
	.modern-accounting-grid .e-pager {
		background: linear-gradient(135deg, rgba(226, 19, 123, 0.02) 0%, rgba(255, 255, 255, 0.98) 100%);
		border-top: 1px solid rgba(226, 19, 123, 0.1);
		padding: 15px;
	}

	.modern-accounting-grid .e-pager .e-numericitem,
	.modern-accounting-grid .e-pager .e-currentitem {
		border-radius: 6px;
		margin: 0 2px;
		min-width: 32px;
		height: 32px;
	}

	.modern-accounting-grid .e-pager .e-currentitem {
		background: var(--primary-color);
		color: white;
		font-weight: 600;
	}

	.btn-primary {
		background: linear-gradient(135deg, #e2137b 0%, #c41e3a 100%);
		border: none;
		color: white;
		border-radius: 6px;
	}

	.btn-success {
		background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
		border: none;
		color: white;
		border-radius: 6px;
	}

	.btn-danger {
		background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%);
		border: none;
		color: white;
		border-radius: 6px;
	}

	.loading-overlay {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: rgba(255, 255, 255, 0.95);
		display: flex;
		align-items: center;
		justify-content: center;
		z-index: 9999;
		backdrop-filter: blur(5px);
	}

	.loading-content {
		text-align: center;
		padding: 40px;
		background: var(--card-bg);
		border-radius: 12px;
		box-shadow: 0 10px 25px rgba(226, 19, 123, 0.15);
	}

	.circular-dots-loader {
		position: relative;
		width: 60px;
		height: 60px;
		margin: 0 auto 20px;
	}

	.circular-dots-loader .dot {
		position: absolute;
		width: 12px;
		height: 12px;
		border-radius: 50%;
		animation: rotate 1.8s infinite linear;
	}

	.circular-dots-loader .dot-1 {
		background-color: #e2137b;
		animation-delay: 0s;
	}

	.circular-dots-loader .dot-2 {
		background-color: #c10e69;
		animation-delay: -0.6s;
	}

	.circular-dots-loader .dot-3 {
		background-color: #a10d5b;
		animation-delay: -1.2s;
	}

	.loading-text {
		color: #2c3e50;
		font-size: 16px;
		margin-top: 10px;
		font-weight: 500;
	}

	@@keyframes rotate {
		0% {
			transform: rotate(0deg) translateX(30px) rotate(0deg);
		}
		100% {
			transform: rotate(360deg) translateX(30px) rotate(-360deg);
		}
	}

	/* Additional Desktop Enhancements */
	.e-dialog .e-dlg-content {
		padding: 25px;
		font-size: 14px;
		line-height: 1.6;
	}

	.e-dialog .e-dlg-header-content {
		background: linear-gradient(135deg, #e2137b 0%, #c41e3a 100%);
		color: white;
		font-weight: 600;
	}

	.e-toast-container .e-toast {
		border-radius: 8px;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
		border: none;
	}

	.e-toast-success {
		background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
		border-left: 4px solid #28a745;
	}

	.e-toast-danger {
		background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%);
		border-left: 4px solid #dc3545;
	}

	.e-toast-info {
		background: linear-gradient(135deg, #2196f3 0%, #03a9f4 100%);
		border-left: 4px solid #2196f3;
	}

	.e-toast-warning {
		background: linear-gradient(135deg, #ffc107 0%, #ff9800 100%);
		border-left: 4px solid #ffc107;
		color: #212529;
	}

	.e-toast .e-toast-content .e-toast-message {
		color: white;
		font-weight: 500;
	}

	.e-toast-warning .e-toast-content .e-toast-message {
		color: #212529;
	}

	.e-toast .e-toast-icon.toast-icons {
		margin-right: 8px;
	}

	/* Modern Dialog Styling */
	.modern-dialog .e-dlg-container {
		border-radius: 12px !important;
		overflow: hidden;
		box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15) !important;
		border: none !important;
	}

	.modern-dialog .e-dlg-header-content {
		padding: 0 !important;
		background: transparent !important;
		border-bottom: none !important;
	}

	.modern-dialog .e-dlg-content {
		padding: 0 !important;
	}

	.dialog-header {
		display: flex;
		align-items: center;
		gap: 15px;
		padding: 25px 30px 20px 30px;
		border-bottom: 1px solid rgba(226, 19, 123, 0.1);
	}

	.dialog-header.save-dialog {
		background: linear-gradient(135deg, rgba(40, 167, 69, 0.05) 0%, rgba(255, 255, 255, 0.98) 100%);
	}

	.dialog-header.clear-dialog {
		background: linear-gradient(135deg, rgba(255, 193, 7, 0.05) 0%, rgba(255, 255, 255, 0.98) 100%);
	}

	.dialog-header.remove-dialog {
		background: linear-gradient(135deg, rgba(220, 53, 69, 0.05) 0%, rgba(255, 255, 255, 0.98) 100%);
	}

	.dialog-icon {
		width: 48px;
		height: 48px;
		border-radius: 12px;
		display: flex;
		align-items: center;
		justify-content: center;
		font-size: 20px;
		color: white;
		flex-shrink: 0;
	}

	.dialog-icon.save-icon {
		background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
	}

	.dialog-icon.clear-icon {
		background: linear-gradient(135deg, #ffc107 0%, #ff9800 100%);
	}

	.dialog-icon.remove-icon {
		background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
	}

	.dialog-title-section h4 {
		margin: 0 0 4px 0;
		color: var(--text-primary);
		font-size: 18px;
		font-weight: 700;
	}

	.dialog-title-section p {
		margin: 0;
		color: var(--text-secondary);
		font-size: 13px;
		font-weight: 500;
	}

	.dialog-content {
		padding: 25px 30px;
		max-height: 60vh;
		overflow-y: auto;
	}

	/* Transaction Summary Styling */
	.transaction-summary {
		background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
		border-radius: 10px;
		padding: 20px;
		border: 1px solid var(--border-color);
	}

	.summary-item {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 10px 0;
		border-bottom: 1px solid rgba(226, 19, 123, 0.1);
	}

	.summary-item:last-child {
		border-bottom: none;
	}

	.summary-label {
		font-weight: 600;
		color: var(--text-primary);
		font-size: 14px;
	}

	.summary-value {
		font-weight: 600;
		color: var(--text-primary);
		font-family: 'Courier New', monospace;
	}

	.amounts-row {
		display: flex;
		gap: 20px;
		padding: 15px 0;
		border-bottom: 1px solid rgba(226, 19, 123, 0.2);
		margin-bottom: 15px;
	}

	.amount-item {
		flex: 1;
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 8px;
		padding: 15px;
		background: white;
		border-radius: 8px;
		border: 1px solid rgba(226, 19, 123, 0.1);
	}

	.amount-label {
		font-size: 12px;
		font-weight: 600;
		color: var(--text-secondary);
		text-transform: uppercase;
		letter-spacing: 0.5px;
	}

	.amount-value {
		font-size: 18px;
		font-weight: 700;
		font-family: 'Courier New', monospace;
	}

	.amount-value.debit {
		color: #dc3545;
	}

	.amount-value.credit {
		color: #28a745;
	}

	.balance-row {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 15px 0 0 0;
		font-size: 16px;
	}

	.balance-label {
		font-weight: 700;
		color: var(--text-primary);
	}

	.balance-value {
		display: flex;
		align-items: center;
		gap: 8px;
		font-weight: 700;
		font-family: 'Courier New', monospace;
	}

	.balance-value.balanced {
		color: #28a745;
	}

	.balance-value.unbalanced {
		color: #dc3545;
	}

	.balance-icon {
		font-size: 18px;
	}

	/* Warning Content Styling */
	.warning-content {
		display: flex;
		gap: 20px;
		align-items: flex-start;
	}

	.warning-icon {
		width: 48px;
		height: 48px;
		border-radius: 12px;
		background: linear-gradient(135deg, #ffc107 0%, #ff9800 100%);
		display: flex;
		align-items: center;
		justify-content: center;
		font-size: 20px;
		color: white;
		flex-shrink: 0;
	}

	.warning-text p {
		margin: 0 0 10px 0;
		color: var(--text-primary);
		font-size: 14px;
		line-height: 1.5;
	}

	.warning-note {
		color: var(--text-secondary);
		font-size: 13px !important;
		font-style: italic;
	}

	/* Remove Content Styling */
	.remove-content {
		text-align: center;
	}

	.entry-details {
		background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
		border-radius: 10px;
		padding: 20px;
		margin-bottom: 20px;
		border: 1px solid var(--border-color);
	}

	.entry-item {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 8px 0;
		border-bottom: 1px solid rgba(226, 19, 123, 0.1);
	}

	.entry-item:last-child {
		border-bottom: none;
	}

	.entry-label {
		font-weight: 600;
		color: var(--text-primary);
		font-size: 14px;
	}

	.entry-value {
		font-weight: 600;
		color: var(--text-primary);
		font-family: 'Courier New', monospace;
	}

	.debit-amount {
		color: #dc3545;
	}

	.credit-amount {
		color: #28a745;
	}

	.remove-warning {
		color: var(--text-secondary);
		font-size: 14px;
		margin: 0;
	}

	/* Dialog Footer */
	.dialog-footer {
		display: flex;
		justify-content: flex-end;
		gap: 15px;
		padding: 20px 30px 25px 30px;
		background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
		border-top: 1px solid rgba(226, 19, 123, 0.08);
	}

	.dialog-btn {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 12px 24px;
		border: none;
		border-radius: 8px;
		font-size: 14px;
		font-weight: 600;
		cursor: pointer;
		transition: all 0.2s ease;
		min-width: 120px;
		justify-content: center;
	}

	.dialog-btn:disabled {
		opacity: 0.6;
		cursor: not-allowed;
		transform: none !important;
	}

	.btn-cancel {
		background: #6c757d;
		color: white;
	}

	.btn-cancel:hover:not(:disabled) {
		background: #5a6268;
		transform: translateY(-1px);
		box-shadow: 0 4px 12px rgba(108, 117, 125, 0.3);
	}

	.btn-save {
		background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
		color: white;
	}

	.btn-save:hover:not(:disabled) {
		background: linear-gradient(135deg, #20c997 0%, #17a2b8 100%);
		transform: translateY(-1px);
		box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
	}

	.btn-clear {
		background: linear-gradient(135deg, #ffc107 0%, #ff9800 100%);
		color: #212529;
	}

	.btn-clear:hover:not(:disabled) {
		background: linear-gradient(135deg, #ff9800 0%, #f57c00 100%);
		transform: translateY(-1px);
		box-shadow: 0 4px 12px rgba(255, 193, 7, 0.3);
	}

	.btn-remove {
		background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
		color: white;
	}

	.btn-remove:hover:not(:disabled) {
		background: linear-gradient(135deg, #c82333 0%, #bd2130 100%);
		transform: translateY(-1px);
		box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);
	}

	.e-grid .e-gridheader {
		background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
		font-weight: 600;
		color: #2c3e50;
	}

	.e-grid .e-row:nth-child(even) {
		background-color: #f8f9fa;
	}

	.e-grid .e-row:hover {
		background-color: #e3f2fd !important;
	}

	/* Full width utilization */
	@@media (min-width: 1200px) {
		.main-content {
			width: 100%;
			margin: 0;
		}

		.grid-container {
			width: 100%;
			margin-top: 20px;
		}
	}

	/* Form field enhancements */
	.e-input-group, .e-float-input {
		margin-bottom: 8px;
	}

		.e-input-group .e-input, .e-float-input .e-input {
			border-radius: 6px;
			border-color: #ced4da;
		}

			.e-input-group .e-input:focus, .e-float-input .e-input:focus {
				border-color: #e2137b;
				box-shadow: 0 0 0 0.2rem rgba(226, 19, 123, 0.25);
			}

	/* Single line ledger entry layout */
	.ledger-entry-row {
		display: grid;
		grid-template-columns: 3fr 0.8fr 0.8fr 1.5fr 0.8fr 1.5fr 0.8fr;
		gap: 15px;
		align-items: end;
		margin-bottom: 15px;
	}

		.ledger-entry-row .form-group {
			margin-bottom: 0;
		}

	.ledger-references-row {
		display: grid;
		grid-template-columns: 1fr 2fr;
		gap: 15px;
		align-items: end;
		margin: 15px 0;
	}

	/* Responsive behavior for smaller screens */
	@@media (max-width: 1400px) {
		.ledger-entry-row {
			grid-template-columns: 2.5fr 0.7fr 0.7fr 1.2fr 0.8fr 1.2fr 0.8fr;
			gap: 12px;
		}
	}

	@@media (max-width: 1200px) {
		.ledger-entry-row {
			grid-template-columns: 1fr 1fr;
			gap: 15px;
		}

			.ledger-entry-row .form-group:first-child {
				grid-column: 1 / -1;
			}
	}
</style>