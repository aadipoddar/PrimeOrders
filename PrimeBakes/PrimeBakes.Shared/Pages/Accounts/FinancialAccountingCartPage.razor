@page "/Accounting/Cart"
@using PrimeBakesLibrary.Models.Accounts.FinancialAccounting
@using PrimeBakesLibrary.Models.Accounts.Masters
@using PrimeBakesLibrary.Models.Common
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Popups

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />

<PageTitle>Accounting Cart - PrimeBakes</PageTitle>

@if (_isLoading)
{
	<div class="loader-container">
		<div class="circular-dots-loader">
			<span class="dot dot-1"></span>
			<span class="dot dot-2"></span>
			<span class="dot dot-3"></span>
		</div>
		<p class="loading-text">Loading Accounting Cart...</p>
	</div>
}
else
{
	<div class="accounting-cart-container">
		<!-- Header -->
		<div class="page-header">
			<button @onclick='() => NavigationManager.NavigateTo("/Accounting")' class="back-button" disabled="@_isSaving">
				<i class="fas fa-arrow-left"></i>
			</button>
			<h1 class="page-title">Accounting Cart</h1>
			<button @onclick='() => _transactionDetailsDialogVisible = true' class="header-action-btn" disabled="@_isSaving">
				<i class="fas fa-receipt"></i> Details
			</button>
		</div>

		<!-- Main Content -->
		<div class="main-content">
			@if (_cart.Any())
		{
			<!-- Balance Summary Card -->
				<div class="balance-summary-card">
					<div class="balance-info">
						<div class="balance-item debit">
							<span class="balance-label">Total Debit</span>
							<span class="balance-value">₹@TotalDebit.ToString("N2")</span>
						</div>
						<div class="balance-item credit">
							<span class="balance-label">Total Credit</span>
							<span class="balance-value">₹@TotalCredit.ToString("N2")</span>
						</div>
						<div class="balance-item difference @(BalanceDifference == 0 ? "balanced" : (BalanceDifference > 0 ? "debit-heavy" : "credit-heavy"))">
							<span class="balance-label">Difference</span>
							<span class="balance-value">₹@Math.Abs(BalanceDifference).ToString("N2")</span>
							@if (BalanceDifference == 0)
							{
								<span class="balance-status balanced">✓ Balanced</span>
							}
							else
							{
								<span class="balance-status unbalanced">⚠ Unbalanced</span>
							}
						</div>
					</div>
				</div>

				<!-- Cart Items -->
				<div class="cart-card">
					<div class="card-header">
						<h3><i class="fas fa-list-alt"></i> Ledger Entries</h3>
						<p class="item-count">@_cart.Count entries</p>
					</div>

					<div class="cart-grid-container">
						<SfGrid @ref="_sfGrid"
								EnableAdaptiveUI="true"
								DataSource="_cart"
								AllowPaging="true"
								AllowTextWrap="true"
								AllowSorting="false"
								Toolbar="@(new List<string>() { "Search" })"
								Height="auto">

							<GridPageSettings PageSize="6" />

							<GridColumns>
								<GridColumn Field="@nameof(AccountingCartModel.Name)" HeaderText="Ledger" Width="25%" />
								<GridColumn HeaderText="Amount" Width="20%" TextAlign="TextAlign.Center">
									<Template>
										@{
											var item = (context as AccountingCartModel);
										}
										@if (item is not null)
										{
											<div class="amount-display">
												@if ((item.Debit ?? 0) > 0)
												{
													<span class="debit-amount"><i class="fas fa-arrow-up"></i> ₹@item.Debit?.ToString("N2")</span>
												}
												else if ((item.Credit ?? 0) > 0)
												{
													<span class="credit-amount"><i class="fas fa-arrow-down"></i> ₹@item.Credit?.ToString("N2")</span>
												}
											</div>
										}
									</Template>
								</GridColumn>
								<GridColumn Field="@nameof(AccountingCartModel.Remarks)" HeaderText="Remarks" Width="30%" />
								<GridColumn HeaderText="Actions" Width="25%" TextAlign="TextAlign.Center">
									<Template>
										@{
											var item = (context as AccountingCartModel);
										}
										@if (item is not null)
										{
											<div class="action-buttons">
												<button @onclick="() => OpenEditDialog(item)" class="edit-btn" disabled="@_isSaving" title="Edit Entry">
													<i class="fas fa-edit"></i>
												</button>
												<button @onclick="() => RemoveFromCart(item)" class="remove-btn" disabled="@_isSaving" title="Remove Entry">
													<i class="fas fa-trash"></i>
												</button>
											</div>
										}
									</Template>
								</GridColumn>
							</GridColumns>
						</SfGrid>
					</div>
				</div>
			}
			else
			{
				<div class="empty-cart">
					<div class="empty-cart-content">
						<i class="fas fa-calculator empty-icon"></i>
						<h3>Your accounting cart is empty</h3>
						<p>Add some ledger entries to get started with your accounting transaction.</p>
						<button @onclick='() => NavigationManager.NavigateTo("/Accounting")' class="continue-btn">
							<i class="fas fa-plus"></i>
							Add Entries
						</button>
					</div>
				</div>
			}
		</div>

		<!-- Footer Actions -->
		@if (_cart.Any())
		{
			<div class="cart-footer">
				@if (BalanceDifference == 0 && _accounting.VoucherId > 0)
				{
					<button @onclick="ShowConfirmationDialog" class="submit-button balanced" disabled="@_isSaving">
						<i class="fas fa-check-circle"></i>
						<span>Submit Transaction</span>
					</button>
				}
				else
				{
					<button class="submit-button unbalanced" disabled>
						<i class="fas fa-exclamation-triangle"></i>
						<span>
							@if (BalanceDifference != 0)
							{
								@:Balance entries to submit
							}
							else
							{
								@:Select voucher type
							}
						</span>
					</button>
				}
			</div>
		}
	</div>
}

<!-- Transaction Details Dialog -->
<SfDialog @ref="_transactionDetailsDialog"
		  Width="90%"
		  MaxWidth="500px"
		  IsModal="true"
		  ShowCloseIcon="true"
		  @bind-Visible="_transactionDetailsDialogVisible">
	<DialogTemplates>
		<Header>
			<div class="dialog-header">
				<i class="fas fa-receipt"></i>
				<span>Transaction Details</span>
			</div>
		</Header>
		<Content>
			<div class="dialog-content">
				<div class="details-grid">
					<div class="detail-group">
						<label class="detail-label"><i class="fas fa-calendar-alt"></i> Date</label>
						<SfDatePicker TValue="DateOnly"
									  @bind-Value="_accounting.AccountingDate"
									  Format="dd/MM/yyyy"
									  CssClass="date-input"
									  Enabled="@(!_isSaving)" />
					</div>

					<div class="detail-group">
						<label class="detail-label"><i class="fas fa-tag"></i> Voucher Type</label>
						<SfDropDownList TValue="int" TItem="VoucherModel"
										Placeholder="Select Voucher Type"
										DataSource="_vouchers"
										@bind-Value="_accounting.VoucherId"
										CssClass="voucher-dropdown"
										Enabled="@(!_isSaving)">
							<DropDownListFieldSettings Value="Id" Text="Name" />
						</SfDropDownList>
					</div>

					<div class="detail-group full-width">
						<label class="detail-label"><i class="fas fa-comment"></i> General Remarks</label>
						<SfTextBox @bind-Value="_accounting.Remarks"
								   Placeholder="Enter general remarks for this transaction"
								   CssClass="remarks-input"
								   Enabled="@(!_isSaving)" />
					</div>
				</div>
			</div>
		</Content>
		<FooterTemplate>
			<div class="dialog-footer">
				<SfButton Content="Save Details" IsPrimary="true" OnClick="SaveTransactionDetails" CssClass="dialog-button primary" Disabled="@_isSaving" />
				<SfButton Content="Cancel" OnClick="() => _transactionDetailsDialogVisible = false" CssClass="dialog-button" Disabled="@_isSaving" />
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<!-- Edit Entry Dialog -->
<SfDialog @ref="_editEntryDialog"
		  Width="90%"
		  MaxWidth="500px"
		  IsModal="true"
		  ShowCloseIcon="true"
		  @bind-Visible="_editEntryDialogVisible">
	<DialogTemplates>
		<Header>
			<div class="dialog-header">
				<i class="fas fa-edit"></i>
				<span>Edit Ledger Entry</span>
			</div>
		</Header>
		<Content>
			@if (_selectedEntry != null)
			{
				<div class="dialog-content">
					<div class="edit-entry-form">
						<div class="entry-info">
							<h4><i class="fas fa-book"></i> @_selectedEntry.Name</h4>
						</div>

						<div class="amount-inputs">
							<div class="amount-group">
								<label class="amount-label debit-label">
									<i class="fas fa-arrow-up"></i> Debit Amount
								</label>
								<SfNumericTextBox TValue="decimal?"
												  @bind-Value="_editDebitAmount"
												  Min="0"
												  Step="1"
												  Placeholder="0.00"
												  ShowSpinButton="false"
												  Format="N2"
												  Width="100%"
												  CssClass="amount-input debit-input"
												  Enabled="@(!_isSaving)"
												  ValueChange="OnEditDebitChanged" />
							</div>

							<div class="amount-group">
								<label class="amount-label credit-label">
									<i class="fas fa-arrow-down"></i> Credit Amount
								</label>
								<SfNumericTextBox TValue="decimal?"
												  @bind-Value="_editCreditAmount"
												  Min="0"
												  Step="1"
												  Placeholder="0.00"
												  ShowSpinButton="false"
												  Format="N2"
												  Width="100%"
												  CssClass="amount-input credit-input"
												  Enabled="@(!_isSaving)"
												  ValueChange="OnEditCreditChanged" />
							</div>
						</div>

						<div class="remarks-group">
							<label class="detail-label">
								<i class="fas fa-comment"></i> Remarks
							</label>
							<SfTextBox @bind-Value="_editRemarks"
									   Placeholder="Enter remarks for this entry"
									   CssClass="remarks-input"
									   Enabled="@(!_isSaving)" />
						</div>
					</div>
				</div>
			}
		</Content>
		<FooterTemplate>
			<div class="dialog-footer">
				<SfButton Content="Save Changes" IsPrimary="true" OnClick="SaveEntryChanges" CssClass="dialog-button primary" Disabled="@_isSaving" />
				<SfButton Content="Cancel" OnClick="() => _editEntryDialogVisible = false" CssClass="dialog-button" Disabled="@_isSaving" />
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<!-- Confirmation Dialog -->
<SfDialog @ref="_confirmationDialog"
		  Width="90%"
		  MaxWidth="450px"
		  IsModal="true"
		  ShowCloseIcon="false"
		  @bind-Visible="_confirmationDialogVisible">
	<DialogTemplates>
		<Header>
			<div class="dialog-header confirmation-header">
				<i class="fas fa-exclamation-circle"></i>
				<span>Confirm Transaction</span>
			</div>
		</Header>
		<Content>
			<div class="dialog-content confirmation-content">
				<div class="confirmation-message">
					<h3>Are you sure you want to submit this accounting transaction?</h3>
					<p>This action will finalize your accounting entries and cannot be undone. Please review the transaction details below:</p>
				</div>
				<div class="confirmation-summary">
					<h4><i class="fas fa-info-circle"></i> Transaction Summary</h4>
					<div class="summary-details">
						<div class="summary-row">
							<span class="summary-label"><i class="fas fa-calendar"></i> Date:</span>
							<span class="summary-value">@_accounting.AccountingDate.ToString("dd/MM/yyyy")</span>
						</div>
						<div class="summary-row">
							<span class="summary-label"><i class="fas fa-tag"></i> Voucher:</span>
							<span class="summary-value">@(_vouchers.FirstOrDefault(v => v.Id == _accounting.VoucherId)?.Name ?? "Not Selected")</span>
						</div>
						<div class="summary-row">
							<span class="summary-label"><i class="fas fa-list"></i> Entries:</span>
							<span class="summary-value">@_cart.Count</span>
						</div>
						<div class="summary-row">
							<span class="summary-label"><i class="fas fa-arrow-up text-success"></i> Total Debit:</span>
							<span class="summary-value text-success">₹@TotalDebit.ToString("N2")</span>
						</div>
						<div class="summary-row">
							<span class="summary-label"><i class="fas fa-arrow-down text-danger"></i> Total Credit:</span>
							<span class="summary-value text-danger">₹@TotalCredit.ToString("N2")</span>
						</div>
						<div class="summary-row balance-row">
							<span class="summary-label"><i class="fas fa-balance-scale"></i> Balance Status:</span>
							<span class="summary-value @(BalanceDifference == 0 ? "balanced" : "unbalanced")">
								@(BalanceDifference == 0 ? "✓ Balanced" : "⚠ Unbalanced")
							</span>
						</div>
					</div>
					@if (!string.IsNullOrEmpty(_accounting.Remarks))
					{
						<div class="summary-remarks">
							<strong><i class="fas fa-comment"></i> Remarks:</strong>
							<p>@_accounting.Remarks</p>
						</div>
					}
					<div class="confirmation-info">
						<div class="info-item">
							<i class="fas fa-save text-info"></i>
							<span>Transaction will be saved to the database</span>
						</div>
						<div class="info-item">
							<i class="fas fa-file-pdf text-danger"></i>
							<span>PDF voucher will be generated automatically</span>
						</div>
						<div class="info-item">
							<i class="fas fa-bell text-warning"></i>
							<span>Notification will be sent on completion</span>
						</div>
					</div>
					<div class="confirmation-warning">
						<i class="fas fa-exclamation-triangle"></i>
						<span>This action is permanent and cannot be undone!</span>
					</div>
				</div>
			</div>
		</Content>
		<FooterTemplate>
			<div class="dialog-footer">
				<SfButton Content="@(_isSaving ? "Submitting..." : "Yes, Submit Transaction")" 
						  IsPrimary="true" 
						  OnClick="SubmitTransaction" 
						  CssClass="dialog-button primary submit-btn" 
						  Disabled="@_isSaving">
					@if (_isSaving)
					{
						<i class="fas fa-spinner fa-spin"></i>
					}
				</SfButton>
				<SfButton Content="Cancel" OnClick="CloseConfirmationDialog" CssClass="dialog-button secondary" Disabled="@_isSaving" />
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<style>
	:root {
		--primary-color: #e2137b;
		--primary-dark: #c10e6a;
		--primary-light: #f5c6df;
		--secondary-color: #6c757d;
		--success-color: #28a745;
		--warning-color: #ffc107;
		--danger-color: #dc3545;
		--info-color: #17a2b8;
		--light-color: #f8f9fa;
		--dark-color: #343a40;
		--border-color: #dee2e6;
		--shadow-color: rgba(0, 0, 0, 0.1);
	}

	.accounting-cart-container {
		padding: 0;
		margin: 0;
		min-height: 100vh;
		background-color: var(--light-color);
		padding-bottom: 100px; /* Space for fixed footer */
	}

	/* Loading Animation */
	.loader-container {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		height: 100vh;
		background-color: var(--light-color);
	}

	.circular-dots-loader {
		display: inline-block;
		position: relative;
		width: 80px;
		height: 80px;
		margin-bottom: 20px;
	}

	.circular-dots-loader .dot {
		display: block;
		position: absolute;
		width: 16px;
		height: 16px;
		border-radius: 50%;
		background-color: var(--primary-color);
		animation: rotate 1.2s linear infinite;
	}

	.circular-dots-loader .dot-1 {
		animation-delay: 0s;
	}

	.circular-dots-loader .dot-2 {
		background-color: var(--primary-dark);
		animation-delay: -0.4s;
	}

	.circular-dots-loader .dot-3 {
		background-color: var(--secondary-color);
		animation-delay: -0.8s;
	}

	@@keyframes rotate {
		0% {
			transform: rotate(0deg) translate(-30px) rotate(0deg);
		}
		100% {
			transform: rotate(360deg) translate(-30px) rotate(-360deg);
		}
	}

	.loading-text {
		font-size: 18px;
		color: var(--dark-color);
		font-weight: 500;
		margin: 0;
	}

	/* Page Header */
	.page-header {
		display: flex;
		align-items: center;
		justify-content: space-between;
		padding: 20px;
		background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
		color: white;
		box-shadow: 0 2px 10px var(--shadow-color);
	}

	.back-button {
		width: 50px;
		height: 50px;
		border-radius: 50%;
		border: none;
		background: rgba(255, 255, 255, 0.2);
		color: white;
		font-size: 20px;
		cursor: pointer;
		transition: all 0.3s ease;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.back-button:hover:not(:disabled) {
		background: rgba(255, 255, 255, 0.3);
		transform: scale(1.05);
	}

	.back-button:disabled {
		opacity: 0.6;
		cursor: not-allowed;
	}

	.page-title {
		margin: 0;
		font-size: 24px;
		font-weight: 700;
		text-align: center;
		flex: 1;
	}

	.header-action-btn {
		background: rgba(255, 255, 255, 0.2);
		color: white;
		border: 2px solid rgba(255, 255, 255, 0.3);
		padding: 8px 16px;
		border-radius: 20px;
		display: flex;
		align-items: center;
		gap: 8px;
		font-weight: 600;
		font-size: 14px;
		transition: all 0.3s ease;
		cursor: pointer;
	}

	.header-action-btn:hover:not(:disabled) {
		background: rgba(255, 255, 255, 0.3);
		border-color: rgba(255, 255, 255, 0.5);
		transform: translateY(-1px);
	}

	.header-action-btn:disabled {
		opacity: 0.6;
		cursor: not-allowed;
	}

	/* Main Content */
	.main-content {
		padding: 0 10px;
	}

	/* Cards */
	.details-card,
	.cart-card,
	.balance-summary-card {
		background: white;
		border-radius: 15px;
		margin-bottom: 15px;
		box-shadow: 0 2px 10px var(--shadow-color);
		overflow: hidden;
	}

	.card-header {
		background: linear-gradient(135deg, var(--light-color), #e9ecef);
		padding: 15px 20px;
		border-bottom: 1px solid var(--border-color);
		display: flex;
		justify-content: space-between;
		align-items: center;
	}

	.card-header h3 {
		margin: 0;
		font-size: 18px;
		font-weight: 600;
		color: var(--dark-color);
		display: flex;
		align-items: center;
		gap: 10px;
	}

	.item-count {
		margin: 0;
		color: var(--secondary-color);
		font-size: 14px;
		font-weight: 500;
	}

	.card-content {
		padding: 20px;
	}

	/* Details Grid */
	.details-grid {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 20px;
		align-items: end;
	}

	.detail-group {
		display: flex;
		flex-direction: column;
		gap: 8px;
	}

	.detail-group.full-width {
		grid-column: 1 / -1;
	}

	.detail-label {
		font-weight: 600;
		color: var(--dark-color);
		font-size: 14px;
	}

	/* Balance Summary */
	.balance-summary-card {
		border-left: 5px solid var(--primary-color);
	}

	.balance-info {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		gap: 20px;
		text-align: center;
		padding: 20px;
	}

	.balance-item {
		display: flex;
		flex-direction: column;
		gap: 5px;
	}

	.balance-label {
		font-size: 12px;
		font-weight: 600;
		text-transform: uppercase;
		letter-spacing: 0.5px;
		opacity: 0.7;
	}

	.balance-value {
		font-size: 18px;
		font-weight: 700;
		color: var(--dark-color);
	}

	.balance-status {
		font-size: 11px;
		font-weight: 600;
		padding: 2px 8px;
		border-radius: 10px;
		margin-top: 3px;
	}

	.balance-status.balanced {
		background: var(--success-color);
		color: white;
	}

	.balance-status.unbalanced {
		background: var(--warning-color);
		color: var(--dark-color);
	}

	.balance-item.debit .balance-value {
		color: var(--success-color);
	}

	.balance-item.credit .balance-value {
		color: var(--danger-color);
	}

	.balance-item.difference.balanced .balance-value {
		color: var(--success-color);
	}

	.balance-item.difference.debit-heavy .balance-value,
	.balance-item.difference.credit-heavy .balance-value {
		color: var(--warning-color);
	}

	/* Grid Container */
	.cart-grid-container {
		padding: 20px;
	}

	/* Amount Display */
	.amount-display {
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.debit-amount {
		color: var(--success-color);
		font-weight: 600;
		padding: 4px 8px;
		background: rgba(40, 167, 69, 0.1);
		border-radius: 6px;
	}

	.credit-amount {
		color: var(--danger-color);
		font-weight: 600;
		padding: 4px 8px;
		background: rgba(220, 53, 69, 0.1);
		border-radius: 6px;
	}

	/* Action Buttons */
	.action-buttons {
		display: flex;
		gap: 8px;
		justify-content: center;
		align-items: center;
	}

	.edit-btn,
	.remove-btn {
		border: none;
		color: white;
		width: 32px;
		height: 32px;
		border-radius: 50%;
		cursor: pointer;
		transition: all 0.3s ease;
		display: flex;
		align-items: center;
		justify-content: center;
		font-size: 12px;
	}

	.edit-btn {
		background: var(--primary-color);
	}

	.edit-btn:hover:not(:disabled) {
		background: var(--primary-dark);
		transform: scale(1.1);
	}

	.remove-btn {
		background: var(--danger-color);
	}

	.remove-btn:hover:not(:disabled) {
		background: #c82333;
		transform: scale(1.1);
	}

	.edit-btn:disabled,
	.remove-btn:disabled {
		opacity: 0.6;
		cursor: not-allowed;
	}

	/* Empty Cart */
	.empty-cart {
		display: flex;
		justify-content: center;
		align-items: center;
		min-height: 60vh;
	}

	.empty-cart-content {
		text-align: center;
		padding: 40px;
		background: white;
		border-radius: 20px;
		box-shadow: 0 5px 15px var(--shadow-color);
	}

	.empty-icon {
		font-size: 60px;
		color: var(--secondary-color);
		margin-bottom: 20px;
	}

	.empty-cart-content h3 {
		margin: 0 0 10px 0;
		color: var(--dark-color);
		font-size: 24px;
	}

	.empty-cart-content p {
		margin: 0 0 30px 0;
		color: var(--secondary-color);
		font-size: 16px;
	}

	.continue-btn {
		background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
		color: white;
		border: none;
		padding: 15px 30px;
		border-radius: 25px;
		font-size: 16px;
		font-weight: 600;
		cursor: pointer;
		transition: all 0.3s ease;
		display: flex;
		align-items: center;
		gap: 10px;
	}

	.continue-btn:hover {
		transform: translateY(-2px);
		box-shadow: 0 5px 15px var(--shadow-color);
	}

	/* Footer */
	.cart-footer {
		position: fixed;
		bottom: 0;
		left: 0;
		right: 0;
		padding: 15px;
		background: white;
		border-top: 1px solid var(--border-color);
		box-shadow: 0 -2px 10px var(--shadow-color);
		z-index: 1000;
	}

	.submit-button {
		width: 100%;
		height: 60px;
		border: none;
		border-radius: 30px;
		color: white;
		font-size: 18px;
		font-weight: 700;
		cursor: pointer;
		transition: all 0.3s ease;
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 10px;
	}

	.submit-button.balanced {
		background: linear-gradient(135deg, var(--success-color), #20c997);
	}

	.submit-button.unbalanced {
		background: linear-gradient(135deg, var(--secondary-color), #6c757d);
		cursor: not-allowed;
	}

	.submit-button.balanced:hover:not(:disabled) {
		transform: translateY(-2px);
		box-shadow: 0 5px 15px var(--shadow-color);
	}

	.submit-button:disabled {
		opacity: 0.8;
		cursor: not-allowed;
	}

	/* Responsive Design */
	@@media (max-width: 768px) {
		.page-title {
			font-size: 20px;
		}

		.details-grid {
			grid-template-columns: 1fr;
			gap: 15px;
		}

		.balance-info {
			grid-template-columns: 1fr;
			gap: 15px;
		}

		.balance-item {
			flex-direction: row;
			justify-content: space-between;
			align-items: center;
			padding: 10px;
			background: var(--light-color);
			border-radius: 8px;
		}

		.balance-value {
			font-size: 16px;
		}

		.submit-button {
			height: 55px;
			font-size: 16px;
		}
	}

	@@media (max-width: 480px) {
		.page-header {
			padding: 15px;
		}

		.page-title {
			font-size: 18px;
		}

		.back-button {
			width: 45px;
			height: 45px;
			font-size: 18px;
		}

		.card-content,
		.cart-grid-container {
			padding: 15px;
		}

		.submit-button {
			height: 50px;
			font-size: 15px;
		}
	}

	/* Dialog Styles */
	.dialog-header {
		display: flex;
		align-items: center;
		gap: 10px;
		font-size: 18px;
		font-weight: 600;
		color: var(--primary-color);
	}

	.dialog-header.confirmation-header {
		color: var(--warning-color);
	}

	.dialog-content {
		padding: 20px 0;
	}

	.dialog-footer {
		display: flex;
		gap: 10px;
		justify-content: flex-end;
		padding: 10px 0 0 0;
	}

	.dialog-button {
		padding: 10px 20px;
		border-radius: 25px;
		font-weight: 600;
		transition: all 0.3s ease;
	}

	.dialog-button.primary {
		background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
		color: white;
		border: none;
	}

	.dialog-button.primary:hover:not(:disabled) {
		transform: translateY(-1px);
		box-shadow: 0 3px 10px var(--shadow-color);
	}

	.dialog-button.secondary {
		background: transparent;
		color: var(--secondary-color);
		border: 2px solid var(--border-color);
	}

	.dialog-button.secondary:hover:not(:disabled) {
		background: var(--light-color);
		border-color: var(--secondary-color);
		color: var(--dark-color);
		transform: translateY(-1px);
	}

	/* Edit Entry Dialog Styles */
	.edit-entry-form {
		display: flex;
		flex-direction: column;
		gap: 20px;
	}

	.entry-info h4 {
		margin: 0;
		color: var(--dark-color);
		display: flex;
		align-items: center;
		gap: 10px;
		padding: 15px;
		background: var(--light-color);
		border-radius: 10px;
		border-left: 4px solid var(--primary-color);
	}

	.amount-inputs {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 15px;
	}

	.amount-group {
		display: flex;
		flex-direction: column;
		gap: 8px;
	}

	.amount-label {
		font-weight: 600;
		font-size: 14px;
		display: flex;
		align-items: center;
		gap: 8px;
	}

	.amount-label.debit-label {
		color: var(--success-color);
	}

	.amount-label.credit-label {
		color: var(--danger-color);
	}

	.remarks-group {
		display: flex;
		flex-direction: column;
		gap: 8px;
	}

	/* Confirmation Dialog Styles */
	.confirmation-content {
		text-align: left;
	}

	.confirmation-summary h4 {
		margin: 0 0 15px 0;
		color: var(--primary-color);
		display: flex;
		align-items: center;
		gap: 10px;
	}

	.summary-details {
		background: var(--light-color);
		border-radius: 10px;
		padding: 15px;
		margin-bottom: 15px;
	}

	.summary-row {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 8px 0;
		border-bottom: 1px solid var(--border-color);
	}

	.summary-row:last-child {
		border-bottom: none;
	}

	.summary-row.balance-row {
		margin-top: 10px;
		padding-top: 15px;
		border-top: 2px solid var(--border-color);
		font-weight: 600;
	}

	.summary-label {
		font-weight: 500;
		color: var(--secondary-color);
		display: flex;
		align-items: center;
		gap: 8px;
	}

	.summary-value {
		font-weight: 600;
		color: var(--dark-color);
	}

	.summary-value.balanced {
		color: var(--success-color);
	}

	.summary-value.unbalanced {
		color: var(--warning-color);
	}

	.text-success {
		color: var(--success-color) !important;
	}

	.text-danger {
		color: var(--danger-color) !important;
	}

	.text-info {
		color: var(--info-color) !important;
	}

	.text-warning {
		color: var(--warning-color) !important;
	}

	.summary-remarks {
		margin-top: 15px;
		padding: 10px;
		background: rgba(226, 19, 123, 0.05);
		border-left: 4px solid var(--primary-color);
		border-radius: 5px;
	}

	.summary-remarks strong {
		color: var(--primary-color);
		display: flex;
		align-items: center;
		gap: 8px;
		margin-bottom: 5px;
	}

	.summary-remarks p {
		margin: 0;
		color: var(--dark-color);
		font-style: italic;
	}

	.confirmation-message {
		text-align: left;
		margin: 0 0 20px 0;
	}

	.confirmation-message h3 {
		margin: 0 0 10px 0;
		color: var(--dark-color);
		font-size: 18px;
		font-weight: 600;
	}

	.confirmation-message p {
		margin: 0;
		color: var(--secondary-color);
		font-size: 14px;
		line-height: 1.5;
	}

	.confirmation-info {
		background: rgba(23, 162, 184, 0.05);
		border-radius: 8px;
		padding: 15px;
		margin: 15px 0;
		border-left: 4px solid var(--info-color);
	}

	.info-item {
		display: flex;
		align-items: center;
		gap: 10px;
		padding: 5px 0;
		font-size: 14px;
		color: var(--dark-color);
	}

	.info-item i {
		width: 20px;
		text-align: center;
	}

	.confirmation-warning {
		text-align: center;
		font-size: 16px;
		font-weight: 500;
		color: var(--warning-color);
		margin: 20px 0 10px 0;
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 10px;
		padding: 10px;
		background: rgba(255, 193, 7, 0.1);
		border-radius: 5px;
	}


</style>


