@page "/Inventory/Kitchen-Issue/Cart"
@using PrimeBakesLibrary.Data.Common
@using PrimeBakesLibrary.Models.Inventory
@using PrimeBakesLibrary.Models.Common

<PageTitle>Kitchen Issue Cart - Prime Bakes</PageTitle>

@if (_isLoading)
{
	<div class="loader-container">
		<div class="circular-dots-loader">
			<span class="dot dot-1"></span>
			<span class="dot dot-2"></span>
			<span class="dot dot-3"></span>
		</div>
		<p class="loading-text">Loading Kitchen Issue Cart...</p>
	</div>
}
else
{
	<div class="order-cart-container">
		<!-- Header -->
		<div class="page-header">
			<button @onclick='() => NavigationManager.NavigateTo("/Inventory/Kitchen-Issue")' class="back-button" disabled="@_isSaving">
				←
			</button>
			<h1 class="page-title">Kitchen Issue Cart</h1>
			<button @onclick='() => _issueDetailsDialogVisible = true' class="header-action-btn" disabled="@_isSaving">
				📄 Details
			</button>
		</div>

		<!-- Main Content -->
		<div class="main-content">
			@if (_cart.Any())
			{
				<div class="cart-card">
					<div class="card-header">
						<p class="item-count">@_cart.Sum(x => x.Quantity) units to issue</p>
					</div>

					<div class="cart-grid-container">
						<SfGrid ID="_sfGrid"
								@ref="_sfGrid"
								EnableAdaptiveUI="true"
								DataSource="_cart"
								AllowPaging="true"
								AllowTextWrap=true
								AllowSorting="false"
								Height="auto">

							<GridPageSettings PageSize="4" />

							<GridColumns>
								<GridColumn Field="@nameof(KitchenIssueRawMaterialCartModel.RawMaterialName)" HeaderText="Raw Material" Width="35%" />
								<GridColumn Field="@nameof(KitchenIssueRawMaterialCartModel.Quantity)" HeaderText="Quantity" Width="25%" TextAlign="TextAlign.Center">
									<Template>
										@{
											var item = (context as KitchenIssueRawMaterialCartModel);
										}
										@if (item is not null)
										{
											<div class="quantity-section">
												<div class="quantity-controls">
													<div class="quantity-input-wrapper">
														<SfNumericTextBox TValue="decimal"
																		  Value="@item.Quantity"
																		  ValueChanged="@((decimal value) => UpdateQuantity(item, value))"
																		  Min="0"
																		  Max="@item.Quantity"
																		  Step="1"
																		  type="tel"
																		  ShowSpinButton=false
																		  Format="N2"
																		  Width="60px"
																		  CssClass="quantity-input"
																		  Enabled="@(!_isSaving)" />
													</div>
												</div>
											</div>
										}
									</Template>
								</GridColumn>
								<GridColumn HeaderText="Details" Width="30%" TextAlign="TextAlign.Right">
									<Template>
										@{
											var item = (context as KitchenIssueRawMaterialCartModel);
										}
										@if (item is not null)
										{
											<div class="details-column">
												<div class="unit-section">
													<span class="unit-label">Unit:</span>
													<span class="unit-value">@item.MeasurementUnit</span>
												</div>
												<div class="stock-section">
													<span class="stock-label">Rate:</span>
													<span class="stock-value">₹@item.Rate.ToString("N2")</span>
												</div>
												<div class="remaining-section">
													<span class="remaining-label">Total:</span>
													<span class="remaining-value">₹@item.Total.ToString("N2")</span>
												</div>
											</div>
										}
									</Template>
								</GridColumn>
								<GridColumn HeaderText="🖊️" Width="10%" TextAlign="TextAlign.Right">
									<Template>
										@{
											var item = (context as KitchenIssueRawMaterialCartModel);
										}
										@if (item is not null && item.Quantity > 0)
										{
											<button class="edit-button" @onclick="() => OpenRawMaterialDetailsDialog(item)" @onclick:stopPropagation="true" title="Edit Raw Material Details" disabled="@_isSaving">
												<span class="edit-icon">⚙️</span>
											</button>
										}
									</Template>
								</GridColumn>
							</GridColumns>
						</SfGrid>
					</div>
				</div>
			}
			else
			{
				<div class="empty-cart">
					<div class="empty-icon">📦</div>
					<h3>Your cart is empty</h3>
					<p>Add raw materials to your cart to continue</p>
					<button @onclick='() => NavigationManager.NavigateTo("/Inventory/Kitchen-Issue")' class="continue-shopping-btn" disabled="@_isSaving">
						Add Raw Materials
					</button>
				</div>
			}
		</div>

		<!-- Sticky Action Buttons - Only show when cart has items -->
		@if (_cart.Any())
		{
			<div class="action-buttons-footer">
				<div class="action-buttons">
					<button @onclick="ClearCart" class="clear-button" disabled="@_isSaving">
						🗑️ Clear Cart
					</button>
					<button @onclick="() => _issueConfirmationDialogVisible = true" class="confirm-button" disabled="@_isSaving">
						✓ Issue Materials
					</button>
				</div>
			</div>
		}
	</div>

	<!-- Issue Details Dialog -->
	<SfDialog ID="_sfIssueDetailsDialog"
			  @ref="_sfIssueDetailsDialog"
			  Width="500px"
			  Height="auto"
			  AllowDragging="true"
			  EnableResize="false"
			  @bind-Visible="_issueDetailsDialogVisible"
			  IsModal="true">
		<DialogPositionData X="Center" Y="Center" />
		<DialogTemplates>
			<Header>
				<div class="dialog-header">
					<span>Kitchen Issue Details</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content">
					<div class="form-group">
						<label>Transaction Number</label>
						<SfTextBox Value="@_kitchenIssue.TransactionNo"
								   Placeholder="Transaction Number"
								   Readonly=true
								   CssClass="form-control" />
					</div>

					<div class="form-group">
						<label>Kitchen <span class="required">*</span></label>
						<SfComboBox TValue="int"
									TItem="KitchenModel"
									@bind-Value="_kitchenIssue.KitchenId"
									Placeholder="Select Kitchen"
									DataSource="@_kitchens"
									CssClass="form-control"
									Enabled="@(!_isSaving)">
							<ComboBoxFieldSettings Value="Id" Text="Name" />
						</SfComboBox>
					</div>

					<div class="form-group">
						<label>Issue Date</label>
						<SfDatePicker @bind-Value="_kitchenIssue.IssueDate"
									  Placeholder="Select Issue Date"
									  CssClass="form-control"
									  Enabled="@(!_isSaving)" />
					</div>

					<div class="form-group full-width">
						<label>Remarks</label>
						<SfTextBox @bind-Value="_kitchenIssue.Remarks"
								   Placeholder="Add remarks (optional)"
								   Multiline="true"
								   CssClass="form-control"
								   Enabled="@(!_isSaving)" />
					</div>
				</div>
			</Content>
			<FooterTemplate>
				<div class="dialog-footer">
					<SfButton Content="Close" OnClick="() => _issueDetailsDialogVisible = false" CssClass="dialog-button" Disabled="@_isSaving" />
				</div>
			</FooterTemplate>
		</DialogTemplates>
	</SfDialog>

	<!-- Issue Confirmation Dialog -->
	<SfDialog ID="_sfIssueConfirmationDialog"
			  @ref="_sfIssueConfirmationDialog"
			  Width="450px"
			  Height="auto"
			  AllowDragging="false"
			  EnableResize="false"
			  @bind-Visible="_issueConfirmationDialogVisible"
			  IsModal="true">
		<DialogPositionData X="Center" Y="Center" />
		<DialogTemplates>
			<Header>
				<div class="dialog-header confirmation-header">
					<span class="confirmation-icon">⚠️</span>
					<span>Confirm Kitchen Issue</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content confirmation-content">
					<div class="confirmation-message">
						<h3>Are you sure you want to issue these materials?</h3>
						<p>This action will reduce the stock levels and cannot be undone.</p>
					</div>

					<div class="order-summary">
						<div class="summary-item">
							<span class="summary-label">Total Items:</span>
							<span class="summary-value">@_cart.Sum(x => x.Quantity)</span>
						</div>
						<div class="summary-item">
							<span class="summary-label">Total Value:</span>
							<span class="summary-value">₹@_cart.Sum(x => x.Total).ToString("N2")</span>
						</div>
						<div class="summary-item">
							<span class="summary-label">Issue Date:</span>
							<span class="summary-value">@_kitchenIssue.IssueDate.ToShortDateString()</span>
						</div>
						@if (!string.IsNullOrEmpty(_kitchenIssue.Remarks))
						{
							<div class="summary-item">
								<span class="summary-label">Remarks:</span>
								<span class="summary-value">@_kitchenIssue.Remarks</span>
							</div>
						}
					</div>
				</div>
			</Content>
			<FooterTemplate>
				<div class="dialog-footer confirmation-footer">
					<SfButton Content="No, Cancel" OnClick="() => _issueConfirmationDialogVisible = false" CssClass="dialog-button cancel-button" Disabled="@_isSaving" />
					<SfButton Content="@(_isSaving ? "⏳ Processing Issue..." : "Yes, Issue Materials")" OnClick="SaveKitchenIssue" CssClass="dialog-button confirm-button-dialog" Disabled="@_isSaving" />
				</div>
			</FooterTemplate>
		</DialogTemplates>
	</SfDialog>

	<!-- Raw Material Details Dialog (Combined) -->
	<SfDialog ID="_sfRawMaterialDetailsDialog"
			  @ref="_sfRawMaterialDetailsDialog"
			  Width="600px"
			  Height="auto"
			  AllowDragging="true"
			  EnableResize="false"
			  @bind-Visible="_rawMaterialDetailsDialogVisible"
			  IsModal="true">
		<DialogPositionData X="Center" Y="Center" />
		<DialogTemplates>
			<Header>
				<div class="dialog-header">
					<span class="material-icon">📦</span>
					<span>Edit Raw Material Details</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content">
					@if (_selectedRawMaterialForEdit != null)
					{
						<div class="material-info-section">
							<h4 class="material-title">@_selectedRawMaterialForEdit.RawMaterialName</h4>
						</div>

						<div class="form-group">
							<label>Quantity</label>
							<SfNumericTextBox TValue="decimal"
											  Value="_selectedRawMaterialForEdit.Quantity"
											  ValueChanged="OnBasicQuantityChanged"
											  Min="0"
											  type="tel"
											  Format="N2"
											  CssClass="form-control" 
											  Enabled="@(!_isSaving)" />
							<small class="form-help">Enter the quantity needed</small>
						</div>

						<div class="form-group">
							<label>Measurement Unit</label>
							<SfTextBox Value="@_selectedRawMaterialForEdit.MeasurementUnit"
									   ValueChanged="OnMeasurementUnitChanged"
									   CssClass="form-control" 
									   Enabled="@(!_isSaving)" />
						</div>

						<div class="form-group">
							<label>Rate per Unit (₹)</label>
							<SfNumericTextBox TValue="decimal"
											  Value="_selectedRawMaterialForEdit.Rate"
											  ValueChanged="OnRateChanged"
											  Min="0"
											  type="tel"
											  Format="N2"
											  CssClass="form-control" 
											  Enabled="@(!_isSaving)" />
							<small class="form-help">Enter the rate per unit</small>
						</div>

						<div class="basic-summary">
							<div class="summary-card">
								<div class="summary-row">
									<span class="summary-label">Rate per Unit:</span>
									<span class="summary-value">₹@_selectedRawMaterialForEdit.Rate.ToString("N2")</span>
								</div>
								<div class="summary-row">
									<span class="summary-label">Issue Quantity:</span>
									<span class="summary-value">@_selectedRawMaterialForEdit.Quantity.ToString("N2") @_selectedRawMaterialForEdit.MeasurementUnit</span>
								</div>
								<div class="summary-divider"></div>
								<div class="summary-row total-row">
									<span class="summary-label">Total Value:</span>
									<span class="summary-value total-value">@(_selectedRawMaterialForEdit.Total.FormatIndianCurrency())</span>
								</div>
							</div>
						</div>
					}
				</div>
			</Content>
			<FooterTemplate>
				<div class="dialog-footer">
					<div class="footer-buttons">
						<SfButton Content="Save" IsPrimary="true" OnClick="OnSaveBasicInfoClick" CssClass="dialog-button save-button" Disabled="@_isSaving" />
						<SfButton Content="Close" OnClick="() => _rawMaterialDetailsDialogVisible = false" CssClass="dialog-button cancel-button" Disabled="@_isSaving" />
					</div>
				</div>
			</FooterTemplate>
		</DialogTemplates>
	</SfDialog>

	<!-- Validation Error Dialog -->
	<SfDialog ID="_sfValidationErrorDialog"
			  Width="500px"
			  Height="auto"
			  AllowDragging="true"
			  EnableResize="false"
			  @bind-Visible="_validationErrorDialogVisible"
			  IsModal="true">
		<DialogPositionData X="Center" Y="Center" />
		<DialogTemplates>
			<Header>
				<div class="dialog-header">
					<span class="validation-icon">⚠️</span>
					<span>Validation Errors</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content">
					<div class="validation-message">
						<h3>Please fix the following errors:</h3>
						<ul class="error-list">
							@foreach (var error in _validationErrors)
							{
								<li class="error-item">
									<strong>@error.Field:</strong> @error.Message
								</li>
							}
						</ul>
					</div>
				</div>
			</Content>
			<FooterTemplate>
				<div class="dialog-footer">
					<SfButton Content="OK" OnClick="() => _validationErrorDialogVisible = false" CssClass="dialog-button" />
				</div>
			</FooterTemplate>
		</DialogTemplates>
	</SfDialog>

	<style>
		:root {
			--primary-color: #ff8500;
			--primary-dark: #e07600;
			--primary-light: #ffb366;
			--text-dark: #2c3e50;
			--text-light: #7f8c8d;
			--bg-light: #f8f9fa;
			--border-color: #e9ecef;
			--shadow-light: 0 2px 8px rgba(0, 0, 0, 0.1);
			--shadow-medium: 0 4px 12px rgba(0, 0, 0, 0.15);
			--success-color: #28a745;
			--danger-color: #dc3545;
			--warning-color: #ffc107;
			--info-color: #17a2b8;
			--stock-color: #6c757d;
		}

		/* Loading Animation */
		.loader-container {
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			height: 100vh;
			background: linear-gradient(135deg, #fff4e6 0%, #fff8f0 100%);
		}

		.circular-dots-loader {
			position: relative;
			width: 60px;
			height: 60px;
			margin-bottom: 15px;
		}

			.circular-dots-loader .dot {
				position: absolute;
				width: 12px;
				height: 12px;
				border-radius: 50%;
				animation: rotate 1.5s infinite linear;
			}

			.circular-dots-loader .dot-1 {
				background-color: var(--primary-color);
				animation-delay: 0s;
			}

			.circular-dots-loader .dot-2 {
				background-color: var(--info-color);
				animation-delay: -0.5s;
			}

			.circular-dots-loader .dot-3 {
				background-color: var(--primary-dark);
				animation-delay: -1s;
			}

		.loading-text {
			color: var(--text-dark);
			font-size: 16px;
			margin-top: 10px;
			font-weight: 500;
		}

		@@keyframes rotate {
			0% {
				transform: rotate(0deg) translate(-24px) rotate(0deg);
			}

			100% {
				transform: rotate(360deg) translate(-24px) rotate(-360deg);
			}
		}

		.order-cart-container {
			min-height: 100vh;
			background: linear-gradient(135deg, #fff4e6 0%, #fff8f0 100%);
			display: flex;
			flex-direction: column;
		}

		/* Header */
		.page-header {
			display: flex;
			align-items: center;
			justify-content: space-between;
			padding: 15px 20px;
			background: white;
			box-shadow: var(--shadow-light);
			position: sticky;
			top: 0;
			z-index: 100;
		}

		.back-button {
			background: var(--primary-color);
			color: white;
			border: none;
			border-radius: 8px;
			padding: 10px 15px;
			display: flex;
			align-items: center;
			justify-content: center;
			cursor: pointer;
			transition: all 0.2s ease;
			box-shadow: var(--shadow-light);
			font-size: 18px;
			font-weight: bold;
			min-width: 44px;
			min-height: 44px;
		}

			.back-button:hover:not(:disabled) {
				background: var(--primary-dark);
				transform: translateY(-1px);
				box-shadow: var(--shadow-medium);
			}

			.back-button:disabled {
				background: var(--text-light);
				cursor: not-allowed;
				transform: none;
			}

		.page-title {
			margin: 0;
			color: var(--text-dark);
			font-size: 24px;
			font-weight: 600;
			flex: 1;
			text-align: center;
		}

		.header-action-btn {
			background: transparent;
			border: 2px solid var(--primary-color);
			color: var(--primary-color);
			border-radius: 8px;
			padding: 10px 12px;
			cursor: pointer;
			transition: all 0.2s ease;
			font-size: 14px;
			font-weight: 500;
		}

			.header-action-btn:hover:not(:disabled) {
				background: var(--primary-color);
				color: white;
			}

			.header-action-btn:disabled {
				border-color: var(--text-light);
				color: var(--text-light);
				cursor: not-allowed;
			}

		/* Main Content */
		.main-content {
			flex: 1;
			padding: 20px 20px 100px 20px;
			display: flex;
			flex-direction: column;
			gap: 20px;
		}

		/* Cart Card */
		.cart-card {
			background: white;
			border-radius: 15px;
			box-shadow: var(--shadow-light);
			overflow: hidden;
			flex: 1;
		}

		.card-header {
			background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
			color: white;
			padding: 20px;
			display: flex;
			justify-content: space-between;
			align-items: center;
		}

		.item-count {
			margin: 0;
			background: rgba(255, 255, 255, 0.2);
			padding: 4px 12px;
			border-radius: 15px;
			font-size: 14px;
			font-weight: 500;
		}

		.cart-grid-container {
			padding: 20px 0;
		}

		/* Details Column Styling */
		.details-column {
			display: flex;
			flex-direction: column;
			gap: 4px;
			align-items: flex-end;
			font-size: 11px;
		}

		.unit-section,
		.stock-section,
		.remaining-section {
			display: flex;
			align-items: center;
			gap: 4px;
		}

		.unit-label,
		.stock-label,
		.remaining-label {
			font-size: 9px;
			color: var(--text-light);
			font-weight: 500;
			min-width: 30px;
		}

		.unit-value {
			font-weight: 600;
			color: var(--primary-color);
			font-size: 10px;
		}

		.stock-value {
			font-weight: 700;
			color: var(--stock-color);
			font-size: 11px;
		}

		.remaining-value {
			font-weight: 700;
			color: var(--success-color);
			font-size: 11px;
		}

		/* Quantity Section */
		.quantity-section {
			display: flex;
			justify-content: center;
			align-items: center;
			width: 100%;
			padding: 2px 0;
		}

		.quantity-controls {
			display: flex;
			align-items: center;
			gap: 4px;
			width: 100%;
			justify-content: center;
			max-width: 80px;
		}

		.quantity-input-wrapper {
			flex: 1;
			min-width: 60px;
			max-width: 80px;
		}

		.quantity-input {
			width: 100% !important;
		}

			.quantity-input input {
				text-align: center !important;
				border: 2px solid var(--border-color);
				border-radius: 8px;
				padding: 6px 8px !important;
				font-weight: 600;
				font-size: 16px !important;
				color: var(--text-dark);
				transition: all 0.2s ease;
				height: 36px !important;
				box-sizing: border-box;
				letter-spacing: 0.3px;
			}

				.quantity-input input:focus {
					border-color: var(--primary-color);
					box-shadow: 0 0 0 3px rgba(255, 133, 0, 0.1);
					outline: none;
				}

		/* Empty Cart */
		.empty-cart {
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			text-align: center;
			padding: 60px 20px;
			background: white;
			border-radius: 15px;
			box-shadow: var(--shadow-light);
			margin: auto;
			max-width: 400px;
		}

		.empty-icon {
			font-size: 4rem;
			margin-bottom: 20px;
			opacity: 0.6;
		}

		.empty-cart h3 {
			margin: 0 0 10px 0;
			color: var(--text-dark);
			font-size: 24px;
			font-weight: 600;
		}

		.empty-cart p {
			margin: 0 0 30px 0;
			color: var(--text-light);
			font-size: 16px;
		}

		.continue-shopping-btn {
			background: var(--primary-color);
			color: white;
			border: none;
			border-radius: 12px;
			padding: 15px 30px;
			font-weight: 600;
			font-size: 16px;
			cursor: pointer;
			transition: all 0.2s ease;
			box-shadow: var(--shadow-light);
			min-height: 48px;
		}

			.continue-shopping-btn:hover:not(:disabled) {
				background: var(--primary-dark);
				transform: translateY(-2px);
				box-shadow: var(--shadow-medium);
			}

			.continue-shopping-btn:disabled {
				background: var(--text-light);
				cursor: not-allowed;
				transform: none;
			}

		/* Sticky Action Buttons Footer */
		.action-buttons-footer {
			position: sticky;
			bottom: 0;
			background: white;
			padding: 15px 20px;
			box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
			z-index: 100;
			animation: slideUp 0.3s ease-out;
		}

		.action-buttons {
			display: flex;
			gap: 15px;
			justify-content: center;
			align-items: center;
			flex-wrap: nowrap;
		}

		.clear-button, .confirm-button {
			padding: 15px 25px;
			border: none;
			border-radius: 12px;
			font-weight: 600;
			font-size: 16px;
			cursor: pointer;
			transition: all 0.2s ease;
			display: flex;
			align-items: center;
			gap: 8px;
			box-shadow: var(--shadow-light);
			flex: 1;
			max-width: 200px;
			min-width: 140px;
			justify-content: center;
			min-height: 56px;
		}

		.clear-button {
			background: white;
			color: var(--danger-color);
			border: 2px solid var(--danger-color);
		}

			.clear-button:hover:not(:disabled) {
				background: var(--danger-color);
				color: white;
				transform: translateY(-2px);
				box-shadow: var(--shadow-medium);
			}

			.clear-button:disabled {
				background: var(--bg-light);
				color: var(--text-light);
				border-color: var(--text-light);
				cursor: not-allowed;
				transform: none;
			}

		.confirm-button {
			background: var(--primary-color);
			color: white;
		}

			.confirm-button:hover:not(:disabled) {
				background: var(--primary-dark);
				transform: translateY(-2px);
				box-shadow: 0 6px 20px rgba(255, 133, 0, 0.3);
			}

			.confirm-button:disabled {
				background: var(--text-light);
				cursor: not-allowed;
				transform: none;
			}

		/* Grid Styling */
		::deep .e-grid {
			border-radius: 12px;
			overflow: hidden;
			background: white;
			box-shadow: var(--shadow-light);
			border: none;
			font-size: 12px !important;
		}

			::deep .e-grid .e-gridheader {
				background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
			}

			::deep .e-grid .e-headercell {
				background: transparent;
				color: white;
				font-weight: 600;
				border: none;
				padding: 8px 4px !important;
				font-size: 12px !important;
			}

			::deep .e-grid .e-rowcell {
				border: none;
				border-bottom: 1px solid var(--border-color);
				padding: 6px 4px !important;
				vertical-align: middle;
				font-size: 11px !important;
			}

			::deep .e-grid .e-row:nth-child(even) {
				background-color: #fafafa;
			}

			::deep .e-grid .e-row:hover {
				background-color: var(--primary-light);
			}

		/* Pager Styling */
		::deep .e-pager {
			background: white;
			border-top: 1px solid var(--border-color);
			padding: 10px 0 !important;
			font-size: 11px !important;
		}

			::deep .e-pager .e-currentitem {
				background: var(--primary-color);
				color: white;
				border-radius: 6px;
			}

		/* Dialog Styling */
		.dialog-header {
			font-size: 20px;
			font-weight: 600;
			color: var(--text-dark);
			display: flex;
			align-items: center;
			gap: 10px;
		}

		.confirmation-header {
			color: var(--warning-color);
		}

		.confirmation-icon {
			font-size: 24px;
		}

		.material-icon {
			font-size: 20px;
			color: var(--primary-color);
		}

		.dialog-content {
			padding: 20px;
		}

		.confirmation-content {
			text-align: center;
		}

		.confirmation-message h3 {
			margin: 0 0 10px 0;
			color: var(--text-dark);
			font-size: 18px;
			font-weight: 600;
		}

		.confirmation-message p {
			margin: 0 0 20px 0;
			color: var(--text-light);
			font-size: 14px;
		}

		.order-summary {
			background: var(--bg-light);
			padding: 15px;
			border-radius: 8px;
			border-left: 4px solid var(--primary-color);
		}

		.summary-item {
			display: flex;
			justify-content: space-between;
			margin-bottom: 8px;
		}

			.summary-item:last-child {
				margin-bottom: 0;
			}

		.summary-label {
			font-weight: 500;
			color: var(--text-dark);
		}

		.summary-value {
			font-weight: 600;
			color: var(--primary-color);
		}

		/* Form Controls */
		.form-group {
			margin-bottom: 15px;
		}

		.full-width {
			grid-column: 1 / -1;
		}

		label {
			display: block;
			margin-bottom: 8px;
			font-weight: 500;
			color: var(--text-dark);
		}

		.form-control {
			width: 100%;
			border-radius: 6px;
		}

		.form-help {
			color: var(--text-light);
			font-size: 12px;
			margin-top: 4px;
			display: block;
		}

		.form-row {
			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: 20px;
			margin-bottom: 20px;
		}

		/* Material Info Section */
		.material-info-section {
			margin-bottom: 25px;
			padding: 20px;
			background: var(--bg-light);
			border-radius: 12px;
			border: 1px solid var(--border-color);
		}

		.material-title {
			margin: 0 0 15px 0;
			color: var(--text-dark);
			font-size: 18px;
			font-weight: 600;
			text-align: center;
		}

		.material-summary {
			display: flex;
			justify-content: space-around;
			flex-wrap: wrap;
			gap: 10px;
		}

		.summary-item {
			font-size: 14px;
			color: var(--text-light);
			text-align: center;
		}

			.summary-item strong {
				color: var(--text-dark);
			}

		/* Action Buttons Section */
		.action-buttons-section {
			display: flex;
			flex-direction: column;
			gap: 15px;
		}

		.detail-action-button {
			display: flex;
			align-items: center;
			gap: 15px;
			padding: 20px;
			border: none;
			border-radius: 12px;
			cursor: pointer;
			transition: all 0.3s ease;
			text-align: left;
			box-shadow: var(--shadow-light);
			position: relative;
			overflow: hidden;
		}

			.detail-action-button:hover:not(:disabled) {
				transform: translateY(-2px);
				box-shadow: var(--shadow-medium);
			}

			.detail-action-button:disabled {
				cursor: not-allowed;
				opacity: 0.6;
				transform: none;
			}

		.basic-button {
			background: linear-gradient(135deg, var(--success-color) 0%, #20c997 100%);
			color: white;
		}

			.basic-button:hover:not(:disabled) {
				background: linear-gradient(135deg, #218838 0%, #1e7e34 100%);
			}

		.button-icon {
			font-size: 24px;
			flex-shrink: 0;
		}

		.button-text {
			font-size: 18px;
			font-weight: 600;
			display: block;
			margin-bottom: 4px;
		}

		.button-description {
			font-size: 13px;
			opacity: 0.9;
			font-weight: 400;
		}

		/* Dialog Footer */
		.dialog-footer {
			display: flex;
			justify-content: flex-end;
			align-items: center;
			padding: 15px 20px;
			background-color: var(--bg-light);
			border-top: 1px solid var(--border-color);
			gap: 10px;
		}

		.confirmation-footer {
			justify-content: center;
			gap: 20px;
		}

		.dialog-button {
			border-radius: 8px;
			padding: 10px 20px;
			font-weight: 500;
			border: none;
			cursor: pointer;
			transition: all 0.2s ease;
			min-height: 44px;
		}

		.save-button {
			background: var(--primary-color) !important;
			color: white !important;
		}

		.save-button:hover:not(:disabled) {
			background: var(--primary-dark) !important;
			transform: translateY(-1px);
			box-shadow: var(--shadow-light);
		}

		/* Validation Dialog Styling */
		.validation-icon {
			font-size: 24px;
			color: var(--danger-color);
		}

		.validation-message h3 {
			margin: 0 0 15px 0;
			color: var(--text-dark);
			font-size: 18px;
			font-weight: 600;
		}

		.error-list {
			list-style: none;
			padding: 0;
			margin: 0;
		}

		.error-item {
			background: #fff5f5;
			border-left: 4px solid var(--danger-color);
			padding: 10px 15px;
			margin-bottom: 10px;
			border-radius: 4px;
			color: var(--text-dark);
		}

		.error-item:last-child {
			margin-bottom: 0;
		}

		.error-item strong {
			color: var(--danger-color);
		}

		/* Required field styling */
		.required {
			color: var(--danger-color);
			font-weight: bold;
		}		.cancel-button {
			background: white;
			color: var(--text-light);
			border: 2px solid var(--border-color);
		}

			.cancel-button:hover:not(:disabled) {
				background: var(--bg-light);
				border-color: var(--text-light);
			}

			.cancel-button:disabled {
				cursor: not-allowed;
			}

		.confirm-button-dialog {
			background: var(--primary-color);
			color: white;
		}

			.confirm-button-dialog:hover:not(:disabled) {
				background: var(--primary-dark);
				transform: translateY(-1px);
				box-shadow: var(--shadow-light);
			}

			.confirm-button-dialog:disabled {
				background: var(--text-light);
				cursor: not-allowed;
				transform: none;
			}

		.footer-buttons {
			display: flex;
			gap: 10px;
		}

		/* Summary Cards */
		.basic-summary {
			background: var(--bg-light);
			border-radius: 8px;
			padding: 15px;
			margin-top: 20px;
			border: 1px solid var(--border-color);
		}

		.summary-card {
			background: white;
			border-radius: 6px;
			padding: 15px;
			box-shadow: var(--shadow-light);
		}

		.summary-row {
			display: flex;
			justify-content: space-between;
			align-items: center;
			padding: 8px 0;
			border-bottom: 1px solid var(--border-color);
		}

			.summary-row:last-child {
				border-bottom: none;
			}

			.summary-row.total-row {
				border-top: 2px solid var(--primary-color);
				padding-top: 12px;
				margin-top: 8px;
				font-weight: 700;
			}

		.summary-label {
			font-weight: 600;
			color: var(--text-dark);
		}

		.summary-value {
			font-weight: 600;
			color: var(--primary-color);
		}

		.total-value {
			color: var(--success-color);
			font-size: 16px;
		}

		.summary-divider {
			height: 2px;
			background: var(--border-color);
			margin: 10px 0;
			border-radius: 1px;
		}

		/* Edit Button Styling */
		.edit-button {
			background: var(--info-color);
			color: white;
			border: none;
			border-radius: 50%;
			width: 32px;
			height: 32px;
			display: flex;
			align-items: center;
			justify-content: center;
			cursor: pointer;
			transition: all 0.2s ease;
			box-shadow: var(--shadow-light);
			font-size: 14px;
		}

			.edit-button:hover:not(:disabled) {
				background: #138496;
				transform: scale(1.1);
				box-shadow: var(--shadow-medium);
			}

			.edit-button:disabled {
				background: var(--text-light);
				cursor: not-allowed;
				transform: none;
			}

		.edit-icon {
			font-size: 12px;
		}

		/* Animation for sticky buttons entrance */
		@@keyframes slideUp {
			from {
				transform: translateY(100%);
				opacity: 0;
			}

			to {
				transform: translateY(0);
				opacity: 1;
			}
		}

		/* Mobile Responsiveness */
		@@media (max-width: 768px) {
			.page-header {
				padding: 12px 15px;
			}

			.page-title {
				font-size: 18px;
			}

			.main-content {
				padding: 15px 15px 90px 15px;
			}

			.action-buttons-footer {
				padding: 12px 15px;
			}

			.action-buttons {
				gap: 12px;
			}

			.clear-button, .confirm-button {
				padding: 12px 20px;
				font-size: 14px;
				min-width: 120px;
				min-height: 48px;
			}

			.quantity-input-wrapper {
				min-width: 50px;
				max-width: 70px;
			}

			.quantity-input input {
				height: 32px !important;
				font-size: 14px !important;
				padding: 5px 6px !important;
			}

			::deep .e-grid .e-headercell {
				padding: 6px 2px !important;
				font-size: 11px !important;
			}

			::deep .e-grid .e-rowcell {
				padding: 4px 2px !important;
				font-size: 10px !important;
			}

			.details-column {
				gap: 2px;
				font-size: 10px;
			}

			.unit-label,
			.stock-label,
			.remaining-label {
				font-size: 8px;
				min-width: 25px;
			}

			.unit-value,
			.stock-value,
			.remaining-value {
				font-size: 9px;
			}

			.edit-button {
				width: 28px;
				height: 28px;
			}

			.edit-icon {
				font-size: 10px;
			}

			.confirmation-footer {
				flex-direction: column;
				gap: 10px;
			}

			.dialog-button {
				width: 100%;
			}
		}

		@@media (max-width: 576px) {
			.action-buttons {
				gap: 10px;
			}

			.clear-button, .confirm-button {
				padding: 12px 15px;
				font-size: 13px;
				min-width: 100px;
				min-height: 44px;
				gap: 4px;
			}

			.quantity-input-wrapper {
				min-width: 45px;
				max-width: 60px;
			}

			.quantity-input input {
				height: 28px !important;
				font-size: 12px !important;
				padding: 4px 5px !important;
			}

			.empty-cart {
				padding: 40px 15px;
			}

			.empty-icon {
				font-size: 3rem;
			}
		}

		@@media (max-width: 400px) {
			.clear-button, .confirm-button {
				padding: 10px 12px;
				font-size: 12px;
				min-width: 80px;
				min-height: 40px;
				gap: 2px;
			}

			.quantity-input input {
				height: 24px !important;
				font-size: 10px !important;
				padding: 3px 4px !important;
			}
		}

		/* Touch-friendly targets for mobile devices */
		@@media (hover: none) and (pointer: coarse) {
			.clear-button, .confirm-button {
				min-height: 48px;
				padding: 12px 20px;
			}

			.quantity-input input {
				min-height: 36px !important;
			}

			.back-button {
				min-width: 48px;
				min-height: 48px;
			}

			.continue-shopping-btn {
				min-height: 48px;
				padding: 15px 30px;
			}
		}
	</style>
}

