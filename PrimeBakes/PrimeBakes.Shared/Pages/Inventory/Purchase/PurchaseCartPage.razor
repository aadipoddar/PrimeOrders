@page "/Inventory/Purchase/Cart"
@using PrimeBakesLibrary.Data.Common
@using PrimeBakesLibrary.Models.Inventory
@using PrimeBakesLibrary.Models.Accounts.Masters
@using PrimeBakesLibrary.Models.Common
@using Syncfusion.Blazor.DropDowns

<PageTitle>Purchase Cart - PrimeBakes</PageTitle>

@if (_isLoading)
{
	<div class="loader-container">
		<div class="circular-dots-loader">
			<span class="dot dot-1"></span>
			<span class="dot dot-2"></span>
			<span class="dot dot-3"></span>
		</div>
		<p class="loading-text">Loading Purchase Cart...</p>
	</div>
}
else
{
	<div class="order-cart-container">
		<!-- Header -->
		<div class="page-header">
			<button @onclick='() => NavigationManager.NavigateTo("/Inventory/Purchase")' class="back-button" disabled="@_isSaving">
				←
			</button>
			<h1 class="page-title">Purchase Cart</h1>
			<button @onclick='() => _purchaseDetailsDialogVisible = true' class="header-action-btn" disabled="@_isSaving">
				📄 Details
			</button>
		</div>

		<!-- Main Content -->
		<div class="main-content">
			@if (_cart.Any())
			{
				<div class="cart-card">
					<div class="card-header">
						<p class="item-count">@_cart.Sum(x => x.Quantity) items</p>
					</div>

					<div class="cart-grid-container">
						<SfGrid ID="_sfGrid"
								@ref="_sfGrid"
								EnableAdaptiveUI="true"
								DataSource="_cart"
								AllowPaging="true"
								AllowTextWrap=true
								AllowSorting="false"
								Height="auto">

							<GridPageSettings PageSize="4" />

							<GridColumns>
								<GridColumn Field="@nameof(PurchaseRawMaterialCartModel.RawMaterialName)" HeaderText="Raw Material" Width="35%" />
								<GridColumn Field="@nameof(PurchaseRawMaterialCartModel.Quantity)" HeaderText="Quantity" Width="25%" TextAlign="TextAlign.Center">
									<Template>
										@{
											var item = (context as PurchaseRawMaterialCartModel);
										}
										@if (item is not null)
										{
											<div class="quantity-section">
												<div class="quantity-controls">
													<div class="quantity-input-wrapper">
														<SfNumericTextBox TValue="decimal"
																		  Value="@item.Quantity"
																		  ValueChanged="@((decimal value) => UpdateQuantity(item, value))"
																		  Min="0"
																		  Step="1"
																		  type="tel"
																		  ShowSpinButton=false
																		  Format="N0"
																		  Width="60px"
																		  CssClass="quantity-input"
																		  Enabled="@(!_isSaving)" />
													</div>
												</div>
											</div>
										}
									</Template>
								</GridColumn>
								<GridColumn HeaderText="Amount" Width="30%" TextAlign="TextAlign.Right">
									<Template>
										@{
											var item = (context as PurchaseRawMaterialCartModel);
										}
										@if (item is not null)
										{
											<div class="price-total-column">
												<div class="price-section">
													<span class="price-label">Rate:</span>
													<span class="price-value">@item.Rate.FormatIndianCurrency()</span>
												</div>
												<div class="total-section">
													<span class="total-label">Total:</span>
													<span class="total-value">@item.Total.FormatIndianCurrency()</span>
												</div>
											</div>
										}
									</Template>
								</GridColumn>
								<GridColumn HeaderText="🖊️" Width="10%" TextAlign="TextAlign.Right">
									<Template>
										@{
											var item = (context as PurchaseRawMaterialCartModel);
										}
										@if (item is not null && item.Quantity > 0)
										{
											<button class="edit-button" @onclick="() => OpenRawMaterialDetailsDialog(item)" @onclick:stopPropagation="true" title="Edit Raw Material Details" disabled="@_isSaving">
												<span class="edit-icon">⚙️</span>
											</button>
										}
									</Template>
								</GridColumn>
							</GridColumns>
						</SfGrid>
					</div>
				</div>
			}
			else
			{
				<div class="empty-cart">
					<div class="empty-icon">🛒</div>
					<h3>Your cart is empty</h3>
					<p>Add some raw materials to your cart to continue</p>
					<button @onclick='() => NavigationManager.NavigateTo("/Inventory/Purchase")' class="continue-shopping-btn" disabled="@_isSaving">
						Continue Shopping
					</button>
				</div>
			}
		</div>

		<!-- Sticky Action Buttons - Only show when cart has items -->
		@if (_cart.Any())
		{
			<div class="action-buttons-footer">
				<div class="action-buttons">
					<button @onclick="ClearCart" class="clear-button" disabled="@_isSaving">
						🗑️ Clear Cart
					</button>
					<button @onclick="() => _purchaseConfirmationDialogVisible = true" class="confirm-button" disabled="@_isSaving">
						✓ Confirm
					</button>
				</div>
			</div>
		}
	</div>

	<!-- Validation Error Dialog -->
	<SfDialog ID="_sfValidationErrorDialog"
			  @ref="_sfValidationErrorDialog"
			  Width="500px"
			  Height="auto"
			  AllowDragging="false"
			  EnableResize="false"
			  @bind-Visible="_validationErrorDialogVisible"
			  IsModal="true">
		<DialogPositionData X="Center" Y="Center" />
		<DialogTemplates>
			<Header>
				<div class="dialog-header error-header">
					<span class="error-icon">❌</span>
					<span>Validation Errors</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content error-content">
					<div class="error-message">
						<h3>Please fix the following errors before proceeding:</h3>
						<p>Review and correct the issues listed below to continue with your purchase.</p>
					</div>

					<div class="error-list">
						@foreach (var error in _validationErrors)
						{
							<div class="error-item">
								<div class="error-item-icon">⚠️</div>
								<div class="error-item-content">
									<div class="error-item-title">@error.Field</div>
									<div class="error-item-message">@error.Message</div>
								</div>
							</div>
						}
					</div>

					@if (_validationErrors.Count > 1)
					{
						<div class="error-summary">
							<span class="error-count">@_validationErrors.Count errors found</span>
						</div>
					}
				</div>
			</Content>
			<FooterTemplate>
				<div class="dialog-footer error-footer">
					<SfButton Content="Fix Issues" OnClick="() => _validationErrorDialogVisible = false" CssClass="dialog-button error-fix-button" />
				</div>
			</FooterTemplate>
		</DialogTemplates>
	</SfDialog>

	<!-- Purchase Details Dialog -->
	<SfDialog ID="_sfPurchaseDetailsDialog"
			  @ref="_sfPurchaseDetailsDialog"
			  Width="500px"
			  Height="auto"
			  AllowDragging="true"
			  EnableResize="false"
			  @bind-Visible="_purchaseDetailsDialogVisible"
			  IsModal="true">
		<DialogPositionData X="Center" Y="Center" />
		<DialogTemplates>
			<Header>
				<div class="dialog-header">
					<span>Purchase Details</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content">
					<div class="form-group">
						<label>Bill Number</label>
						<SfTextBox @bind-Value="_purchase.BillNo"
								   Placeholder="Enter bill number"
								   CssClass="form-control"
								   Enabled="@(!_isSaving)" />
					</div>

					<div class="form-group">
						<label>Bill Date</label>
						<SfDatePicker @bind-Value="_purchase.BillDateTime"
									  Placeholder="Select Bill Date"
									  CssClass="form-control"
									  Enabled="@(!_isSaving)" />
					</div>

					<div class="form-group full-width">
						<label>Remarks</label>
						<SfTextBox @bind-Value="_purchase.Remarks"
								   Placeholder="Add remarks (optional)"
								   Multiline="true"
								   CssClass="form-control"
								   Enabled="@(!_isSaving)" />
					</div>

					<!-- New Action Buttons Section -->
					<div class="dialog-action-buttons">
						<button @onclick="() => _discountDialogVisible = true" class="dialog-action-btn discount-btn" disabled="@_isSaving">
							<span class="action-icon">💰</span>
							<span>Discount</span>
						</button>
					</div>
				</div>
			</Content>
			<FooterTemplate>
				<div class="dialog-footer">
					<SfButton Content="Close" OnClick="() => _purchaseDetailsDialogVisible = false" CssClass="dialog-button" Disabled="@_isSaving" />
				</div>
			</FooterTemplate>
		</DialogTemplates>
	</SfDialog>

	<!-- Discount Dialog -->
	<SfDialog ID="_sfDiscountDialog"
			  @ref="_sfDiscountDialog"
			  Width="500px"
			  Height="auto"
			  AllowDragging="true"
			  EnableResize="false"
			  @bind-Visible="_discountDialogVisible"
			  IsModal="true">
		<DialogPositionData X="Center" Y="Center" />
		<DialogTemplates>
			<Header>
				<div class="dialog-header">
					<span class="discount-icon">💰</span>
					<span>Cash Discount Details</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content">
					<div class="form-group">
						<label>Cash Discount Percentage</label>
						<SfNumericTextBox TValue="decimal"
										  @bind-Value="_purchase.CDPercent"
										  Min="0"
										  Max="100"
										  Step="1"
										  type="tel"
										  Format="N2"
										  Placeholder="Enter cash discount percentage"
										  CssClass="form-control"
										  Enabled="@(!_isSaving)" />
					</div>

					<div class="form-group">
						<label>Discount Amount</label>
						<div class="readonly-display">
							@_cashDiscountAmount.FormatIndianCurrency()
						</div>
					</div>

					<div class="discount-summary">
						<div class="summary-item">
							<span class="summary-label">Subtotal:</span>
							<span class="summary-value">@_afterTax.FormatIndianCurrency()</span>
						</div>
						<div class="summary-item">
							<span class="summary-label">Cash Discount:</span>
							<span class="summary-value discount-amount">-@_cashDiscountAmount.FormatIndianCurrency()</span>
						</div>
						<div class="summary-item total-after-discount">
							<span class="summary-label">Total after Discount:</span>
							<span class="summary-value">@((_afterTax - _cashDiscountAmount).FormatIndianCurrency())</span>
						</div>
					</div>
				</div>
			</Content>
			<FooterTemplate>
				<div class="dialog-footer">
					<SfButton Content="Apply" OnClick="ApplyDiscount" CssClass="dialog-button primary-button" Disabled="@_isSaving" />
				</div>
			</FooterTemplate>
		</DialogTemplates>
	</SfDialog>

	<!-- Purchase Confirmation Dialog -->
	<SfDialog ID="_sfPurchaseConfirmationDialog"
			  @ref="_sfPurchaseConfirmationDialog"
			  Width="450px"
			  Height="auto"
			  AllowDragging="false"
			  EnableResize="false"
			  @bind-Visible="_purchaseConfirmationDialogVisible"
			  IsModal="true">
		<DialogPositionData X="Center" Y="Center" />
		<DialogTemplates>
			<Header>
				<div class="dialog-header confirmation-header">
					<span class="confirmation-icon">⚠️</span>
					<span>Confirm Purchase</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content confirmation-content">
					<div class="confirmation-message">
						<h3>Are you sure you want to place this purchase?</h3>
						<p>This action cannot be undone. Please review your purchase before confirming.</p>
					</div>

					<div class="order-summary">
						<div class="summary-item">
							<span class="summary-label">Total Items:</span>
							<span class="summary-value">@_cart.Sum(x => x.Quantity)</span>
						</div>
						<div class="summary-item">
							<span class="summary-label">Bill Date:</span>
							<span class="summary-value">@_purchase.BillDateTime.ToShortDateString()</span>
						</div>
						@if (_purchase.CDPercent > 0)
						{
							<div class="summary-item">
								<span class="summary-label">Cash Discount:</span>
								<span class="summary-value discount-amount">@_purchase.CDPercent% (-@_cashDiscountAmount.FormatIndianCurrency())</span>
							</div>
						}
						<div class="summary-item subtotal-summary">
							<span class="summary-label">Subtotal:</span>
							<span class="summary-value">@_afterTax.FormatIndianCurrency()</span>
						</div>

						@if (_purchase.CDPercent > 0)
						{
							<div class="summary-item">
								<span class="summary-label">Cash Discount:</span>
								<span class="summary-value discount-amount">-@_cashDiscountAmount.FormatIndianCurrency()</span>
							</div>
						}

						<!-- Round Off Section with Interactive Input -->
						<div class="round-off-section">
							<label class="round-off-label">Round Off Adjustment:</label>
							<SfNumericTextBox TValue="decimal"
											  Value="@_purchase.RoundOff"
											  ValueChanged="OnRoundOffChanged"
											  Format="N2"
											  type="tel"
											  Placeholder="Enter round off amount"
											  CssClass="round-off-input"
											  Enabled="@(!_isSaving)" />
						</div>
						
						<div class="summary-item total-summary">
							<span class="summary-label">Final Total:</span>
							<span class="summary-value">@_total.FormatIndianCurrency()</span>
						</div>
					</div>
				</div>
			</Content>
			<FooterTemplate>
				<div class="dialog-footer confirmation-footer">
					<SfButton Content="No, Cancel" OnClick="CloseConfirmPurchaseDialog" CssClass="dialog-button cancel-button" Disabled="@_isSaving" />
					<SfButton Content="@(_isSaving ? "⏳ Saving Purchase..." : "Yes, Place Purchase")" OnClick="SavePurchase" CssClass="dialog-button confirm-button-dialog" Disabled="@_isSaving" />
				</div>
			</FooterTemplate>
		</DialogTemplates>
	</SfDialog>

	<!-- Raw Material Details Dialog -->
	<SfDialog ID="_sfRawMaterialDetailsDialog"
			  @ref="_sfRawMaterialDetailsDialog"
			  Width="500px"
			  Height="auto"
			  AllowDragging="true"
			  EnableResize="false"
			  @bind-Visible="_rawMaterialDetailsDialogVisible"
			  IsModal="true">
		<DialogPositionData X="Center" Y="Center" />
		<DialogTemplates>
			<Header>
				<div class="dialog-header">
					<span class="material-icon">📦</span>
					<span>Edit Raw Material Details</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content">
					@if (_selectedRawMaterialForEdit != null)
					{
						<div class="material-info-section">
							<h4 class="material-title">@_selectedRawMaterialForEdit.RawMaterialName</h4>
							<div class="material-summary">
								<span class="summary-item">Qty: <strong>@_selectedRawMaterialForEdit.Quantity.ToString("N2")</strong></span>
								<span class="summary-item">Rate: <strong>₹@_selectedRawMaterialForEdit.Rate.ToString("N2")</strong></span>
								<span class="summary-item">Total: <strong>₹@_selectedRawMaterialForEdit.Total.ToString("N2")</strong></span>
							</div>
						</div>

						<div class="action-buttons-section">
							<button class="detail-action-button basic-button" @onclick="() => OpenBasicDetails()" disabled="@_isSaving">
								<span class="button-icon">📋</span>
								<span class="button-text">Basic</span>
								<span class="button-description">Edit basic raw material info</span>
							</button>

							<button class="detail-action-button discount-button" @onclick="() => OpenDiscountDetails()" disabled="@_isSaving">
								<span class="button-icon">💰</span>
								<span class="button-text">Discount</span>
								<span class="button-description">Apply discounts</span>
							</button>

							<button class="detail-action-button tax-button" @onclick="() => OpenTaxDetails()" disabled="@_isSaving">
								<span class="button-icon">🧾</span>
								<span class="button-text">Tax</span>
								<span class="button-description">Configure tax settings</span>
							</button>
						</div>
					}
				</div>
			</Content>
			<FooterTemplate>
				<div class="dialog-footer">
					<SfButton Content="Close" OnClick="() => _rawMaterialDetailsDialogVisible = false" CssClass="dialog-button" Disabled="@_isSaving" />
				</div>
			</FooterTemplate>
		</DialogTemplates>
	</SfDialog>

	<!-- Basic Info Dialog -->
	<SfDialog ID="_sfBasicInfoDialog"
			  @ref="_sfBasicInfoDialog"
			  Width="600px"
			  Height="auto"
			  AllowDragging="true"
			  EnableResize="false"
			  @bind-Visible="_basicInfoDialogVisible"
			  IsModal="true">
		<DialogPositionData X="Center" Y="Center" />
		<DialogTemplates>
			<Header>
				<div class="dialog-header">
					<span class="material-icon">📋</span>
					<span>Basic Info: </span>
					<span class="material-name">@_selectedRawMaterialForEdit?.RawMaterialName</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content">
					@if (_selectedRawMaterialForEdit != null)
					{
						<div class="form-row">
							<div class="form-group">
								<label>Rate (₹)</label>
								<SfNumericTextBox TValue="decimal"
												  Value="_selectedRawMaterialForEdit.Rate"
												  ValueChanged="OnBasicRateChanged"
												  Min="0"
												  type="tel"
												  Format="N2"
												  CssClass="form-control" 
												  Enabled="@(!_isSaving)" />
							</div>

							<div class="form-group">
								<label>Quantity</label>
								<SfNumericTextBox TValue="decimal"
												  Value="_selectedRawMaterialForEdit.Quantity"
												  ValueChanged="OnBasicQuantityChanged"
												  Min="0"
												  type="tel"
												  Format="N2"
												  CssClass="form-control" 
												  Enabled="@(!_isSaving)" />
							</div>
						</div>

						<div class="form-group full-width">
							<label>Measurement Unit</label>
							<SfTextBox Value="@_selectedRawMaterialForEdit.MeasurementUnit"
									   ValueChanged="OnMeasurementUnitChanged"
									   Placeholder="Enter measurement unit (e.g., kg, liter, piece)"
									   CssClass="form-control"
									   Enabled="@(!_isSaving)" />
						</div>

						<div class="basic-summary">
							<div class="summary-card">
								<div class="summary-row">
									<span class="summary-label">Rate:</span>
									<span class="summary-value">@_selectedRawMaterialForEdit.Rate.FormatIndianCurrency()</span>
								</div>
								<div class="summary-row">
									<span class="summary-label">Quantity:</span>
									<span class="summary-value">@_selectedRawMaterialForEdit.Quantity.ToString("N2") @_selectedRawMaterialForEdit.MeasurementUnit</span>
								</div>
								<div class="summary-divider"></div>
								<div class="summary-row total-row">
									<span class="summary-label">Base Total:</span>
									<span class="summary-value total-value">@((_selectedRawMaterialForEdit.Rate * _selectedRawMaterialForEdit.Quantity).FormatIndianCurrency())</span>
								</div>
								<div class="summary-row total-row">
									<span class="summary-label">Net Rate:</span>
									<span class="summary-value total-value">@_selectedRawMaterialForEdit.NetRate.FormatIndianCurrency()</span>
								</div>
							</div>
						</div>
					}
				</div>
			</Content>
			<FooterTemplate>
				<div class="dialog-footer">
					<div class="footer-buttons">
						<SfButton Content="Save" IsPrimary="true" OnClick="OnSaveBasicInfoClick" CssClass="dialog-button" Disabled="@_isSaving" />
					</div>
				</div>
			</FooterTemplate>
		</DialogTemplates>
	</SfDialog>

	<!-- Discount Details Dialog -->
	<SfDialog ID="_sfDiscountDetailsDialog"
			  @ref="_sfDiscountDetailsDialog"
			  Width="600px"
			  Height="auto"
			  AllowDragging="true"
			  EnableResize="false"
			  @bind-Visible="_discountDetailsDialogVisible"
			  IsModal="true">
		<DialogPositionData X="Center" Y="Center" />
		<DialogTemplates>
			<Header>
				<div class="dialog-header">
					<span class="material-icon">💰</span>
					<span>Discount Details: </span>
					<span class="material-name">@_selectedRawMaterialForEdit?.RawMaterialName</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content">
					@if (_selectedRawMaterialForEdit != null)
					{
						<div class="form-row">
							<div class="form-group">
								<label>Discount Percentage (%)</label>
								<SfNumericTextBox TValue="decimal"
												  Value="_selectedRawMaterialForEdit.DiscPercent"
												  ValueChanged="OnDiscountPercentChanged"
												  Min="0"
												  Max="100"
												  type="tel"
												  Format="N2"
												  CssClass="form-control" 
												  Enabled="@(!_isSaving)" />
							</div>
						</div>

						<div class="discount-summary">
							<div class="summary-card">
								<div class="summary-row">
									<span class="summary-label">Base Amount:</span>
									<span class="summary-value">@((_selectedRawMaterialForEdit.Rate * _selectedRawMaterialForEdit.Quantity).FormatIndianCurrency())</span>
								</div>
								<div class="summary-row">
									<span class="summary-label">Discount (%):</span>
									<span class="summary-value">@_selectedRawMaterialForEdit.DiscPercent.ToString("N2")%</span>
								</div>
								<div class="summary-row">
									<span class="summary-label">Discount Amount:</span>
									<span class="summary-value discount-value">-@((_selectedRawMaterialForEdit.Rate * _selectedRawMaterialForEdit.Quantity * _selectedRawMaterialForEdit.DiscPercent / 100).FormatIndianCurrency())</span>
								</div>
								<div class="summary-divider"></div>
								<div class="summary-row total-row">
									<span class="summary-label">After Discount:</span>
									<span class="summary-value total-value">@(((_selectedRawMaterialForEdit.Rate * _selectedRawMaterialForEdit.Quantity) - (_selectedRawMaterialForEdit.Rate * _selectedRawMaterialForEdit.Quantity * _selectedRawMaterialForEdit.DiscPercent / 100)).FormatIndianCurrency())</span>
								</div>
							</div>
						</div>
					}
				</div>
			</Content>
			<FooterTemplate>
				<div class="dialog-footer">
					<div class="footer-buttons">
						<SfButton Content="Save" IsPrimary="true" OnClick="OnSaveDiscountClick" CssClass="dialog-button" Disabled="@_isSaving" />
					</div>
				</div>
			</FooterTemplate>
		</DialogTemplates>
	</SfDialog>

	<!-- Tax Details Dialog -->
	<SfDialog ID="_sfTaxDetailsDialog"
			  @ref="_sfTaxDetailsDialog"
			  Width="700px"
			  Height="auto"
			  AllowDragging="true"
			  EnableResize="false"
			  @bind-Visible="_taxDetailsDialogVisible"
			  IsModal="true">
		<DialogPositionData X="Center" Y="Center" />
		<DialogTemplates>
			<Header>
				<div class="dialog-header">
					<span class="material-icon">🧾</span>
					<span>Tax Details: </span>
					<span class="material-name">@_selectedRawMaterialForEdit?.RawMaterialName</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content">
					@if (_selectedRawMaterialForEdit != null)
					{
						<div class="tax-grid">
							<div class="tax-row">
								<div class="tax-column">
									<label>CGST Percentage (%)</label>
									<SfNumericTextBox TValue="decimal"
													  Value="_selectedRawMaterialForEdit.CGSTPercent"
													  ValueChanged="OnCGSTPercentChanged"
													  Min="0"
													  Max="50"
													  type="tel"
													  Format="N2"
													  CssClass="form-control" 
													  Enabled="@(!_isSaving)" />
								</div>
							</div>

							<div class="tax-row">
								<div class="tax-column">
									<label>SGST Percentage (%)</label>
									<SfNumericTextBox TValue="decimal"
													  Value="_selectedRawMaterialForEdit.SGSTPercent"
													  ValueChanged="OnSGSTPercentChanged"
													  Min="0"
													  Max="50"
													  type="tel"
													  Format="N2"
													  CssClass="form-control" 
													  Enabled="@(!_isSaving)" />
								</div>
							</div>

							<div class="tax-row">
								<div class="tax-column">
									<label>IGST Percentage (%)</label>
									<SfNumericTextBox TValue="decimal"
													  Value="_selectedRawMaterialForEdit.IGSTPercent"
													  ValueChanged="OnIGSTPercentChanged"
													  Min="0"
													  Max="50"
													  type="tel"
													  Format="N2"
													  CssClass="form-control" 
													  Enabled="@(!_isSaving)" />
								</div>
							</div>
						</div>

						<div class="tax-summary">
							<div class="summary-card">
								<div class="summary-row">
									<span class="summary-label">Taxable Amount:</span>
									<span class="summary-value">@_selectedRawMaterialForEdit.AfterDiscount.FormatIndianCurrency()</span>
								</div>
								<div class="summary-row">
									<span class="summary-label">CGST Amount:</span>
									<span class="summary-value">@_selectedRawMaterialForEdit.CGSTAmount.FormatIndianCurrency()</span>
								</div>
								<div class="summary-row">
									<span class="summary-label">SGST Amount:</span>
									<span class="summary-value">@_selectedRawMaterialForEdit.SGSTAmount.FormatIndianCurrency()</span>
								</div>
								<div class="summary-row">
									<span class="summary-label">IGST Amount:</span>
									<span class="summary-value">@_selectedRawMaterialForEdit.IGSTAmount.FormatIndianCurrency()</span>
								</div>
								<div class="summary-row">
									<span class="summary-label">Total Tax:</span>
									<span class="summary-value tax-value">@((_selectedRawMaterialForEdit.CGSTAmount + _selectedRawMaterialForEdit.SGSTAmount + _selectedRawMaterialForEdit.IGSTAmount).FormatIndianCurrency())</span>
								</div>
								<div class="summary-divider"></div>
								<div class="summary-row total-row">
									<span class="summary-label">Final Amount:</span>
									<span class="summary-value total-value">@_selectedRawMaterialForEdit.Total.FormatIndianCurrency()</span>
								</div>
							</div>
						</div>

						<div class="tax-info">
							<div class="info-card">
								<span class="info-icon">ℹ️</span>
								<span class="info-text">Use CGST + SGST for intra-state transactions, or IGST for inter-state transactions.</span>
							</div>
						</div>
					}
				</div>
			</Content>
			<FooterTemplate>
				<div class="dialog-footer">
					<div class="footer-buttons">
						<SfButton Content="Save" IsPrimary="true" OnClick="OnSaveTaxClick" CssClass="dialog-button" Disabled="@_isSaving" />
					</div>
				</div>
			</FooterTemplate>
		</DialogTemplates>
	</SfDialog>

	<!-- Styles - Reusing the same styles from SaleCartPage with minor adaptations -->
	<style>
	:root {
		--primary-color: #28a745;
		--primary-dark: #1e7e34;
		--primary-light: #c3e6cb;
		--text-dark: #2c3e50;
		--text-light: #7f8c8d;
		--bg-light: #f8f9fa;
		--border-color: #e9ecef;
		--shadow-light: 0 2px 8px rgba(0, 0, 0, 0.1);
		--shadow-medium: 0 4px 12px rgba(0, 0, 0, 0.15);
		--success-color: #28a745;
		--danger-color: #dc3545;
		--warning-color: #ffc107;
		--error-color: #dc3545;
		--error-bg: #f8d7da;
		--error-border: #f5c6cb;
		--info-color: #17a2b8;
		--discount-color: #ff6b35;
		--tax-color: #6f42c1;
	}		/* Loading Animation */
		.loader-container {
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			height: 100vh;
			background: linear-gradient(135deg, #e8f5e8 0%, #f0f8f0 100%);
		}

		.circular-dots-loader {
			position: relative;
			width: 60px;
			height: 60px;
			margin-bottom: 15px;
		}

			.circular-dots-loader .dot {
				position: absolute;
				width: 12px;
				height: 12px;
				border-radius: 50%;
				animation: rotate 1.5s infinite linear;
			}

			.circular-dots-loader .dot-1 {
				background-color: var(--primary-color);
				animation-delay: 0s;
			}

			.circular-dots-loader .dot-2 {
				background-color: var(--info-color);
				animation-delay: -0.5s;
			}

			.circular-dots-loader .dot-3 {
				background-color: var(--primary-dark);
				animation-delay: -1s;
			}

		.loading-text {
			color: var(--text-dark);
			font-size: 16px;
			margin-top: 10px;
			font-weight: 500;
		}

		/* Animation keyframes */
		@@keyframes rotate {
			0% {
				transform: rotate(0deg) translate(-24px) rotate(0deg);
			}

			100% {
				transform: rotate(360deg) translate(-24px) rotate(-360deg);
			}
		}

		.order-cart-container {
			min-height: 100vh;
			background: linear-gradient(135deg, #e8f5e8 0%, #f0f8f0 100%);
			display: flex;
			flex-direction: column;
		}

		/* Header */
		.page-header {
			display: flex;
			align-items: center;
			justify-content: space-between;
			padding: 15px 20px;
			background: white;
			box-shadow: var(--shadow-light);
			position: sticky;
			top: 0;
			z-index: 100;
		}

		.back-button {
			background: var(--primary-color);
			color: white;
			border: none;
			border-radius: 8px;
			padding: 10px 15px;
			display: flex;
			align-items: center;
			justify-content: center;
			cursor: pointer;
			transition: all 0.2s ease;
			box-shadow: var(--shadow-light);
			font-size: 18px;
			font-weight: bold;
			min-width: 44px;
			min-height: 44px;
		}

			.back-button:hover:not(:disabled) {
				background: var(--primary-dark);
				transform: translateY(-1px);
				box-shadow: var(--shadow-medium);
			}

			.back-button:disabled {
				background: var(--text-light);
				cursor: not-allowed;
				transform: none;
			}

		.page-title {
			margin: 0;
			color: var(--text-dark);
			font-size: 24px;
			font-weight: 600;
			flex: 1;
			text-align: center;
		}

		.header-action-btn {
			background: transparent;
			border: 2px solid var(--primary-color);
			color: var(--primary-color);
			border-radius: 8px;
			padding: 10px 12px;
			cursor: pointer;
			transition: all 0.2s ease;
			font-size: 14px;
			font-weight: 500;
		}

			.header-action-btn:hover:not(:disabled) {
				background: var(--primary-color);
				color: white;
			}

			.header-action-btn:disabled {
				border-color: var(--text-light);
				color: var(--text-light);
				cursor: not-allowed;
			}

		/* Main Content */
		.main-content {
			flex: 1;
			padding: 20px 20px 100px 20px;
			display: flex;
			flex-direction: column;
			gap: 20px;
		}

		/* Cart Card */
		.cart-card {
			background: white;
			border-radius: 15px;
			box-shadow: var(--shadow-light);
			overflow: hidden;
			flex: 1;
		}

		.card-header {
			background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
			color: white;
			padding: 20px;
			display: flex;
			justify-content: space-between;
			align-items: center;
		}

			.card-header h2 {
				margin: 0;
				font-size: 20px;
				font-weight: 600;
			}

		.item-count {
			margin: 0;
			background: rgba(255, 255, 255, 0.2);
			padding: 4px 12px;
			border-radius: 15px;
			font-size: 14px;
			font-weight: 500;
		}

		.cart-grid-container {
			padding: 20px 0;
		}

		/* Quantity Section */
		.quantity-section {
			display: flex;
			justify-content: center;
			align-items: center;
			width: 100%;
			padding: 2px 0;
		}

		.quantity-controls {
			display: flex;
			align-items: center;
			gap: 4px;
			width: 100%;
			justify-content: center;
			max-width: 80px;
		}

		.quantity-input-wrapper {
			flex: 1;
			min-width: 60px;
			max-width: 80px;
		}

		.quantity-input {
			width: 100% !important;
		}

			.quantity-input input {
				text-align: center !important;
				border: 2px solid var(--border-color);
				border-radius: 8px;
				padding: 6px 8px !important;
				font-weight: 600;
				font-size: 16px !important;
				color: var(--text-dark);
				transition: all 0.2s ease;
				height: 36px !important;
				box-sizing: border-box;
				letter-spacing: 0.3px;
			}

				.quantity-input input:focus {
					border-color: var(--primary-color);
					box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);
					outline: none;
				}

		/* Price Total Column */
		.price-total-column {
			display: flex;
			flex-direction: column;
			gap: 4px;
		}

		.price-section, .total-section {
			display: flex;
			align-items: center;
			gap: 8px;
		}

		.price-label, .total-label {
			font-size: 11px;
			color: var(--text-light);
			font-weight: 500;
		}

		.price-value, .total-value {
			font-size: 12px;
			color: var(--text-dark);
			font-weight: 600;
		}

		/* Sticky Action Buttons Footer */
		.action-buttons-footer {
			position: sticky;
			bottom: 0;
			background: white;
			padding: 15px 20px;
			box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
			z-index: 100;
			animation: slideUp 0.3s ease-out;
		}

		.action-buttons {
			display: flex;
			gap: 15px;
			justify-content: center;
			align-items: center;
			flex-wrap: nowrap;
		}

		.clear-button, .confirm-button {
			padding: 15px 25px;
			border: none;
			border-radius: 12px;
			font-weight: 600;
			font-size: 16px;
			cursor: pointer;
			transition: all 0.2s ease;
			display: flex;
			align-items: center;
			gap: 8px;
			box-shadow: var(--shadow-light);
			flex: 1;
			max-width: 200px;
			min-width: 140px;
			justify-content: center;
			min-height: 56px;
		}

		.clear-button {
			background: white;
			color: var(--danger-color);
			border: 2px solid var(--danger-color);
		}

			.clear-button:hover:not(:disabled) {
				background: var(--danger-color);
				color: white;
				transform: translateY(-2px);
				box-shadow: var(--shadow-medium);
			}

			.clear-button:disabled {
				background: var(--bg-light);
				color: var(--text-light);
				border-color: var(--text-light);
				cursor: not-allowed;
				transform: none;
			}

		.confirm-button {
			background: var(--primary-color);
			color: white;
		}

			.confirm-button:hover:not(:disabled) {
				background: var(--primary-dark);
				transform: translateY(-2px);
				box-shadow: 0 6px 20px rgba(40, 167, 69, 0.3);
			}

			.confirm-button:disabled {
				background: var(--text-light);
				cursor: not-allowed;
				transform: none;
			}

		/* Empty Cart */
		.empty-cart {
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			text-align: center;
			padding: 60px 20px;
			background: white;
			border-radius: 15px;
			box-shadow: var(--shadow-light);
			margin: auto;
			max-width: 400px;
		}

		.empty-icon {
			font-size: 4rem;
			margin-bottom: 20px;
			opacity: 0.6;
		}

		.empty-cart h3 {
			margin: 0 0 10px 0;
			color: var(--text-dark);
			font-size: 24px;
			font-weight: 600;
		}

		.empty-cart p {
			margin: 0 0 30px 0;
			color: var(--text-light);
			font-size: 16px;
		}

		.continue-shopping-btn {
			background: var(--primary-color);
			color: white;
			border: none;
			border-radius: 12px;
			padding: 15px 30px;
			font-weight: 600;
			font-size: 16px;
			cursor: pointer;
			transition: all 0.2s ease;
			box-shadow: var(--shadow-light);
			min-height: 48px;
		}

			.continue-shopping-btn:hover:not(:disabled) {
				background: var(--primary-dark);
				transform: translateY(-2px);
				box-shadow: var(--shadow-medium);
			}

			.continue-shopping-btn:disabled {
				background: var(--text-light);
				cursor: not-allowed;
				transform: none;
			}

		/* Grid Styling */
		::deep .e-grid {
			border-radius: 12px;
			overflow: hidden;
			background: white;
			box-shadow: var(--shadow-light);
			border: none;
			font-size: 12px !important;
		}

			::deep .e-grid .e-gridheader {
				background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
			}

			::deep .e-grid .e-headercell {
				background: transparent;
				color: white;
				font-weight: 600;
				border: none;
				padding: 8px 4px !important;
				font-size: 12px !important;
			}

			::deep .e-grid .e-rowcell {
				border: none;
				border-bottom: 1px solid var(--border-color);
				padding: 6px 4px !important;
				vertical-align: middle;
				font-size: 11px !important;
			}

			::deep .e-grid .e-row:nth-child(even) {
				background-color: #fafafa;
			}

			::deep .e-grid .e-row:hover {
				background-color: var(--primary-light);
			}

		/* Pager Styling */
		::deep .e-pager {
			background: white;
			border-top: 1px solid var(--border-color);
			padding: 10px 0 !important;
			font-size: 11px !important;
		}

			::deep .e-pager .e-currentitem {
				background: var(--primary-color);
				color: white;
				border-radius: 6px;
			}

		/* Dialog Styling */
		.dialog-header {
			font-size: 20px;
			font-weight: 600;
			color: var(--text-dark);
			display: flex;
			align-items: center;
			gap: 10px;
		}

		.confirmation-header {
			color: var(--warning-color);
		}

		.error-header {
			color: var(--error-color);
		}

		.confirmation-icon, .error-icon {
			font-size: 24px;
		}

		.discount-icon, .supplier-icon, .material-icon {
			font-size: 24px;
		}

		.dialog-content {
			padding: 20px;
		}

		.confirmation-content, .error-content {
			text-align: center;
		}

		.confirmation-message h3, .error-message h3 {
			margin: 0 0 10px 0;
			color: var(--text-dark);
			font-size: 18px;
			font-weight: 600;
		}

		.confirmation-message p, .error-message p {
			margin: 0 0 20px 0;
			color: var(--text-light);
			font-size: 14px;
		}

		/* Error Dialog Specific Styles */
		.error-list {
			background: var(--error-bg);
			border: 1px solid var(--error-border);
			border-radius: 8px;
			padding: 15px;
			margin-bottom: 15px;
			text-align: left;
		}

		.error-item {
			display: flex;
			align-items: flex-start;
			gap: 12px;
			margin-bottom: 12px;
			padding: 8px;
			background: white;
			border-radius: 6px;
			border-left: 4px solid var(--error-color);
		}

			.error-item:last-child {
				margin-bottom: 0;
			}

		.error-item-icon {
			font-size: 16px;
			margin-top: 2px;
			flex-shrink: 0;
		}

		.error-item-content {
			flex: 1;
		}

		.error-item-title {
			font-weight: 600;
			color: var(--error-color);
			font-size: 14px;
			margin-bottom: 2px;
		}

		.error-item-message {
			color: var(--text-dark);
			font-size: 13px;
			line-height: 1.4;
		}

		.error-summary {
			text-align: center;
			padding: 10px;
			background: rgba(220, 53, 69, 0.1);
			border-radius: 6px;
			margin-top: 10px;
		}

		.error-count {
			font-weight: 600;
			color: var(--error-color);
			font-size: 14px;
		}

		/* Order Summary */
		.order-summary {
			background: var(--bg-light);
			padding: 15px;
			border-radius: 8px;
			border-left: 4px solid var(--primary-color);
		}

		.summary-item {
			display: flex;
			justify-content: space-between;
			margin-bottom: 8px;
		}

			.summary-item:last-child {
				margin-bottom: 0;
			}

		.summary-label {
			font-weight: 500;
			color: var(--text-dark);
		}

		.summary-value {
			font-weight: 600;
			color: var(--primary-color);
		}

		.discount-amount {
			color: var(--success-color) !important;
		}

		.total-summary, .subtotal-summary {
			border-top: 2px solid var(--primary-color);
			padding-top: 8px;
			margin-top: 8px;
			font-size: 16px;
			font-weight: 700;
		}

		/* Dialog Footer */
		.dialog-footer {
			display: flex;
			justify-content: flex-end;
			align-items: center;
			padding: 15px 20px;
			background-color: var(--bg-light);
			border-top: 1px solid var(--border-color);
			gap: 10px;
		}

		.confirmation-footer, .error-footer {
			justify-content: center;
			gap: 20px;
		}

		.dialog-button {
			border-radius: 8px;
			padding: 10px 20px;
			font-weight: 500;
			border: none;
			cursor: pointer;
			transition: all 0.2s ease;
			min-height: 44px;
		}

		.cancel-button {
			background: white;
			color: var(--text-light);
			border: 2px solid var(--border-color);
		}

			.cancel-button:hover:not(:disabled) {
				background: var(--bg-light);
				border-color: var(--text-light);
			}

		.confirm-button-dialog {
			background: var(--primary-color);
			color: white;
		}

			.confirm-button-dialog:hover:not(:disabled) {
				background: var(--primary-dark);
				transform: translateY(-1px);
				box-shadow: var(--shadow-light);
			}

			.confirm-button-dialog:disabled {
				background: var(--text-light);
				cursor: not-allowed;
				transform: none;
			}

		.primary-button {
			background: var(--primary-color);
			color: white;
		}

			.primary-button:hover:not(:disabled) {
				background: var(--primary-dark);
				transform: translateY(-1px);
				box-shadow: var(--shadow-light);
			}

		.error-fix-button {
			background: var(--error-color);
			color: white;
			padding: 12px 24px;
			font-weight: 600;
		}

			.error-fix-button:hover {
				background: #c82333;
				transform: translateY(-1px);
				box-shadow: var(--shadow-light);
			}

		/* Dialog Action Buttons */
		.dialog-action-buttons {
			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: 15px;
			margin-top: 20px;
			padding-top: 20px;
			border-top: 1px solid var(--border-color);
		}

		.dialog-action-btn {
			background: white;
			border: 2px solid var(--primary-color);
			color: var(--primary-color);
			padding: 12px 16px;
			border-radius: 8px;
			cursor: pointer;
			transition: all 0.2s ease;
			display: flex;
			align-items: center;
			justify-content: center;
			gap: 8px;
			font-weight: 500;
			font-size: 14px;
			min-height: 48px;
		}

			.dialog-action-btn:hover:not(:disabled) {
				background: var(--primary-color);
				color: white;
				transform: translateY(-1px);
				box-shadow: var(--shadow-light);
			}

		.discount-btn {
			border-color: var(--success-color);
			color: var(--success-color);
		}

			.discount-btn:hover:not(:disabled) {
				background: var(--success-color);
				color: white;
			}

		.supplier-btn {
			border-color: var(--info-color);
			color: var(--info-color);
		}

			.supplier-btn:hover:not(:disabled) {
				background: var(--info-color);
				color: white;
			}

		.action-icon {
			font-size: 16px;
		}

		/* Form Controls */
		.form-group {
			margin-bottom: 15px;
		}

		.full-width {
			grid-column: 1 / -1;
		}

		label {
			display: block;
			margin-bottom: 8px;
			font-weight: 500;
			color: var(--text-dark);
		}

		.form-control {
			width: 100%;
			border-radius: 6px;
		}

		.readonly-display {
			padding: 10px 12px;
			background: var(--bg-light);
			border: 1px solid var(--border-color);
			border-radius: 6px;
			color: var(--text-dark);
			font-weight: 600;
			font-size: 16px;
		}

		/* Discount Summary */
		.discount-summary {
			background: var(--bg-light);
			border-radius: 8px;
			padding: 15px;
			margin-top: 20px;
			border: 1px solid var(--border-color);
		}

		.total-after-discount {
			border-top: 2px solid var(--primary-color);
			padding-top: 8px;
			margin-top: 8px;
			font-size: 16px;
			font-weight: 700;
		}

		/* Supplier Info Card */
		.supplier-info-card {
			background: var(--bg-light);
			border-radius: 8px;
			padding: 15px;
			margin-top: 20px;
			border: 1px solid var(--border-color);
		}

		.supplier-info-header {
			display: flex;
			align-items: center;
			gap: 8px;
			font-weight: 600;
			color: var(--text-dark);
			margin-bottom: 10px;
		}

		.info-icon {
			font-size: 18px;
		}

		.supplier-info-content {
			padding-left: 26px;
		}

		.info-item {
			display: flex;
			justify-content: space-between;
			margin-bottom: 5px;
		}

		.info-label {
			font-weight: 500;
			color: var(--text-light);
		}

		.info-value {
			font-weight: 600;
			color: var(--text-dark);
		}

		/* Round Off Section */
		.round-off-section {
			background-color: var(--bg-light);
			border: 1px solid var(--border-color);
			border-radius: 8px;
			padding: 15px;
			margin: 15px 0;
			transition: all 0.2s ease;
		}

			.round-off-section:hover {
				border-color: var(--primary-color);
				box-shadow: 0 2px 8px rgba(40, 167, 69, 0.1);
			}

		.round-off-label {
			font-weight: 600;
			color: var(--text-dark);
			margin-bottom: 8px;
			font-size: 14px;
			display: block;
		}

		.round-off-input {
			width: 100%;
		}

			.round-off-input input {
				text-align: center !important;
				border: 2px solid var(--border-color);
				border-radius: 6px;
				padding: 10px 12px !important;
				font-weight: 600;
				font-size: 16px;
				color: var(--text-dark);
				transition: all 0.2s ease;
				background: white;
			}

				.round-off-input input:focus {
					border-color: var(--primary-color);
					box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);
					outline: none;
				}

				.round-off-input input::placeholder {
					color: var(--text-light);
					font-weight: 400;
				}

		/* Material Details Dialog Styles */
		.material-icon {
			font-size: 20px;
			color: var(--primary-color);
		}

		.material-name {
			color: var(--text-dark);
			font-weight: 500;
		}

		.material-info-section {
			margin-bottom: 25px;
			padding: 20px;
			background: var(--bg-light);
			border-radius: 12px;
			border: 1px solid var(--border-color);
		}

		.material-title {
			margin: 0 0 15px 0;
			color: var(--text-dark);
			font-size: 18px;
			font-weight: 600;
			text-align: center;
		}

		.material-summary {
			display: flex;
			justify-content: space-around;
			flex-wrap: wrap;
			gap: 10px;
		}

		/* Action Buttons Section */
		.action-buttons-section {
			display: flex;
			flex-direction: column;
			gap: 15px;
		}

		.detail-action-button {
			display: flex;
			align-items: center;
			gap: 15px;
			padding: 20px;
			border: none;
			border-radius: 12px;
			cursor: pointer;
			transition: all 0.3s ease;
			text-align: left;
			box-shadow: var(--shadow-light);
			position: relative;
			overflow: hidden;
		}

			.detail-action-button:hover:not(:disabled) {
				transform: translateY(-2px);
				box-shadow: var(--shadow-medium);
			}

			.detail-action-button:active {
				transform: translateY(0);
			}

			.detail-action-button:disabled {
				opacity: 0.6;
				cursor: not-allowed;
				transform: none;
			}

		.basic-button {
			background: linear-gradient(135deg, var(--success-color) 0%, #20c997 100%);
			color: white;
		}

			.basic-button:hover:not(:disabled) {
				background: linear-gradient(135deg, #218838 0%, #1e7e34 100%);
			}

		.discount-button {
			background: linear-gradient(135deg, #ff6b35 0%, #ff5722 100%);
			color: white;
		}

			.discount-button:hover:not(:disabled) {
				background: linear-gradient(135deg, #e55a4e 0%, #d84315 100%);
			}

		.tax-button {
			background: linear-gradient(135deg, #6f42c1 0%, #5a39c5 100%);
			color: white;
		}

			.tax-button:hover:not(:disabled) {
				background: linear-gradient(135deg, #5e379b 0%, #483593 100%);
			}

		.button-icon {
			font-size: 24px;
			flex-shrink: 0;
		}

		.button-text {
			font-size: 18px;
			font-weight: 600;
			display: block;
			margin-bottom: 4px;
		}

		.button-description {
			font-size: 13px;
			opacity: 0.9;
			font-weight: 400;
		}

		/* Edit Button Styling */
		.edit-button {
			background: var(--info-color);
			color: white;
			border: none;
			border-radius: 50%;
			width: 32px;
			height: 32px;
			display: flex;
			align-items: center;
			justify-content: center;
			cursor: pointer;
			transition: all 0.2s ease;
			box-shadow: var(--shadow-light);
			font-size: 14px;
		}

			.edit-button:hover:not(:disabled) {
				background: #138496;
				transform: scale(1.1);
				box-shadow: var(--shadow-medium);
			}

			.edit-button:active {
				transform: scale(0.95);
			}

			.edit-button:disabled {
				background: var(--text-light);
				cursor: not-allowed;
				transform: none;
			}

		.edit-icon {
			font-size: 12px;
		}

		/* Form styling for dialogs */
		.form-row {
			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: 20px;
			margin-bottom: 20px;
		}

			.form-row .full-width {
				grid-column: 1 / -1;
			}

		/* Summary card styling */
		.basic-summary,
		.discount-summary,
		.tax-summary {
			margin-top: 25px;
		}

		.summary-card {
			background-color: var(--bg-light);
			border-radius: 12px;
			padding: 20px;
			border: 1px solid var(--border-color);
			box-shadow: var(--shadow-light);
		}

		.summary-row {
			display: flex;
			justify-content: space-between;
			align-items: center;
			padding: 10px 0;
			border-bottom: 1px solid var(--border-color);
		}

			.summary-row:last-child {
				border-bottom: none;
			}

		.summary-divider {
			height: 2px;
			background-color: var(--border-color);
			margin: 10px 0;
			border-radius: 1px;
		}

		.total-row {
			margin-top: 10px;
			padding-top: 15px;
			border-top: 2px solid var(--primary-color) !important;
			border-bottom: none !important;
		}

			.total-row .summary-label,
			.total-row .summary-value {
				font-size: 16px;
				font-weight: 700;
			}

		.total-value {
			color: var(--primary-color) !important;
		}

		.discount-value {
			color: #dc3545 !important;
		}

		.tax-value {
			color: var(--warning-color) !important;
		}

		/* Tax grid styling */
		.tax-grid {
			display: flex;
			flex-direction: column;
			gap: 20px;
			margin-bottom: 25px;
		}

		.tax-row {
			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: 20px;
			align-items: end;
		}

		.tax-column {
			display: flex;
			flex-direction: column;
		}

			.tax-column label {
				margin-bottom: 8px;
				font-weight: 500;
				color: var(--text-dark);
				font-size: 14px;
			}

		/* Tax info card */
		.tax-info {
			margin-top: 20px;
		}

		.info-card {
			background-color: #e3f2fd;
			border: 1px solid #2196f3;
			border-radius: 8px;
			padding: 15px;
			display: flex;
			align-items: center;
			gap: 10px;
		}

		.info-text {
			color: #1565c0;
			font-size: 14px;
			font-weight: 500;
			line-height: 1.4;
		}

		/* Footer buttons styling */
		.footer-buttons {
			display: flex;
			gap: 10px;
			flex-wrap: wrap;
		}

			.footer-buttons .dialog-button {
				min-width: 120px;
			}

		/* Animation for sticky buttons entrance */
		@@keyframes slideUp {
			from {
				transform: translateY(100%);
				opacity: 0;
			}

			to {
				transform: translateY(0);
				opacity: 1;
			}
		}

		/* Mobile Responsiveness */
		@@media (max-width: 768px) {
			.page-header {
				padding: 12px 15px;
			}

			.page-title {
				font-size: 18px;
			}

			.main-content {
				padding: 15px 15px 90px 15px;
			}

			.action-buttons-footer {
				padding: 12px 15px;
			}

			.action-buttons {
				gap: 12px;
			}

			.clear-button, .confirm-button {
				padding: 12px 20px;
				font-size: 14px;
				min-width: 120px;
				min-height: 48px;
			}

			.quantity-input-wrapper {
				min-width: 50px;
				max-width: 70px;
			}

			.quantity-input input {
				height: 32px !important;
				font-size: 14px !important;
				padding: 5px 6px !important;
			}

			::deep .e-grid .e-headercell {
				padding: 6px 2px !important;
				font-size: 11px !important;
			}

			::deep .e-grid .e-rowcell {
				padding: 4px 2px !important;
				font-size: 10px !important;
			}

			.confirmation-footer, .error-footer {
				flex-direction: column;
				gap: 10px;
			}

			.dialog-button {
				width: 100%;
			}

			.error-item {
				flex-direction: column;
				gap: 8px;
			}

			.error-item-icon {
				align-self: flex-start;
			}

			.dialog-action-buttons {
				grid-template-columns: 1fr;
				gap: 12px;
			}

			.form-row {
				grid-template-columns: 1fr;
				gap: 15px;
			}

			.tax-row {
				grid-template-columns: 1fr;
				gap: 15px;
			}

			.footer-buttons {
				flex-direction: column;
			}

				.footer-buttons .dialog-button {
					width: 100%;
				}

			.summary-row {
				padding: 8px 0;
			}

			.summary-label,
			.summary-value {
				font-size: 13px;
			}

			.total-row .summary-label,
			.total-row .summary-value {
				font-size: 15px;
			}

			.action-buttons-section {
				gap: 12px;
			}

			.detail-action-button {
				padding: 15px;
				gap: 12px;
			}

			.button-icon {
				font-size: 20px;
			}

			.button-text {
				font-size: 16px;
			}

			.button-description {
				font-size: 12px;
			}

			.edit-button {
				width: 28px;
				height: 28px;
			}

			.edit-icon {
				font-size: 10px;
			}
		}

		@@media (max-width: 576px) {
			.back-button, .header-action-btn {
				padding: 8px 10px;
				font-size: 14px;
			}

			.page-title {
				font-size: 16px;
			}

			.card-header {
				padding: 15px;
				flex-direction: column;
				gap: 10px;
				text-align: center;
			}

			.main-content {
				padding: 15px 15px 80px 15px;
			}

			.action-buttons-footer {
				padding: 10px 15px;
			}

			.action-buttons {
				gap: 10px;
			}

			.clear-button, .confirm-button {
				padding: 12px 15px;
				font-size: 13px;
				min-width: 100px;
				min-height: 44px;
				gap: 4px;
			}

			.quantity-input-wrapper {
				min-width: 45px;
				max-width: 60px;
			}

			.quantity-input input {
				height: 28px !important;
				font-size: 12px !important;
				padding: 4px 5px !important;
			}

			.empty-cart {
				padding: 40px 15px;
			}

			.empty-icon {
				font-size: 3rem;
			}

			.dialog-action-btn {
				padding: 10px 12px;
				font-size: 13px;
				min-height: 44px;
			}

			.action-icon {
				font-size: 14px;
			}

			.summary-card {
				padding: 15px;
			}

			.tax-grid {
				gap: 15px;
			}

			.info-card {
				padding: 12px;
			}

			.info-text {
				font-size: 13px;
			}

			.edit-button {
				width: 24px;
				height: 24px;
			}

			.edit-icon {
				font-size: 8px;
			}
		}

		@@media (max-width: 400px) {
			.clear-button, .confirm-button {
				padding: 10px 12px;
				font-size: 12px;
				min-width: 80px;
				min-height: 40px;
				gap: 2px;
			}

			.quantity-input input {
				height: 24px !important;
				font-size: 10px !important;
				padding: 3px 4px !important;
			}

			.dialog-action-btn {
				padding: 8px 10px;
				font-size: 12px;
				min-height: 40px;
			}

			.action-icon {
				font-size: 12px;
			}

			.edit-button {
				width: 20px;
				height: 20px;
			}

			.edit-icon {
				font-size: 6px;
			}
		}

		/* Touch-friendly targets for mobile devices */
		@@media (hover: none) and (pointer: coarse) {
			.clear-button, .confirm-button {
				min-height: 48px;
				padding: 12px 20px;
			}

			.quantity-input input {
				min-height: 36px !important;
			}

			.back-button {
				min-width: 48px;
				min-height: 48px;
			}

			.continue-shopping-btn {
				min-height: 48px;
				padding: 15px 30px;
			}

			.dialog-action-btn {
				min-height: 48px;
				padding: 12px 16px;
			}

			.detail-action-button {
				min-height: 60px;
			}

			.edit-button {
				width: 40px;
				height: 40px;
			}
		}
	</style>
}