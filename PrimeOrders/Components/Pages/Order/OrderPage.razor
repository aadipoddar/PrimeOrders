@page "/Order"
@page "/Order/{OrderId:int}"

<PageTitle>Place Order - Prime Orders</PageTitle>

<SfToast @ref="_sfErrorToast"
		 ID="toast_error"
		 Title="Error"
		 Content="Some Error Message"
		 Timeout="3000"
		 ShowCloseButton="true"
		 CssClass="e-toast-danger">
	<ToastPosition X="Right" Y="Top" />
	<ToastAnimationSettings>
		<ToastShowAnimationSettings Effect="ToastEffect.SlideRightIn" Duration="600" Easing="ToastEasing.Linear" />
		<ToastHideAnimationSettings Effect="ToastEffect.SlideRightOut" Duration="600" Easing="ToastEasing.Linear" />
	</ToastAnimationSettings>
</SfToast>

<SfToast @ref="_sfSuccessToast"
		 ID="toast_success"
		 Title="Success"
		 Content="Order Placed successfully."
		 Timeout="1000"
		 ShowCloseButton="true"
		 CssClass="e-toast-success">
	<ToastPosition X="Right" Y="Top" />
	<ToastEvents Closed='() => NavManager.NavigateTo("/Order", forceLoad: true)' />
	<ToastAnimationSettings>
		<ToastShowAnimationSettings Effect="ToastEffect.SlideRightIn" Duration="600" Easing="ToastEasing.Linear" />
		<ToastHideAnimationSettings Effect="ToastEffect.SlideRightOut" Duration="600" Easing="ToastEasing.Linear" />
	</ToastAnimationSettings>
</SfToast>

@if (_isLoading)
{
	<div class="loader-container">
		<div class="circular-dots-loader">
			<span class="dot dot-1"></span>
			<span class="dot dot-2"></span>
			<span class="dot dot-3"></span>
		</div>
		<p class="loading-text">Loading order page...</p>
	</div>
}
else
{
	<div class="purchase-container" tabindex="0">
		<!-- Product Search Indicator -->
		<div id="productSearchIndicator" class="product-search-indicator" style="display: none;">
			<div class="search-header">
				<span class="search-icon">🔍</span>
				<span>Product Search: </span>
				<span id="searchText" class="search-text"></span>
			</div>
			<div id="searchResults" class="search-results"></div>
			<div class="search-help">
				<span>↑↓ Navigate • Enter Select • Esc Cancel</span>
			</div>
		</div>

		<div class="page-header">
			<h1 class="page-title">Order Management</h1>
			<button @onclick='() => NavManager.NavigateTo("/")' class="back-button" disabled="@_isSaving">
				<span class="back-icon">←</span> Back to Dashboard
			</button>
		</div>

		<div class="action-buttons">
			<button @onclick="() => _orderDetailsDialogVisible = true" class="action-button" disabled="@_isSaving">
				<span class="action-icon">📄</span> Order Details
			</button>
			<button @onclick="() => _orderSummaryDialogVisible = true" class="action-button action-button-primary" disabled="@_isSaving">
				<span class="action-icon">📊</span> @(_isSaving ? "Saving..." : "Save")
			</button>
		</div>

		<div class="main-content">
			<div class="card products-card">
				<div class="card-header">
					<h2>Products Selection</h2>
					<p class="card-info">Press <kbd>F2</kbd> to search products, click Add to Cart or row to add to cart</p>
				</div>
				<div class="card-body">
					<SfGrid DataSource="@(_isProductSearchActive? _filteredProducts : _products)"
							ID="_sfProductGrid"
							@ref="_sfProductGrid"
							AllowSorting="true"
							AllowResizing="true"
							AllowPaging="true"
							AllowFiltering="true"
							Height="450px"
							CssClass="modern-products-grid">
						<GridPageSettings PageSize="7" />
						<GridColumns>
							<GridColumn Field=@nameof(ProductModel.Name) Width="100%" />
							<GridColumn AllowFiltering="false" />
						</GridColumns>
						<GridTemplates>
							<RowTemplate>
								@{
									var product = (context as ProductModel);
									var isSelected = _isProductSearchActive && product?.Id == _selectedProduct.Id;
								}
								<tr class="product-row @(isSelected ? "selected-product-row" : "")">
									<td class="product-name">
										<div class="name-wrapper">
											<span class="name-text" title="@product?.Name">@product?.Name</span>
										</div>
									</td>
									<td class="product-action">
										<button class="add-to-cart-btn"
												@onclick="() => OnAddToCartButtonClick(product)"
												@onclick:stopPropagation="true"
												disabled="@_isSaving"
												title="Add to Cart">
											<span class="cart-icon">🛒</span>
											<span class="cart-text">Add</span>
										</button>
									</td>
								</tr>
							</RowTemplate>
						</GridTemplates>
					</SfGrid>
				</div>
			</div>

			<div class="card cart-card">
				<div class="card-header">
					<h2>Order Cart</h2>
					<p class="card-info">Click on a row to edit details</p>
				</div>
				<div class="card-body">
					<SfGrid DataSource="@_orderProductCarts"
							ID="_sfProductCartGrid"
							@ref="_sfProductCartGrid"
							AllowSorting="true"
							AllowFiltering="true"
							AllowResizing="true"
							Height="450px"
							CssClass="cart-grid">
						<GridEvents RowSelected="ProductCartRowSelectHandler" TValue="OrderProductCartModel" />
						<GridColumns>
							<GridColumn Field=@nameof(OrderProductCartModel.ProductName) HeaderText="Product" Width="200" />
							<GridColumn Field=@nameof(OrderProductCartModel.Quantity) HeaderText="Qty" Width="150" TextAlign="TextAlign.Right" />
						</GridColumns>
					</SfGrid>
				</div>
			</div>
		</div>

		<div class="dashboard-footer">
			<p>&copy; @DateTime.Now.Year A Product By <a href="https://aadisoft.vercel.app" target="_blank" class="footer-link">AadiSoft</a>. All rights reserved.</p>
		</div>
	</div>
}

<!-- Order Details Dialog -->
<SfDialog ID="_sfOrderDetailsDialog"
		  @ref="_sfOrderDetailsDialog"
		  Width="500px"
		  Height="auto"
		  AllowDragging="true"
		  EnableResize="false"
		  @bind-Visible="_orderDetailsDialogVisible"
		  IsModal="true">
	<DialogPositionData X="Center" Y="Center" />
	<DialogTemplates>
		<Header>
			<div class="dialog-header">
				<span>Order Details</span>
			</div>
		</Header>
		<Content>
			<div class="dialog-content">
				<div class="form-group">
					<label>Order Number</label>
					<SfTextBox Value="@_order.OrderNo"
							   Placeholder="Order Number"
							   Readonly=true
							   CssClass="form-control" />
				</div>

				<div class="form-group">
					<label>Order Date</label>
					<SfDatePicker @bind-Value="_order.OrderDateTime"
								  Placeholder="Select Order Date"
								  CssClass="form-control" />
				</div>

				@if (_user.Admin && _user.LocationId == 1)
				{
					<div class="form-group">
						<label>Outlet / Franchise</label>
						<SfComboBox TValue="int"
									TItem="LocationModel"
									Placeholder="Select a Outlet / Franchise"
									DataSource="_locations"
									CssClass="form-control"
									@bind-Value="_order.LocationId">
							<ComboBoxFieldSettings Value="Id" Text="Name" />
						</SfComboBox>
					</div>
				}

				<div class="form-group full-width">
					<label>Remarks</label>
					<SfTextBox @bind-Value="_order.Remarks"
							   Placeholder="Add remarks (optional)"
							   Multiline="true"
							   CssClass="form-control" />
				</div>

				@if (OrderId.HasValue && OrderId > 0)
				{
					<div class="form-group">
						<div class="status-checkbox-container">
							<SfCheckBox @bind-Checked="_order.Status" Label="Active Status" CssClass="status-checkbox" />
						</div>
					</div>
				}
			</div>
		</Content>
		<FooterTemplate>
			<div class="dialog-footer">
				<SfButton Content="Close" OnClick="() => _orderDetailsDialogVisible = false" CssClass="dialog-button" Disabled="@_isSaving" />
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<!-- Order Summary Dialog -->
<SfDialog ID="_sfOrderSummaryDialog"
		  @ref="_sfOrderSummaryDialog"
		  Width="600px"
		  Height="auto"
		  AllowDragging="true"
		  EnableResize="false"
		  @bind-Visible="_orderSummaryDialogVisible"
		  IsModal="true">
	<DialogPositionData X="Center" Y="Center" />
	<DialogTemplates>
		<Header>
			<div class="dialog-header">
				<span>Order Summary</span>
			</div>
		</Header>
		<Content>
			<div class="dialog-content">
				<div class="confirm-section">
					<h3>Order Details</h3>
					<div class="detail-item">
						<span class="detail-label">Order Number:</span>
						<span class="detail-value">@_order.OrderNo</span>
					</div>
					<div class="detail-item">
						<span class="detail-label">Order Date:</span>
						<span class="detail-value">@_order.OrderDateTime.ToShortDateString()</span>
					</div>
					@if (_order.LocationId > 0 && _locations.Any(l => l.Id == _order.LocationId))
					{
						<div class="detail-item">
							<span class="detail-label">Outlet / Franchise:</span>
							<span class="detail-value">@_locations.First(l => l.Id == _order.LocationId).Name</span>
						</div>
					}
					@if (!string.IsNullOrEmpty(_order.Remarks))
					{
						<div class="detail-item remarks">
							<span class="detail-label">Remarks:</span>
							<span class="detail-value">@_order.Remarks</span>
						</div>
					}
				</div>

				<div class="confirm-section">
					<h3>Products</h3>
					<div class="products-table-container">
						<table class="products-table">
							<thead>
								<tr>
									<th>Product</th>
									<th>Quantity</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var item in _orderProductCarts)
								{
									<tr>
										<td>@item.ProductName</td>
										<td class="qty-column">@item.Quantity</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>

				<div class="confirm-message">
					<p>Are you sure you want to submit this order?</p>
				</div>
			</div>
		</Content>
		<FooterTemplate>
			<div class="dialog-footer">
				<div class="footer-buttons">
					<SfButton Content="@(_isSaving ? "Saving..." : "Submit Order")" IsPrimary="true" OnClick="ConfirmOrderSubmission" CssClass="save-button-dialog" Disabled="@_isSaving" />
					<SfButton CssClass="print-button-dialog" Content="@(_isSaving ? "Saving..." : "Submit & Print Invoice")" OnClick="OnSaveAndPrintClick" Disabled="@_isSaving">
						<div class="button-content">
							<span class="print-icon">🖨️</span>
							<span>@(_isSaving ? "Saving..." : "Submit & Print Invoice")</span>
						</div>
					</SfButton>
					<SfButton Content="Edit Order" OnClick="() => _orderSummaryDialogVisible = false" CssClass="dialog-button" Disabled="@_isSaving" />
				</div>
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<!-- Quantity Dialog -->
<SfDialog ID="_sfQuantityDialog"
		  @ref="_sfQuantityDialog"
		  Width="350px"
		  Height="auto"
		  AllowDragging="true"
		  EnableResize="false"
		  @bind-Visible="_quantityDialogVisible"
		  IsModal="true">
	<DialogPositionData X="Center" Y="Center" />
	<DialogTemplates>
		<Header>
			<div class="dialog-header">
				<span>Select Quantity: </span>
				<span class="material-name">@_selectedProduct.Name</span>
			</div>
		</Header>
		<Content>
			<div class="dialog-content">
				<div class="form-row">
					<div class="form-group full-width">
						<label>Quantity</label>
						<SfNumericTextBox TValue="decimal"
										  @bind-Value="_selectedQuantity"
										  Min="0"
										  Format="N2"
										  CssClass="form-control" />
					</div>
				</div>
			</div>
		</Content>
		<FooterTemplate>
			<div class="dialog-footer">
				<div class="footer-buttons">
					<SfButton Content="Add to Cart" IsPrimary="true" OnClick="OnAddToCartClick" CssClass="dialog-button" Disabled="@_isSaving" />
					<SfButton Content="Cancel" OnClick="OnCancelQuantityDialogClick" CssClass="dialog-button" Disabled="@_isSaving" />
				</div>
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<!-- Product Manage Dialog -->
<SfDialog ID="_sfProductManageDialog"
		  @ref="_sfProductManageDialog"
		  Width="400px"
		  Height="auto"
		  AllowDragging="true"
		  EnableResize="true"
		  @bind-Visible="_dialogVisible"
		  IsModal="true">
	<DialogPositionData X="Center" Y="Center" />
	<DialogTemplates>
		<Header>
			<div class="dialog-header">
				<span>Manage Product: </span>
				<span class="material-name">@_selectedProductCart.ProductName</span>
			</div>
		</Header>

		<Content>
			<div class="dialog-content">
				<div class="form-row">
					<div class="form-group full-width">
						<label>Quantity</label>
						<SfNumericTextBox TValue="decimal"
										  @bind-Value="_selectedProductCart.Quantity"
										  Min="0"
										  Format="N2"
										  CssClass="form-control" />
					</div>
				</div>
			</div>
		</Content>

		<FooterTemplate>
			<div class="dialog-footer">
				<div class="footer-buttons">
					<SfButton Content="Save" IsPrimary="true" OnClick="OnSaveProductManageClick" CssClass="dialog-button" Disabled="@_isSaving" />
					<SfButton Content="Remove From Cart" OnClick="OnRemoveFromCartProductManageClick" CssClass="dialog-button remove-button" Disabled="@_isSaving" />
				</div>
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<style>
	:root {
		--dotnet-primary: #512BD4;
		--dotnet-secondary: #68217A;
		--dotnet-accent: #00A4EF;
		--dotnet-light: #F7F7F7;
		--dotnet-dark: #1E1E1E;
		--dotnet-border: rgba(0, 0, 0, 0.1);
		--product-grid-border: #e1e5e9;
		--product-grid-hover: rgba(81, 43, 212, 0.08);
		--product-grid-selected: var(--dotnet-primary);
	}

	/* Keyboard key styling */
	kbd {
		background-color: #f8f9fa;
		border: 1px solid #ced4da;
		border-radius: 3px;
		color: #495057;
		font-family: Monaco, Consolas, monospace;
		font-size: 10px;
		padding: 2px 4px;
		box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);
	}

	/* Product Search Indicator */
	.product-search-indicator {
		position: fixed;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		background: var(--dotnet-primary);
		color: white;
		padding: 20px;
		border-radius: 12px;
		box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
		z-index: 10000;
		min-width: 300px;
		text-align: center;
	}

	.search-header {
		font-size: 18px;
		font-weight: 600;
		margin-bottom: 10px;
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 8px;
	}

	.search-icon {
		font-size: 20px;
	}

	.search-text {
		background: rgba(255, 255, 255, 0.2);
		padding: 4px 8px;
		border-radius: 4px;
		min-width: 100px;
		display: inline-block;
		margin-left: 8px;
	}

	.search-results {
		font-size: 14px;
		opacity: 0.9;
		margin: 10px 0;
	}

	.search-help {
		font-size: 12px;
		opacity: 0.8;
		border-top: 1px solid rgba(255, 255, 255, 0.3);
		padding-top: 10px;
		margin-top: 10px;
	}

	/* Modern Products Grid Styling */
	.modern-products-grid {
		border-radius: 12px;
		overflow: hidden;
		box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
		border: 1px solid var(--product-grid-border);
	}

	#_sfProductGrid.e-grid .e-gridheader .e-columnheader {
		display: none;
	}

	/* Custom Row Template Styling */
	.product-row {
		transition: all 0.2s ease;
		border-bottom: 1px solid var(--product-grid-border);
		cursor: pointer;
	}

		.product-row:hover {
			background-color: var(--product-grid-hover);
			transform: translateY(-1px);
			box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
		}

		.product-row:last-child {
			border-bottom: none;
		}

	/* Selected product row highlighting */
	.selected-product-row {
		background: linear-gradient(135deg, var(--dotnet-primary) 0%, var(--dotnet-secondary) 100%) !important;
		color: white !important;
		font-weight: 600 !important;
		box-shadow: 0 4px 15px rgba(81, 43, 212, 0.3);
		transform: translateY(-2px);
	}

		.selected-product-row .code-badge {
			background-color: rgba(255, 255, 255, 0.2) !important;
			color: white !important;
			border-color: rgba(255, 255, 255, 0.3) !important;
		}

		.selected-product-row .name-text {
			color: white !important;
			font-weight: 700 !important;
		}

		.selected-product-row .add-to-cart-btn {
			background-color: rgba(255, 255, 255, 0.9) !important;
			color: var(--dotnet-primary) !important;
			border-color: rgba(255, 255, 255, 0.9) !important;
		}

			.selected-product-row .add-to-cart-btn:hover {
				background-color: white !important;
				transform: scale(1.1) !important;
			}

	/* Product Name Cell - Enhanced for better text display */
	.product-name {
		padding: 15px 12px;
		vertical-align: middle;
		width: auto;
		min-width: 300px;
	}

	.name-wrapper {
		display: flex;
		align-items: center;
		width: 100%;
		overflow: hidden;
	}

	.name-text {
		font-weight: 500;
		color: var(--dotnet-dark);
		font-size: 15px;
		line-height: 1.4;
		transition: all 0.2s ease;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		width: 100%;
	}

	.product-row:hover .name-text {
		color: var(--dotnet-primary);
		font-weight: 600;
		white-space: normal;
		overflow: visible;
		text-overflow: initial;
	}

	/* Product Action Cell */
	.product-action {
		padding: 15px 12px;
		vertical-align: middle;
		text-align: center;
		width: 120px;
	}

	.add-to-cart-btn {
		background-color: var(--dotnet-primary);
		color: white;
		border: 2px solid var(--dotnet-primary);
		padding: 8px 12px;
		border-radius: 8px;
		font-weight: 600;
		font-size: 12px;
		cursor: pointer;
		display: inline-flex;
		align-items: center;
		gap: 6px;
		transition: all 0.2s ease;
		white-space: nowrap;
		text-transform: uppercase;
		letter-spacing: 0.5px;
	}

		.add-to-cart-btn:hover:not(:disabled) {
			background-color: #4311a8;
			border-color: #4311a8;
			transform: scale(1.1);
			box-shadow: 0 4px 12px rgba(81, 43, 212, 0.3);
		}

		.add-to-cart-btn:active {
			transform: scale(0.95);
		}

		.add-to-cart-btn:disabled {
			background-color: #a583c3;
			border-color: #a583c3;
			cursor: not-allowed;
			transform: none;
			opacity: 0.6;
		}

	.cart-icon {
		font-size: 14px;
	}

	.cart-text {
		font-weight: 700;
	}

	/* Grid Pagination Styling */
	.modern-products-grid ::deep .e-grid .e-pager {
		background-color: var(--dotnet-light);
		border-top: 1px solid var(--product-grid-border);
		padding: 12px;
	}

		.modern-products-grid ::deep .e-grid .e-pager .e-pagercontainer {
			background-color: transparent;
		}

		.modern-products-grid ::deep .e-grid .e-pager .e-numericitem {
			border-radius: 6px;
			margin: 0 2px;
			font-weight: 500;
			transition: all 0.2s ease;
		}

		.modern-products-grid ::deep .e-grid .e-pager .e-currentitem {
			background-color: var(--dotnet-primary);
			color: white;
			font-weight: 600;
		}

	/* General Layout */
	.purchase-container {
		display: flex;
		flex-direction: column;
		min-height: 100vh;
		padding: 20px;
		background: linear-gradient(135deg, rgba(81, 43, 212, 0.05) 0%, rgba(104, 33, 122, 0.05) 100%);
	}

	/* Page Header */
	.page-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 20px;
	}

	.page-title {
		color: var(--dotnet-secondary);
		font-size: 28px;
		font-weight: 700;
		margin: 0;
	}

	.back-button {
		background-color: transparent;
		border: 2px solid var(--dotnet-secondary);
		color: var(--dotnet-secondary);
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: inline-flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
	}

		.back-button:hover:not(:disabled) {
			background-color: var(--dotnet-secondary);
			color: white;
		}

		.back-button:disabled {
			opacity: 0.6;
			cursor: not-allowed;
		}

	.back-icon {
		font-size: 16px;
	}

	/* Action Buttons */
	.action-buttons {
		display: flex;
		gap: 15px;
		margin-bottom: 25px;
		flex-wrap: wrap;
	}

	.action-button {
		background-color: white;
		border: none;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
		color: var(--dotnet-secondary);
		padding: 12px 20px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: inline-flex;
		align-items: center;
		gap: 10px;
		transition: all 0.2s ease;
		flex: 1;
		min-width: 150px;
		justify-content: center;
	}

		.action-button:hover:not(:disabled) {
			transform: translateY(-3px);
			box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
		}

		.action-button:disabled {
			opacity: 0.6;
			cursor: not-allowed;
			transform: none;
		}

	.action-icon {
		font-size: 18px;
	}

	.action-button-primary {
		background-color: var(--dotnet-primary);
		color: white;
	}

		.action-button-primary:hover:not(:disabled) {
			background-color: #4311a8;
		}

		.action-button-primary:disabled {
			background-color: #a583c3;
		}

	/* Main Content */
	.main-content {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 25px;
		margin-bottom: 30px;
	}

	/* Cards */
	.card {
		background-color: white;
		border-radius: 15px;
		box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
		overflow: hidden;
		height: 100%;
		display: flex;
		flex-direction: column;
	}

	.card-header {
		background-color: var(--dotnet-light);
		padding: 15px 20px;
		border-bottom: 1px solid var(--dotnet-border);
	}

		.card-header h2 {
			margin: 0;
			color: var(--dotnet-secondary);
			font-size: 20px;
			font-weight: 600;
		}

	.card-info {
		margin: 5px 0 0 0;
		color: #666;
		font-size: 14px;
		font-style: italic;
	}

	.card-body {
		padding: 20px;
		flex-grow: 1;
		display: flex;
		flex-direction: column;
	}

	/* Cart Grid - keep existing styling */
	.cart-grid {
		border-radius: 8px;
		overflow: hidden;
		flex-grow: 1;
	}

		.cart-grid ::deep .e-grid .e-gridheader,
		.cart-grid ::deep .e-grid .e-gridheader {
			padding: 0;
			border-top: none;
		}

		.cart-grid ::deep .e-grid .e-rowcell {
			padding: 6px 8px;
			height: 36px;
		}

		.cart-grid ::deep .e-grid .e-headercell {
			padding: 8px 8px;
			height: 40px;
		}

		.cart-grid ::deep .e-grid .e-pager {
			padding: 4px;
		}

	/* Forms */
	.form-grid {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 15px;
	}

	.form-group {
		margin-bottom: 15px;
	}

	.full-width {
		grid-column: 1 / -1;
	}

	label {
		display: block;
		margin-bottom: 8px;
		font-weight: 500;
		color: var(--dotnet-dark);
	}

	.form-control {
		width: 100%;
		border-radius: 6px;
	}

	/* Button Styling */
	.save-button-dialog {
		background-color: var(--dotnet-primary);
		color: white;
		padding: 10px 20px;
		border-radius: 8px;
		font-weight: 600;
		transition: all 0.2s ease;
	}

		.save-button-dialog:hover:not(:disabled) {
			background-color: #4311a8;
		}

		.save-button-dialog:disabled {
			background-color: #a583c3;
			cursor: not-allowed;
		}

	/* Remove Button Styling */
	.remove-button {
		background-color: #f44336;
		color: white;
		border: none;
		transition: all 0.2s ease;
	}

		.remove-button:hover:not(:disabled) {
			background-color: #d32f2f;
		}

		.remove-button:disabled {
			background-color: #f5c6cb;
			cursor: not-allowed;
		}

	/* Dialog Styling */
	.dialog-header {
		font-size: 20px;
		font-weight: 600;
		color: var(--dotnet-secondary);
		display: flex;
		align-items: center;
		gap: 8px;
	}

	.material-name {
		color: var(--dotnet-primary);
		font-weight: 700;
	}

	.dialog-content {
		padding: 20px;
	}

	.form-row {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 20px;
		margin-bottom: 15px;
	}

	/* Dialog Footer */
	.dialog-footer {
		display: flex;
		justify-content: flex-end;
		align-items: center;
		padding: 15px 20px;
		background-color: var(--dotnet-light);
		border-top: 1px solid var(--dotnet-border);
	}

	.footer-buttons {
		display: flex;
		gap: 10px;
	}

	/* Dialog buttons */
	.dialog-button {
		border-radius: 6px;
		padding: 8px 16px;
		height: 38px;
		display: flex;
		align-items: center;
		justify-content: center;
		font-weight: 500;
	}

	/* Print Button Styling */
	.print-button-dialog {
		background-color: #17a2b8;
		color: white;
		padding: 10px 20px;
		border-radius: 8px;
		font-weight: 600;
		transition: all 0.2s ease;
		display: flex;
		align-items: center;
		justify-content: center;
	}

		.print-button-dialog:hover:not(:disabled) {
			background-color: #138496;
			transform: translateY(-2px);
			box-shadow: 0 4px 12px rgba(23, 162, 184, 0.3);
		}

		.print-button-dialog:disabled {
			background-color: #7cc4d1;
			cursor: not-allowed;
			transform: none;
		}

	.print-icon {
		margin-right: 6px;
		font-size: 18px;
	}

	/* Order Confirmation styles */
	.confirm-section {
		border-bottom: 1px solid var(--dotnet-border);
		padding-bottom: 15px;
		margin-bottom: 20px;
	}

		.confirm-section:last-child {
			border-bottom: none;
		}

		.confirm-section h3 {
			margin: 0 0 12px 0;
			color: var(--dotnet-secondary);
			font-size: 18px;
			font-weight: 600;
		}

	.detail-item {
		display: flex;
		margin-bottom: 8px;
	}

	.detail-label {
		font-weight: 600;
		min-width: 120px;
		color: var(--dotnet-dark);
	}

	.detail-value {
		color: #333;
	}

	.remarks .detail-value {
		font-style: italic;
	}

	.products-table-container {
		max-height: 200px;
		overflow-y: auto;
		margin: 10px 0;
		border-radius: 6px;
		border: 1px solid var(--dotnet-border);
	}

	.products-table {
		width: 100%;
		border-collapse: collapse;
	}

		.products-table th {
			background-color: var(--dotnet-light);
			padding: 10px;
			text-align: left;
			position: sticky;
			top: 0;
			z-index: 1;
			border-bottom: 1px solid var(--dotnet-border);
		}

		.products-table td {
			padding: 8px 10px;
			border-bottom: 1px solid var(--dotnet-border);
		}

		.products-table tr:last-child td {
			border-bottom: none;
		}

	.qty-column {
		text-align: right;
	}

	.confirm-message {
		background-color: #f9f0ff;
		border-left: 4px solid var(--dotnet-primary);
		padding: 10px 15px;
		margin: 10px 0;
		border-radius: 4px;
	}

		.confirm-message p {
			margin: 0;
			color: var(--dotnet-secondary);
			font-weight: 500;
		}

	/* Footer */
	.dashboard-footer {
		margin-top: auto;
		text-align: center;
		padding: 20px;
		color: #666;
		font-size: 14px;
	}

	.footer-link {
		color: var(--dotnet-primary);
		text-decoration: none;
		font-weight: 600;
		transition: color 0.2s ease;
	}

		.footer-link:hover {
			color: var(--dotnet-secondary);
			text-decoration: underline;
		}

	/* Loading Animation */
	.loader-container {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		height: 100vh;
	}

	.circular-dots-loader {
		position: relative;
		width: 60px;
		height: 60px;
		margin-bottom: 15px;
	}

		.circular-dots-loader .dot {
			position: absolute;
			width: 12px;
			height: 12px;
			border-radius: 50%;
			animation: rotate 1.5s infinite linear;
		}

		.circular-dots-loader .dot-1 {
			background-color: var(--dotnet-primary);
			animation-delay: 0s;
		}

		.circular-dots-loader .dot-2 {
			background-color: var(--dotnet-accent);
			animation-delay: -0.5s;
		}

		.circular-dots-loader .dot-3 {
			background-color: var(--dotnet-secondary);
			animation-delay: -1s;
		}

	.loading-text {
		color: var(--dotnet-dark);
		font-size: 16px;
		margin-top: 10px;
	}

	/* Animations */
	@@keyframes rotate {
		0% {
			transform: rotate(0deg) translate(-24px) rotate(0deg);
		}

		100% {
			transform: rotate(360deg) translate(-24px) rotate(-360deg);
		}
	}

	/* Responsive Design */
	@@media (max-width: 992px) {
		.main-content {
			grid-template-columns: 1fr;
		}

		.action-buttons {
			flex-direction: row;
		}

		.action-button {
			flex-basis: calc(50% - 10px);
		}
	}

	@@media (max-width: 768px) {
		.page-header {
			flex-direction: column;
			gap: 15px;
			align-items: flex-start;
		}

		.form-row {
			grid-template-columns: 1fr;
		}

		.action-button {
			flex-basis: 100%;
		}
	}

	/* Status Checkbox Styling */
	.status-checkbox-container {
		display: flex;
		align-items: center;
		margin: 5px 0;
	}

	::deep .status-checkbox .e-frame {
		border-color: var(--dotnet-primary);
	}

	::deep .status-checkbox .e-check {
		color: white;
	}

	::deep .status-checkbox .e-label {
		font-weight: 500;
		color: var(--dotnet-dark);
		margin-left: 8px;
	}

	/* Toast Styling */
	::deep .e-toast-container {
		z-index: 1000;
	}

		::deep .e-toast-container .e-toast {
			border: 0;
			border-radius: 8px;
			box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
		}

	/* Success Toast */
	::deep .e-toast-success {
		background-color: #ebf7ee;
		border-left: 4px solid #4CAF50;
		color: #2E7D32;
	}

		::deep .e-toast-success .e-toast-title {
			color: #2E7D32;
			font-weight: 700;
		}

		::deep .e-toast-success .e-toast-content {
			color: #2E7D32;
		}

		::deep .e-toast-success .e-toast-close-icon {
			color: #2E7D32;
		}

		::deep .e-toast-success::before {
			content: "✓";
			font-size: 18px;
			font-weight: bold;
			position: absolute;
			left: 15px;
			top: 50%;
			transform: translateY(-50%);
		}

	/* Error Toast */
	::deep .e-toast-danger {
		background-color: #fdeeee;
		border-left: 4px solid #F44336;
		color: #C62828;
	}

		::deep .e-toast-danger .e-toast-title {
			color: #C62828;
			font-weight: 700;
		}

		::deep .e-toast-danger .e-toast-content {
			color: #C62828;
		}

		::deep .e-toast-danger .e-toast-close-icon {
			color: #C62828;
		}

		::deep .e-toast-danger::before {
			content: "⚠";
			font-size: 18px;
			font-weight: bold;
			position: absolute;
			left: 15px;
			top: 50%;
			transform: translateY(-50%);
		}

	/* Toast Animation */
	::deep .e-toast-container .e-toast {
		padding: 10px 10px 10px 40px;
		position: relative;
		animation-fill-mode: both;
	}

	/* Focus styles for better keyboard navigation */
	.purchase-container:focus {
		outline: 2px solid var(--dotnet-primary);
		outline-offset: 2px;
	}

	/* Enhanced grid row hover and selection for cart grid */
	.cart-grid ::deep .e-grid .e-row:hover {
		background-color: rgba(81, 43, 212, 0.1);
	}

	.cart-grid ::deep .e-grid .e-rowselect {
		background-color: var(--dotnet-primary);
		color: white;
	}
</style>