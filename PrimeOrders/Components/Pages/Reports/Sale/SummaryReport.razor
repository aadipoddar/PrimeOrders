@page "/Reports/Summary"
@using PrimeOrdersLibrary.Data.Common

<PageTitle>Summary Report - Prime Orders</PageTitle>

@if (_isLoading)
{
	<div class="loader-container">
		<div class="circular-dots-loader">
			<span class="dot dot-1"></span>
			<span class="dot dot-2"></span>
			<span class="dot dot-3"></span>
		</div>
		<p class="loading-text">Loading summary report...</p>
	</div>
}
else
{
	<div class="dashboard-container">
		<div class="dashboard-header">
			<div class="logo-section">
				<img src="images/order.gif" alt="Prime Orders Logo" class="dashboard-logo" />
				<h1 class="dashboard-title">Prime Orders</h1>
			</div>
			<div class="user-info">
				<span class="user-name">@_user?.Name</span>
				<button @onclick="async () => await AuthService.Logout(JS, NavManager)" class="logout-button">
					<span class="logout-icon">⟲</span> Logout
				</button>
			</div>
		</div>

		<div class="welcome-section">
			<h2>Summary Report</h2>
			<p>View and analyze overall business performance metrics</p>
			<button @onclick='() => NavManager.NavigateTo("/Report-Dashboard")' class="back-button">
				<span class="back-icon">←</span> Back to Reports
			</button>
		</div>

		<div class="date-filter-section">
			<SfDateRangePicker Placeholder="Select date range"
							   FloatLabelType='@FloatLabelType.Auto'
							   StartDate="_startDate"
							   EndDate="_endDate"
							   Width="250px">
				<DateRangePickerEvents TValue="DateOnly" ValueChange="DateRangeChanged" />
			</SfDateRangePicker>

			<div class="action-buttons">
				<SfButton CssClass="export-button" IconCss="export-icon" Content="Export PDF" OnClick="@(() => ExportReport())" />
				<SfButton CssClass="detailed-button" IconCss="detailed-icon" Content="Detailed Report" OnClick="@(() => NavManager.NavigateTo("/Reports/Detailed"))" />
			</div>
		</div>

		<div class="overview-cards">
			<div class="overview-card total-sales">
				<div class="card-icon">📈</div>
				<div class="card-content">
					<h3>Total Sales</h3>
					<p class="amount">@_saleOverviews.Sum(_ => _.Total).FormatIndianCurrency()</p>
				</div>
			</div>

			<div class="overview-card total-tax">
				<div class="card-icon">💰</div>
				<div class="card-content">
					<h3>Total Tax</h3>
					<p class="amount">@_saleOverviews.Sum(_ => _.TotalTaxAmount).FormatIndianCurrency()</p>
				</div>
			</div>

			<div class="overview-card total-discount">
				<div class="card-icon">🏷️</div>
				<div class="card-content">
					<h3>Total Discount</h3>
					<p class="amount">@_saleOverviews.Sum(_ => _.DiscountAmount).FormatIndianCurrency()</p>
				</div>
			</div>

			<div class="overview-card total-products">
				<div class="card-icon">📦</div>
				<div class="card-content">
					<h3>Products Sold</h3>
					<p class="amount">@_saleOverviews.Sum(_ => _.TotalProducts)</p>
				</div>
			</div>
		</div>

		<div class="chart-grid">
			<div class="chart-card">
				<h3 class="chart-title">Payment Methods</h3>
				<SfAccumulationChart Title="Payment Distribution" EnableSmartLabels="true" Height="300px">
					<AccumulationChartSeriesCollection>
						<AccumulationChartSeries DataSource="@GetPaymentMethodsData()" XName="PaymentMethod"
												 YName="Amount" Name="Payment"
												 InnerRadius="40%" LegendShape="LegendShape.Circle">
							<AccumulationDataLabelSettings Visible="true" Name="PaymentMethod"
														   Position="AccumulationLabelPosition.Outside" />
							<AccumulationChartAnimation Enable="true"></AccumulationChartAnimation>
						</AccumulationChartSeries>
					</AccumulationChartSeriesCollection>
					<AccumulationChartLegendSettings Visible="true" Position="LegendPosition.Right" />
					<AccumulationChartTooltipSettings Enable="true" Format="${point.y} - ${point.percentage}%" />
				</SfAccumulationChart>
			</div>

			<div class="chart-card">
				<h3 class="chart-title">Sales by Location</h3>
				<SfChart Height="300px">
					<ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"
									   Title="Locations"></ChartPrimaryXAxis>
					<ChartPrimaryYAxis Title="Amount (₹)" LabelFormat="{value}"></ChartPrimaryYAxis>
					<ChartTooltipSettings Enable="true"></ChartTooltipSettings>
					<ChartSeriesCollection>
						<ChartSeries DataSource="@GetLocationSalesData()"
									 XName="LocationName" YName="Amount" Type="ChartSeriesType.Column"
									 Name="Sales" Fill="#512BD4">
						</ChartSeries>
					</ChartSeriesCollection>
				</SfChart>
			</div>
		</div>

		<div class="location-reports">
			<h2 class="section-title">Location-wise Reports</h2>
			<SfAccordion>
				<AccordionItems>
					@foreach (var location in _locations)
					{
						<AccordionItem>
							<HeaderTemplate>
								<div class="accordion-header improved">
									<div class="header-left">
										<span class="location-name">@location.Name</span>
									</div>
									<div class="header-center">
										<span class="location-amount">@(_saleOverviews.Where(_ => _.LocationId == location.Id).Sum(_ => _.Total).FormatIndianCurrency())</span>
									</div>
									<div class="header-right">
										<SfButton CssClass="detail-button" OnClick='() => NavManager.NavigateTo($"/Reports/Detailed/{location.Id}")' Content="Details" />
									</div>
								</div>
							</HeaderTemplate>

							<ContentTemplate>
								<div class="location-details improved">
									<div class="detail-section">
										<h4 class="section-subtitle">Financial Summary</h4>
										<div class="stats-group uniform">
											<div class="stat-item highlighted">
												<label>Amount Collected:</label>
												<div class="stat-value">@(_saleOverviews.Where(_ => _.LocationId == location.Id).Sum(_ => _.Total).FormatIndianCurrency())</div>
											</div>
											<div class="stat-item">
												<label>Base Total:</label>
												<div class="stat-value">@(_saleOverviews.Where(_ => _.LocationId == location.Id).Sum(_ => _.BaseTotal).FormatIndianCurrency())</div>
											</div>
										</div>

										<h4 class="section-subtitle">Payment Methods</h4>
										<div class="stats-group uniform payment-methods">
											<div class="stat-item cash">
												<label>Cash:</label>
												<div class="stat-value">@(_saleOverviews.Where(_ => _.LocationId == location.Id).Sum(_ => _.Cash).FormatIndianCurrency())</div>
											</div>
											<div class="stat-item card">
												<label>Card:</label>
												<div class="stat-value">@(_saleOverviews.Where(_ => _.LocationId == location.Id).Sum(_ => _.Card).FormatIndianCurrency())</div>
											</div>
											<div class="stat-item upi">
												<label>UPI:</label>
												<div class="stat-value">@(_saleOverviews.Where(_ => _.LocationId == location.Id).Sum(_ => _.UPI).FormatIndianCurrency())</div>
											</div>
											<div class="stat-item credit">
												<label>Credit:</label>
												<div class="stat-value">@(_saleOverviews.Where(_ => _.LocationId == location.Id).Sum(_ => _.Credit).FormatIndianCurrency())</div>
											</div>
										</div>

										<h4 class="section-subtitle">Tax & Discounts</h4>
										<div class="stats-group uniform">
											<div class="stat-item discount">
												<label>Discount:</label>
												<div class="stat-value">@(_saleOverviews.Where(_ => _.LocationId == location.Id).Sum(_ => _.DiscountAmount).FormatIndianCurrency())</div>
											</div>
											<div class="stat-item tax">
												<label>Total Tax:</label>
												<div class="stat-value">@(_saleOverviews.Where(_ => _.LocationId == location.Id).Sum(_ => _.TotalTaxAmount).FormatIndianCurrency())</div>
											</div>
										</div>

										<div class="stats-group uniform tax-breakdown">
											<div class="stat-item sgst">
												<label>SGST:</label>
												<div class="stat-value">@(_saleOverviews.Where(_ => _.LocationId == location.Id).Sum(_ => _.SGSTAmount).FormatIndianCurrency())</div>
											</div>
											<div class="stat-item cgst">
												<label>CGST:</label>
												<div class="stat-value">@(_saleOverviews.Where(_ => _.LocationId == location.Id).Sum(_ => _.CGSTAmount).FormatIndianCurrency())</div>
											</div>
											<div class="stat-item igst">
												<label>IGST:</label>
												<div class="stat-value">@(_saleOverviews.Where(_ => _.LocationId == location.Id).Sum(_ => _.IGSTAmount).FormatIndianCurrency())</div>
											</div>
										</div>

										<h4 class="section-subtitle">Products Information</h4>
										<div class="stats-group uniform">
											<div class="stat-item">
												<label>Products Count:</label>
												<div class="stat-value">@(_saleOverviews.Where(_ => _.LocationId == location.Id).Sum(_ => _.TotalProducts))</div>
											</div>
											<div class="stat-item">
												<label>Total Quantity:</label>
												<div class="stat-value">@(_saleOverviews.Where(_ => _.LocationId == location.Id).Sum(_ => _.TotalQuantity))</div>
											</div>
										</div>
									</div>

									<div class="location-chart-container">
										<h4 class="section-subtitle">Payment Distribution</h4>
										<div class="location-chart">
											<SfAccumulationChart Height="250px">
												<AccumulationChartSeriesCollection>
													<AccumulationChartSeries DataSource="@GetLocationPaymentData(location.Id)" XName="PaymentMethod"
																			 YName="Amount" Name="Payment"
																			 InnerRadius="40%" LegendShape="LegendShape.Circle">
														<AccumulationDataLabelSettings Visible="true" Name="PaymentMethod" />
													</AccumulationChartSeries>
												</AccumulationChartSeriesCollection>
												<AccumulationChartTooltipSettings Enable="true" />
											</SfAccumulationChart>
										</div>
									</div>
								</div>
							</ContentTemplate>
						</AccordionItem>
					}
				</AccordionItems>
			</SfAccordion>
		</div>

		<div class="grand-total-section">
			<h2 class="section-title">Grand Total</h2>
			<SfAccordion>
				<AccordionItems>
					<AccordionItem>
						<HeaderTemplate>
							<div class="accordion-header improved grand-total">
								<div class="header-left">
									<span class="total-label">Grand Total</span>
								</div>
								<div class="header-center">
									<span class="total-amount">@(_saleOverviews.Sum(_ => _.Total).FormatIndianCurrency())</span>
								</div>
								<div class="header-right">
									<SfButton CssClass="print-button" IconCss="print-icon" Content="Print PDF" OnClick="@(() => ExportReport())" />
								</div>
							</div>
						</HeaderTemplate>

						<ContentTemplate>
							<div class="detail-section">
								<h4 class="section-subtitle">Financial Summary</h4>
								<div class="stats-group uniform">
									<div class="stat-item highlighted">
										<label>Amount Collected:</label>
										<div class="stat-value">@(_saleOverviews.Sum(_ => _.Total).FormatIndianCurrency())</div>
									</div>
								</div>

								<h4 class="section-subtitle">Payment Methods</h4>
								<div class="stats-group uniform payment-methods">
									<div class="stat-item cash">
										<label>Cash:</label>
										<div class="stat-value">@(_saleOverviews.Sum(_ => _.Cash).FormatIndianCurrency())</div>
									</div>
									<div class="stat-item card">
										<label>Card:</label>
										<div class="stat-value">@(_saleOverviews.Sum(_ => _.Card).FormatIndianCurrency())</div>
									</div>
									<div class="stat-item upi">
										<label>UPI:</label>
										<div class="stat-value">@(_saleOverviews.Sum(_ => _.UPI).FormatIndianCurrency())</div>
									</div>
									<div class="stat-item credit">
										<label>Credit:</label>
										<div class="stat-value">@(_saleOverviews.Sum(_ => _.Credit).FormatIndianCurrency())</div>
									</div>
								</div>

								<h4 class="section-subtitle">Tax & Discounts</h4>
								<div class="stats-group uniform">
									<div class="stat-item discount">
										<label>Discount:</label>
										<div class="stat-value">@(_saleOverviews.Sum(_ => _.DiscountAmount).FormatIndianCurrency())</div>
									</div>
									<div class="stat-item tax">
										<label>Total Tax:</label>
										<div class="stat-value">@(_saleOverviews.Sum(_ => _.TotalTaxAmount).FormatIndianCurrency())</div>
									</div>
								</div>

								<div class="stats-group uniform tax-breakdown">
									<div class="stat-item sgst">
										<label>SGST:</label>
										<div class="stat-value">@(_saleOverviews.Sum(_ => _.SGSTAmount).FormatIndianCurrency())</div>
									</div>
									<div class="stat-item cgst">
										<label>CGST:</label>
										<div class="stat-value">@(_saleOverviews.Sum(_ => _.CGSTAmount).FormatIndianCurrency())</div>
									</div>
									<div class="stat-item igst">
										<label>IGST:</label>
										<div class="stat-value">@(_saleOverviews.Sum(_ => _.IGSTAmount).FormatIndianCurrency())</div>
									</div>
								</div>

								<h4 class="section-subtitle">Products Information</h4>
								<div class="stats-group uniform">
									<div class="stat-item">
										<label>Products Count:</label>
										<div class="stat-value">@(_saleOverviews.Sum(_ => _.TotalProducts))</div>
									</div>
									<div class="stat-item">
										<label>Total Quantity:</label>
										<div class="stat-value">@(_saleOverviews.Sum(_ => _.TotalQuantity))</div>
									</div>
								</div>
							</div>
						</ContentTemplate>
					</AccordionItem>
				</AccordionItems>
			</SfAccordion>
		</div>

		<div class="dashboard-footer">
			<p>&copy; @DateTime.Now.Year A Product By <a href="https://aadisoft.vercel.app" target="_blank" class="footer-link">AadiSoft</a>. All rights reserved.</p>
		</div>
	</div>
}

<style>
	:root {
		--dotnet-primary: #512BD4;
		--dotnet-secondary: #68217A;
		--dotnet-accent: #00A4EF;
		--dotnet-light: #F7F7F7;
		--dotnet-dark: #1E1E1E;
		--dotnet-border: #E0E0E0;
		--cash-color: #28a745;
		--card-color: #fd7e14;
		--upi-color: #dc3545;
		--credit-color: #6610f2;
		--discount-color: #20c997;
		--tax-color: #6c757d;
	}

	/* General Layout */
	.dashboard-container {
		display: flex;
		flex-direction: column;
		min-height: 100vh;
		padding: 20px;
		background: linear-gradient(135deg, rgba(81, 43, 212, 0.05) 0%, rgba(104, 33, 122, 0.05) 100%);
		gap: 25px;
	}

	/* Header Styles */
	.dashboard-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 10px 20px;
		background-color: white;
		border-radius: 15px;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
		margin-bottom: 10px;
	}

	.logo-section {
		display: flex;
		align-items: center;
	}

	.dashboard-logo {
		width: 50px;
		height: 50px;
		border-radius: 50%;
		margin-right: 15px;
	}

	.dashboard-title {
		color: var(--dotnet-primary);
		font-size: 24px;
		font-weight: 700;
		margin: 0;
	}

	.user-info {
		display: flex;
		align-items: center;
		gap: 15px;
	}

	.user-name {
		font-weight: 600;
		color: var(--dotnet-secondary);
	}

	.logout-button {
		background-color: transparent;
		border: 2px solid var(--dotnet-primary);
		color: var(--dotnet-primary);
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
	}

		.logout-button:hover {
			background-color: var(--dotnet-primary);
			color: white;
		}

	.logout-icon {
		font-size: 16px;
	}

	/* Welcome Section */
	.welcome-section {
		text-align: center;
		margin-bottom: 20px;
	}

		.welcome-section h2 {
			color: var(--dotnet-secondary);
			margin-bottom: 10px;
		}

		.welcome-section p {
			color: var(--dotnet-dark);
			opacity: 0.7;
		}

	/* Back button styles */
	.back-button {
		background-color: transparent;
		border: 2px solid var(--dotnet-secondary);
		color: var(--dotnet-secondary);
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: inline-flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
		margin-top: 15px;
	}

		.back-button:hover {
			background-color: var(--dotnet-secondary);
			color: white;
		}

	.back-icon {
		font-size: 16px;
	}

	/* Date filter section */
	.date-filter-section {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 15px 20px;
		background-color: white;
		border-radius: 15px;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
		margin-bottom: 20px;
	}

	.action-buttons {
		display: flex;
		gap: 10px;
	}

	.export-button {
		background-color: var(--dotnet-secondary);
		color: white;
		border: none;
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
	}

		.export-button:hover {
			background-color: #571b6c;
			transform: translateY(-2px);
		}

	.detailed-button {
		background-color: var(--dotnet-primary);
		color: white;
		border: none;
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
	}

		.detailed-button:hover {
			background-color: #4311a8;
			transform: translateY(-2px);
		}

	.export-icon, .detailed-icon {
		font-size: 16px;
	}

	/* Overview Cards */
	.overview-cards {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
		gap: 20px;
		margin-bottom: 10px;
	}

	.overview-card {
		display: flex;
		align-items: center;
		background-color: white;
		border-radius: 12px;
		padding: 20px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
		gap: 15px;
		transition: transform 0.2s ease, box-shadow 0.2s ease;
		height: 120px;
	}

		.overview-card:hover {
			transform: translateY(-3px);
			box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
		}

	.card-icon {
		font-size: 30px;
		width: 60px;
		height: 60px;
		min-width: 60px; /* Prevent icon from shrinking */
		display: flex;
		align-items: center;
		justify-content: center;
		border-radius: 50%;
		background-color: rgba(81, 43, 212, 0.1);
	}

	.total-sales .card-icon {
		background-color: rgba(0, 164, 239, 0.1);
		color: var(--dotnet-accent);
	}

	.total-tax .card-icon {
		background-color: rgba(104, 33, 122, 0.1);
		color: var(--dotnet-secondary);
	}

	.total-discount .card-icon {
		background-color: rgba(220, 53, 69, 0.1);
		color: #dc3545;
	}

	.total-products .card-icon {
		background-color: rgba(40, 167, 69, 0.1);
		color: #28a745;
	}

	.card-content {
		width: 100%;
		overflow: hidden; /* Prevent text overflow */
	}

		.card-content h3 {
			margin: 0 0 5px 0;
			font-size: 16px;
			color: #666;
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
		}

	.amount {
		font-size: 24px;
		font-weight: bold;
		color: var(--dotnet-dark);
		margin: 0;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	/* Chart Grid */
	.chart-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
		gap: 25px;
		margin-bottom: 10px;
	}

	.chart-card {
		background-color: white;
		border-radius: 12px;
		padding: 20px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
		height: 360px; /* Fixed height for uniformity */
	}

	.chart-title {
		color: var(--dotnet-secondary);
		margin-top: 0;
		margin-bottom: 15px;
		font-size: 18px;
		font-weight: 600;
	}

	/* Location Reports */
	.location-reports, .grand-total-section {
		background-color: white;
		border-radius: 12px;
		padding: 20px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
	}

	.section-title {
		color: var(--dotnet-secondary);
		margin-top: 0;
		margin-bottom: 15px;
		font-size: 20px;
		font-weight: 600;
	}

	.section-subtitle {
		color: var(--dotnet-secondary);
		margin: 20px 0 10px 0;
		font-size: 16px;
		font-weight: 600;
		border-bottom: 1px solid var(--dotnet-border);
		padding-bottom: 8px;
	}

	/* Improved Accordion Header */
	.accordion-header.improved {
		display: grid;
		grid-template-columns: 1fr auto 1fr;
		align-items: center;
		width: 100%;
		padding: 12px 15px;
		background-color: rgba(81, 43, 212, 0.03);
		border-radius: 8px;
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
	}

	.header-left {
		text-align: left;
	}

	.header-center {
		display: flex;
		justify-content: center;
		padding: 0 20px;
	}

	.header-right {
		text-align: right;
	}

	.location-name {
		font-weight: 600;
		font-size: 16px;
		color: var(--dotnet-secondary);
		display: inline-block;
		padding: 6px 12px;
		background-color: rgba(104, 33, 122, 0.1);
		border-radius: 4px;
	}

	.location-amount {
		font-weight: 700;
		font-size: 18px;
		color: var(--dotnet-primary);
		padding: 5px 15px;
		background-color: rgba(81, 43, 212, 0.1);
		border-radius: 20px;
		display: inline-block;
	}

	.detail-button {
		background-color: var(--dotnet-accent);
		color: white;
		border: none;
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: flex;
		align-items: center;
		justify-content: center;
		transition: all 0.2s ease;
	}

		.detail-button:hover {
			background-color: #0078d4;
			transform: translateY(-2px);
		}

	.print-button {
		background-color: var(--dotnet-primary);
		color: white;
		border: none;
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: flex;
		align-items: center;
		justify-content: center;
		transition: all 0.2s ease;
	}

		.print-button:hover {
			background-color: #4311a8;
			transform: translateY(-2px);
		}

	/* Improved Location Details */
	.location-details.improved {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 30px;
		padding: 15px 10px;
	}

	.detail-section {
		padding: 15px;
	}

	/* Uniform sizing for stats groups */
	.stats-group {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
		gap: 15px;
		margin-bottom: 20px;
	}

		/* Uniform stats group with fixed sizes */
		.stats-group.uniform {
			display: grid;
			grid-auto-rows: minmax(100px, auto); /* Set minimum row height */
		}

	.payment-methods {
		grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
	}

	.tax-breakdown {
		grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
	}

	/* Uniform stat items */
	.stat-item {
		padding: 15px;
		background-color: var(--dotnet-light);
		border-radius: 8px;
		transition: transform 0.15s ease, box-shadow 0.15s ease;
		box-shadow: 0 2px 5px rgba(0,0,0,0.05);
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		height: 100px; /* Fixed height for uniformity */
		overflow: hidden; /* Prevent content overflow */
	}

		.stat-item:hover {
			transform: translateY(-2px);
			box-shadow: 0 4px 8px rgba(0,0,0,0.1);
		}

		.stat-item.highlighted {
			background-color: rgba(81, 43, 212, 0.1);
			border-left: 3px solid var(--dotnet-primary);
		}

		.stat-item.cash {
			background-color: rgba(40, 167, 69, 0.1);
			border-left: 3px solid var(--cash-color);
		}

		.stat-item.card {
			background-color: rgba(253, 126, 20, 0.1);
			border-left: 3px solid var(--card-color);
		}

		.stat-item.upi {
			background-color: rgba(220, 53, 69, 0.1);
			border-left: 3px solid var(--upi-color);
		}

		.stat-item.credit {
			background-color: rgba(102, 16, 242, 0.1);
			border-left: 3px solid var(--credit-color);
		}

		.stat-item.discount {
			background-color: rgba(32, 201, 151, 0.1);
			border-left: 3px solid var(--discount-color);
		}

		.stat-item.tax, .stat-item.sgst, .stat-item.cgst, .stat-item.igst {
			background-color: rgba(108, 117, 125, 0.1);
			border-left: 3px solid var(--tax-color);
		}

		.stat-item label {
			font-size: 13px;
			color: #666;
			margin-bottom: 5px;
			display: block;
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
		}

	.stat-value {
		font-size: 16px;
		font-weight: 600;
		color: var(--dotnet-dark);
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	.location-chart-container {
		padding: 15px;
		display: flex;
		flex-direction: column;
	}

	.location-chart {
		flex-grow: 1;
		min-height: 250px; /* Ensure chart has minimum height */
	}

	/* Grand Total */
	.grand-total {
		background-color: rgba(81, 43, 212, 0.05);
		border-radius: 8px;
	}

	.total-label {
		font-size: 18px;
		font-weight: 700;
		color: var(--dotnet-secondary);
		display: inline-block;
		padding: 6px 12px;
		background-color: rgba(104, 33, 122, 0.1);
		border-radius: 4px;
	}

	.total-amount {
		font-size: 20px;
		font-weight: 700;
		color: var(--dotnet-primary);
		padding: 5px 15px;
		background-color: rgba(81, 43, 212, 0.1);
		border-radius: 20px;
		display: inline-block;
	}

	/* Footer */
	.dashboard-footer {
		margin-top: auto;
		text-align: center;
		padding: 20px;
		color: #666;
		font-size: 14px;
	}

	.footer-link {
		color: var(--dotnet-primary);
		text-decoration: none;
		font-weight: 600;
		transition: color 0.2s ease;
	}

		.footer-link:hover {
			color: var(--dotnet-secondary);
			text-decoration: underline;
		}

	/* Loading Animation */
	.loader-container {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		height: 100vh;
	}

	.circular-dots-loader {
		position: relative;
		width: 60px;
		height: 60px;
		margin-bottom: 15px;
	}

		.circular-dots-loader .dot {
			position: absolute;
			width: 12px;
			height: 12px;
			border-radius: 50%;
			animation: rotate 1.5s infinite linear;
		}

		.circular-dots-loader .dot-1 {
			background-color: var(--dotnet-primary);
			animation-delay: 0s;
		}

		.circular-dots-loader .dot-2 {
			background-color: var(--dotnet-accent);
			animation-delay: -0.5s;
		}

		.circular-dots-loader .dot-3 {
			background-color: var(--dotnet-secondary);
			animation-delay: -1s;
		}

	.loading-text {
		color: var(--dotnet-dark);
		font-size: 16px;
		margin-top: 10px;
	}

	/* Animations */
	@@keyframes rotate {
		0% {
			transform: rotate(0deg) translate(-24px) rotate(0deg);
		}

		100% {
			transform: rotate(360deg) translate(-24px) rotate(-360deg);
		}
	}

	/* Responsive Design */
	@@media (max-width: 992px) {
		.chart-grid {
			grid-template-columns: 1fr;
		}

		.location-details.improved {
			grid-template-columns: 1fr;
		}
	}

	@@media (max-width: 768px) {
		.dashboard-header, .date-filter-section {
			flex-direction: column;
			gap: 15px;
			align-items: stretch;
		}

		.date-filter-section {
			padding: 15px;
		}

		.action-buttons {
			display: flex;
			justify-content: space-between;
		}

		.accordion-header.improved {
			grid-template-columns: 1fr;
			gap: 10px;
		}

		.header-left, .header-center, .header-right {
			text-align: center;
		}
		/* Adjust to single column on mobile */
		.stats-group, .stats-group.uniform, .payment-methods, .tax-breakdown {
			grid-template-columns: 1fr;
		}
		/* Maintain box height on mobile */
		.overview-card {
			height: auto;
			min-height: 120px;
		}

		.chart-card {
			height: auto;
			min-height: 360px;
		}

		.stat-item {
			height: auto;
			min-height: 100px;
		}
	}
</style>