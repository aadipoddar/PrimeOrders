@page "/Reports/SaleReturn"

<PageTitle>Sale Return Report - Prime Orders</PageTitle>

@if (_isLoading)
{
	<div class="loader-container">
		<div class="circular-dots-loader">
			<span class="dot dot-1"></span>
			<span class="dot dot-2"></span>
			<span class="dot dot-3"></span>
		</div>
		<p class="loading-text">Loading sale return details...</p>
	</div>
}
else
{
	<div class="dashboard-container">
		<div class="dashboard-header">
			<div class="logo-section">
				<img src="images/order.gif" alt="Prime Orders Logo" class="dashboard-logo" />
				<h1 class="dashboard-title">Prime Orders</h1>
			</div>
			<div class="user-info">
				<span class="user-name">@_user?.Name</span>
				<button @onclick="async () => await AuthService.Logout(JS, NavManager)" class="logout-button">
					<span class="logout-icon">⟲</span> Logout
				</button>
			</div>
		</div>

		<div class="welcome-section">
			<h2>Sale Return Report</h2>
			<p>Track and analyze product returns and refund activities</p>
			<button @onclick='() => NavManager.NavigateTo("/Report-Dashboard")' class="back-button">
				<span class="back-icon">←</span> Back to Reports
			</button>
		</div>

		<div class="filter-section">
			<div class="filters">
				<div class="filter-item">
					<label>Date Range</label>
					<SfDateRangePicker Placeholder="Select date range"
									   FloatLabelType='@FloatLabelType.Auto'
									   StartDate="_startDate"
									   EndDate="_endDate"
									   Width="250px"
									   CssClass="filter-control">
						<DateRangePickerEvents TValue="DateOnly" ValueChange="DateRangeChanged" />
					</SfDateRangePicker>
				</div>

				@if (_user.LocationId == 1)
				{
					<div class="filter-item">
						<label>Location</label>
						<SfComboBox TValue="int"
									TItem="LocationModel"
									FloatLabelType='@FloatLabelType.Auto'
									Placeholder="Select a Location"
									DataSource="_locations"
									@bind-Value="_selectedLocationId"
									CssClass="filter-control">
							<ComboBoxEvents TItem="LocationModel" TValue="int" ValueChange="OnLocationChanged" />
							<ComboBoxFieldSettings Value="Id" Text="Name" />
						</SfComboBox>
					</div>
				}
			</div>
			<div class="action-buttons">
				<SfButton CssClass="excel-button" OnClick="@(() => ExportToExcel())">
					<div class="button-content">
						<img src="images/excel.png" alt="Excel" class="excel-icon" />
						<span>Export Excel</span>
					</div>
				</SfButton>
			</div>
		</div>

		<div class="overview-cards">
			<div class="overview-card total-sales">
				<div class="card-icon">📋</div>
				<div class="card-content">
					<h3>Total Returns</h3>
					<p class="amount">@_saleReturnOverviews.Count</p>
				</div>
			</div>

			<div class="overview-card total-quantity">
				<div class="card-icon">📦</div>
				<div class="card-content">
					<h3>Total Products</h3>
					<p class="amount">@_saleReturnOverviews.Sum(_ => _.TotalProducts)</p>
				</div>
			</div>

			<div class="overview-card total-discount">
				<div class="card-icon">🔄</div>
				<div class="card-content">
					<h3>Total Quantity</h3>
					<p class="amount">@_saleReturnOverviews.Sum(_ => _.TotalQuantity)</p>
				</div>
			</div>

			<div class="overview-card total-transactions">
				<div class="card-icon">🏪</div>
				<div class="card-content">
					<h3>Locations Active</h3>
					<p class="amount">@_saleReturnOverviews.Select(_ => _.LocationId).Distinct().Count()</p>
				</div>
			</div>
		</div>

		<div class="chart-grid">
			<div class="chart-card">
				<h3 class="chart-title">Returns by Location</h3>
				<SfChart Height="300px">
					<ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"
									   Title="Location"></ChartPrimaryXAxis>
					<ChartPrimaryYAxis Title="Quantity" LabelFormat="{value}"></ChartPrimaryYAxis>
					<ChartTooltipSettings Enable="true"></ChartTooltipSettings>
					<ChartSeriesCollection>
						<ChartSeries DataSource="GetLocationWiseData()"
									 XName="LocationName" YName="TotalQuantity" Type="ChartSeriesType.Column"
									 Name="Total Quantity" Fill="#dc3545">
						</ChartSeries>
					</ChartSeriesCollection>
				</SfChart>
			</div>

			<div class="chart-card">
				<h3 class="chart-title">Return Distribution</h3>
				<SfAccumulationChart Title="Returns by Location" EnableSmartLabels="true" Height="300px">
					<AccumulationChartSeriesCollection>
						<AccumulationChartSeries DataSource="GetLocationWiseData()" XName="LocationName"
												 YName="TotalQuantity" Name="Returns"
												 InnerRadius="40%" LegendShape="LegendShape.Circle">
							<AccumulationDataLabelSettings Visible="true" Name="LocationName"
														   Position="AccumulationLabelPosition.Outside" />
							<AccumulationChartAnimation Enable="true"></AccumulationChartAnimation>
						</AccumulationChartSeries>
					</AccumulationChartSeriesCollection>
					<AccumulationChartLegendSettings Visible="true" Position="LegendPosition.Right" />
					<AccumulationChartTooltipSettings Enable="true" Format="${point.y} - ${point.percentage}%" />
				</SfAccumulationChart>
			</div>
		</div>

		<div class="detailed-grid-card">
			<div class="card-header">
				<h3 class="chart-title">Sale Return Details</h3>
				<p class="card-info">Click on a row to view detailed summary</p>
			</div>
			<div class="card-body">
				<SfGrid ID="_sfGrid"
						@ref="_sfGrid"
						DataSource="_saleReturnOverviews"
						AllowSorting="true"
						AllowFiltering="true"
						AllowResizing="true"
						AllowPaging="true"
						AllowExcelExport="true"
						AllowPdfExport="true">
					<GridPageSettings PageSize="10"></GridPageSettings>
					<GridEvents RowSelected="OnRowSelected" TValue="SaleReturnOverviewModel" />
					<GridColumns>
						<GridColumn Field="@nameof(SaleReturnOverviewModel.TransactionNo)" HeaderText="Transaction #" Width="130" />
						<GridColumn Field="@nameof(SaleReturnOverviewModel.LocationName)" HeaderText="Location" Width="150" />
						<GridColumn Field="@nameof(SaleReturnOverviewModel.ReturnDateTime)" HeaderText="Return Date" Width="130" Format="dd/MM/yyyy" />
						<GridColumn Field="@nameof(SaleReturnOverviewModel.UserName)" HeaderText="Processed By" Width="140" />
						<GridColumn Field="@nameof(SaleReturnOverviewModel.OriginalBillNo)" HeaderText="Original Bill" Width="120" />
						<GridColumn Field="@nameof(SaleReturnOverviewModel.TotalProducts)" HeaderText="Products" Width="100" TextAlign="TextAlign.Right" />
						<GridColumn Field="@nameof(SaleReturnOverviewModel.TotalQuantity)" HeaderText="Total Qty" Width="110" TextAlign="TextAlign.Right" />
					</GridColumns>
				</SfGrid>
			</div>
		</div>

		<div class="chart-grid">
			<div class="chart-card">
				<h3 class="chart-title">Daily Return Trend</h3>
				<SfChart Height="300px">
					<ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"
									   Title="Date"></ChartPrimaryXAxis>
					<ChartPrimaryYAxis Title="Quantity" LabelFormat="{value}"></ChartPrimaryYAxis>
					<ChartTooltipSettings Enable="true"></ChartTooltipSettings>
					<ChartSeriesCollection>
						<ChartSeries DataSource="@GetDailyReturnData()"
									 XName="Date" YName="TotalQuantity" Type="ChartSeriesType.Line"
									 Name="Quantity" Fill="#dc3545">
							<ChartMarker Visible="true">
								<ChartBorder Width="2" Color="#dc3545"></ChartBorder>
							</ChartMarker>
						</ChartSeries>
					</ChartSeriesCollection>
				</SfChart>
			</div>

			<div class="chart-card">
				<h3 class="chart-title">Return Category Distribution</h3>
				<SfChart Height="300px">
					<ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"
									   Title="Categories"></ChartPrimaryXAxis>
					<ChartPrimaryYAxis Title="Return Count" LabelFormat="{value}"></ChartPrimaryYAxis>
					<ChartTooltipSettings Enable="true"></ChartTooltipSettings>
					<ChartSeriesCollection>
						<ChartSeries DataSource="@GetProductCategoryData()"
									 XName="CategoryName" YName="ProductCount" Type="ChartSeriesType.Column"
									 Name="Returns" Fill="#c82333">
						</ChartSeries>
					</ChartSeriesCollection>
				</SfChart>
			</div>
		</div>

		<!-- Location-wise Returns Section -->
		<div class="location-reports">
			<h2 class="section-title">Location-wise Return Analysis</h2>
			<SfAccordion>
				<AccordionItems>
					@foreach (var locationGroup in GetLocationGroups())
					{
						<AccordionItem>
							<HeaderTemplate>
								<div class="accordion-header improved">
									<div class="header-left">
										<span class="location-name">@locationGroup.LocationName</span>
									</div>
									<div class="header-center">
										<span class="location-amount">@locationGroup.TotalReturns Returns</span>
									</div>
									<div class="header-right">
										<SfButton CssClass="detail-button" OnClick='() => FilterByLocation(locationGroup.LocationId)' Content="Filter" />
									</div>
								</div>
							</HeaderTemplate>

							<ContentTemplate>
								<div class="location-details improved">
									<div class="detail-section">
										<h4 class="section-subtitle">Return Summary</h4>
										<div class="stats-group uniform">
											<div class="stat-item highlighted">
												<label>Total Returns:</label>
												<div class="stat-value">@locationGroup.TotalReturns</div>
											</div>
											<div class="stat-item">
												<label>Total Products:</label>
												<div class="stat-value">@locationGroup.TotalProducts</div>
											</div>
											<div class="stat-item">
												<label>Total Quantity:</label>
												<div class="stat-value">@locationGroup.TotalQuantity.ToString("N2")</div>
											</div>
											<div class="stat-item">
												<label>Avg. Products per Return:</label>
												<div class="stat-value">@(locationGroup.TotalReturns > 0 ? (locationGroup.TotalProducts / locationGroup.TotalReturns).ToString("N1") : "0")</div>
											</div>
										</div>

										<h4 class="section-subtitle">Return Trends</h4>
										<div class="stats-group uniform">
											<div class="stat-item">
												<label>Most Active Day:</label>
												<div class="stat-value">@GetMostActiveDay(locationGroup.LocationId)</div>
											</div>
											<div class="stat-item">
												<label>Latest Return:</label>
												<div class="stat-value">@GetLatestReturnDate(locationGroup.LocationId)</div>
											</div>
											<div class="stat-item">
												<label>Return Rate:</label>
												<div class="stat-value">@GetReturnRate(locationGroup.LocationId)</div>
											</div>
											<div class="stat-item">
												<label>Processing Staff:</label>
												<div class="stat-value">@GetStaffCount(locationGroup.LocationId)</div>
											</div>
										</div>
									</div>

									<div class="location-chart-container">
										<h4 class="section-subtitle">Daily Returns for @locationGroup.LocationName</h4>
										<div class="location-chart">
											<SfChart Height="250px">
												<ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Title="Date"></ChartPrimaryXAxis>
												<ChartPrimaryYAxis Title="Quantity"></ChartPrimaryYAxis>
												<ChartTooltipSettings Enable="true"></ChartTooltipSettings>
												<ChartSeriesCollection>
													<ChartSeries DataSource="@GetLocationDailyData(locationGroup.LocationId)" 
																 XName="Date" YName="TotalQuantity" Type="ChartSeriesType.Line"
																 Name="Returns" Fill="#dc3545">
														<ChartMarker Visible="true"></ChartMarker>
													</ChartSeries>
												</ChartSeriesCollection>
											</SfChart>
										</div>
									</div>
								</div>
							</ContentTemplate>
						</AccordionItem>
					}
				</AccordionItems>
			</SfAccordion>
		</div>

		<div class="dashboard-footer">
			<p>&copy; @DateTime.Now.Year A Product By <a href="https://aadisoft.vercel.app" target="_blank" class="footer-link">AadiSoft</a>. All rights reserved.</p>
		</div>
	</div>
}

<!-- Sale Return Summary Module -->
<SaleReturnSummaryModule IsVisible="_saleReturnSummaryVisible"
						 IsVisibleChanged="OnSaleReturnSummaryVisibilityChanged"
						 SelectedSaleReturn="_selectedSaleReturn"
						 SaleReturnDetails="_selectedSaleReturnDetails"
						 CurrentUser="_user" />

<style>
	:root {
		--dotnet-primary: #512BD4;
		--dotnet-secondary: #68217A;
		--dotnet-accent: #00A4EF;
		--dotnet-light: #F7F7F7;
		--dotnet-dark: #1E1E1E;
		--dotnet-border: #E0E0E0;
		--return-primary: #dc3545;
		--return-secondary: #c82333;
		--excel-color: #217346;
	}

	/* General Layout */
	.dashboard-container {
		display: flex;
		flex-direction: column;
		min-height: 100vh;
		padding: 20px;
		background: linear-gradient(135deg, rgba(220, 53, 69, 0.05) 0%, rgba(200, 35, 51, 0.05) 100%);
		gap: 25px;
	}

	/* Header Styles */
	.dashboard-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 10px 20px;
		background-color: white;
		border-radius: 15px;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
		margin-bottom: 10px;
	}

	.logo-section {
		display: flex;
		align-items: center;
	}

	.dashboard-logo {
		width: 50px;
		height: 50px;
		border-radius: 50%;
		margin-right: 15px;
	}

	.dashboard-title {
		color: var(--dotnet-primary);
		font-size: 24px;
		font-weight: 700;
		margin: 0;
	}

	.user-info {
		display: flex;
		align-items: center;
		gap: 15px;
	}

	.user-name {
		font-weight: 600;
		color: var(--dotnet-secondary);
	}

	.logout-button {
		background-color: transparent;
		border: 2px solid var(--dotnet-primary);
		color: var(--dotnet-primary);
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
	}

		.logout-button:hover {
			background-color: var(--dotnet-primary);
			color: white;
		}

	.logout-icon {
		font-size: 16px;
	}

	/* Welcome Section */
	.welcome-section {
		text-align: center;
		margin-bottom: 20px;
	}

		.welcome-section h2 {
			color: var(--return-secondary);
			margin-bottom: 10px;
		}

		.welcome-section p {
			color: var(--dotnet-dark);
			opacity: 0.7;
		}

	/* Back button styles */
	.back-button {
		background-color: transparent;
		border: 2px solid var(--return-secondary);
		color: var(--return-secondary);
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: inline-flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
		margin-top: 15px;
	}

		.back-button:hover {
			background-color: var(--return-secondary);
			color: white;
		}

	.back-icon {
		font-size: 16px;
	}

	/* Filter section */
	.filter-section {
		display: flex;
		justify-content: space-between;
		align-items: flex-end;
		padding: 15px 20px;
		background-color: white;
		border-radius: 15px;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
		margin-bottom: 20px;
	}

	.filters {
		display: flex;
		gap: 20px;
		flex-wrap: wrap;
	}

	.filter-item {
		display: flex;
		flex-direction: column;
		gap: 5px;
	}

		.filter-item label {
			font-weight: 600;
			color: var(--return-secondary);
			font-size: 14px;
		}

	.filter-control {
		min-width: 200px;
	}

	.action-buttons {
		display: flex;
		gap: 10px;
	}

	.excel-icon {
		width: 16px;
		height: 16px;
	}

	.excel-button {
		background-color: var(--excel-color);
		color: white;
		border: none;
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
	}

		.excel-button:hover {
			background-color: #1e5f3e;
			transform: translateY(-2px);
		}

	.button-content {
		display: flex;
		align-items: center;
		gap: 8px;
	}

	.excel-icon {
		width: 16px;
		height: 16px;
	}

	.export-icon {
		font-size: 16px;
	}

	/* Overview Cards */
	.overview-cards {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
		gap: 20px;
		margin-bottom: 10px;
	}

	.overview-card {
		display: flex;
		align-items: center;
		background-color: white;
		border-radius: 12px;
		padding: 20px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
		gap: 15px;
		transition: transform 0.2s ease, box-shadow 0.2s ease;
		height: 120px;
	}

		.overview-card:hover {
			transform: translateY(-3px);
			box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
		}

	.card-icon {
		font-size: 30px;
		width: 60px;
		height: 60px;
		min-width: 60px; /* Prevent icon from shrinking */
		display: flex;
		align-items: center;
		justify-content: center;
		border-radius: 50%;
		background-color: rgba(220, 53, 69, 0.1);
		color: var(--return-primary);
	}

	.total-sales .card-icon {
		background-color: rgba(220, 53, 69, 0.1);
		color: var(--return-primary);
	}

	.total-quantity .card-icon {
		background-color: rgba(220, 53, 69, 0.1);
		color: var(--return-secondary);
	}

	.total-discount .card-icon {
		background-color: rgba(220, 53, 69, 0.1);
		color: var(--return-primary);
	}

	.total-transactions .card-icon {
		background-color: rgba(220, 53, 69, 0.1);
		color: var(--return-secondary);
	}

	.card-content {
		width: 100%;
		overflow: hidden; /* Prevent text overflow */
	}

		.card-content h3 {
			margin: 0 0 5px 0;
			font-size: 16px;
			color: #666;
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
		}

	.amount {
		font-size: 24px;
		font-weight: bold;
		color: var(--dotnet-dark);
		margin: 0;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	/* Detailed Grid */
	.detailed-grid-card {
		background-color: white;
		border-radius: 12px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
		overflow: hidden;
		margin-bottom: 25px;
	}

	.card-header {
		background-color: var(--dotnet-light);
		padding: 15px 20px;
		border-bottom: 1px solid var(--dotnet-border);
	}

		.card-header h3 {
			margin: 0;
			color: var(--return-secondary);
			font-size: 18px;
			font-weight: 600;
		}

	.card-info {
		margin: 5px 0 0 0;
		color: #666;
		font-size: 14px;
		font-style: italic;
	}

	.card-body {
		padding: 20px;
	}

	/* Chart Grid */
	.chart-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
		gap: 25px;
		margin-bottom: 10px;
	}

	.chart-card {
		background-color: white;
		border-radius: 12px;
		padding: 20px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
		height: 360px; /* Fixed height for uniformity */
	}

	.chart-title {
		color: var(--return-secondary);
		margin-top: 0;
		margin-bottom: 15px;
		font-size: 18px;
		font-weight: 600;
	}

	/* Location Reports */
	.location-reports {
		background-color: white;
		border-radius: 12px;
		padding: 20px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
	}

	.section-title {
		color: var(--return-secondary);
		margin-top: 0;
		margin-bottom: 15px;
		font-size: 20px;
		font-weight: 600;
	}

	.section-subtitle {
		color: var(--return-secondary);
		margin: 20px 0 10px 0;
		font-size: 16px;
		font-weight: 600;
		border-bottom: 1px solid var(--dotnet-border);
		padding-bottom: 8px;
	}

	/* Improved Accordion Header */
	.accordion-header.improved {
		display: grid;
		grid-template-columns: 1fr auto 1fr;
		align-items: center;
		width: 100%;
		padding: 12px 15px;
		background-color: rgba(220, 53, 69, 0.03);
		border-radius: 8px;
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
	}

	.header-left {
		text-align: left;
	}

	.header-center {
		display: flex;
		justify-content: center;
		padding: 0 20px;
	}

	.header-right {
		text-align: right;
	}

	.location-name {
		font-weight: 600;
		font-size: 16px;
		color: var(--return-secondary);
		display: inline-block;
		padding: 6px 12px;
		background-color: rgba(200, 35, 51, 0.1);
		border-radius: 4px;
	}

	.location-amount {
		font-weight: 700;
		font-size: 18px;
		color: var(--return-primary);
		padding: 5px 15px;
		background-color: rgba(220, 53, 69, 0.1);
		border-radius: 20px;
		display: inline-block;
	}

	.detail-button {
		background-color: var(--dotnet-accent);
		color: white;
		border: none;
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: flex;
		align-items: center;
		justify-content: center;
		transition: all 0.2s ease;
	}

		.detail-button:hover {
			background-color: #0078d4;
			transform: translateY(-2px);
		}

	/* Improved Location Details */
	.location-details.improved {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 30px;
		padding: 15px 10px;
	}

	.detail-section {
		padding: 15px;
	}

	/* Uniform sizing for stats groups */
	.stats-group {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
		gap: 15px;
		margin-bottom: 20px;
	}

		/* Uniform stats group with fixed sizes */
		.stats-group.uniform {
			display: grid;
			grid-auto-rows: minmax(100px, auto); /* Set minimum row height */
		}

	/* Uniform stat items */
	.stat-item {
		padding: 15px;
		background-color: var(--dotnet-light);
		border-radius: 8px;
		transition: transform 0.15s ease, box-shadow 0.15s ease;
		box-shadow: 0 2px 5px rgba(0,0,0,0.05);
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		height: 100px; /* Fixed height for uniformity */
		overflow: hidden; /* Prevent content overflow */
	}

		.stat-item:hover {
			transform: translateY(-2px);
			box-shadow: 0 4px 8px rgba(0,0,0,0.1);
		}

		.stat-item.highlighted {
			background-color: rgba(220, 53, 69, 0.1);
			border-left: 3px solid var(--return-primary);
		}

		.stat-item label {
			font-size: 13px;
			color: #666;
			margin-bottom: 5px;
			display: block;
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
		}

	.stat-value {
		font-size: 16px;
		font-weight: 600;
		color: var(--dotnet-dark);
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	.location-chart-container {
		padding: 15px;
		display: flex;
		flex-direction: column;
	}

	.location-chart {
		flex-grow: 1;
		min-height: 250px; /* Ensure chart has minimum height */
	}

	/* Grid Actions */
	.grid-actions {
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.view-button {
		background-color: var(--dotnet-accent);
		color: white;
		border: none;
		padding: 6px 12px;
		border-radius: 4px;
		font-size: 13px;
		cursor: pointer;
		transition: all 0.2s ease;
	}

		.view-button:hover {
			background-color: #0078d4;
			transform: translateY(-2px);
		}

	/* Footer */
	.dashboard-footer {
		margin-top: auto;
		text-align: center;
		padding: 20px;
		color: #666;
		font-size: 14px;
	}

	.footer-link {
		color: var(--dotnet-primary);
		text-decoration: none;
		font-weight: 600;
		transition: color 0.2s ease;
	}

		.footer-link:hover {
			color: var(--dotnet-secondary);
			text-decoration: underline;
		}

	/* Loading Animation */
	.loader-container {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		height: 100vh;
	}

	.circular-dots-loader {
		position: relative;
		width: 60px;
		height: 60px;
		margin-bottom: 15px;
	}

		.circular-dots-loader .dot {
			position: absolute;
			width: 12px;
			height: 12px;
			border-radius: 50%;
			animation: rotate 1.5s infinite linear;
		}

		.circular-dots-loader .dot-1 {
			background-color: var(--return-primary);
			animation-delay: 0s;
		}

		.circular-dots-loader .dot-2 {
			background-color: var(--dotnet-accent);
			animation-delay: -0.5s;
		}

		.circular-dots-loader .dot-3 {
			background-color: var(--return-secondary);
			animation-delay: -1s;
		}

	.loading-text {
		color: var(--dotnet-dark);
		font-size: 16px;
		margin-top: 10px;
	}

	/* Dialog Styling */
	.dialog-header {
		font-size: 20px;
		font-weight: 600;
		color: var(--return-secondary);
		display: flex;
		align-items: center;
	}

	.dialog-content {
		padding: 20px;
	}

	.confirm-section {
		margin-bottom: 0;
	}

	/* Dialog Footer */
	.dialog-footer {
		display: flex;
		justify-content: flex-end;
		align-items: center;
		padding: 15px 20px;
		background-color: var(--dotnet-light);
		border-top: 1px solid var(--dotnet-border);
	}

	.footer-buttons {
		display: flex;
		gap: 10px;
	}

	/* Dialog buttons */
	.dialog-button {
		border-radius: 6px;
		padding: 8px 16px;
		height: 38px;
		display: flex;
		align-items: center;
		justify-content: center;
		font-weight: 500;
	}

	/* Animations */
	@@keyframes rotate {
		0% {
			transform: rotate(0deg) translate(-24px) rotate(0deg);
		}

		100% {
			transform: rotate(360deg) translate(-24px) rotate(-360deg);
		}
	}

	/* Syncfusion Custom Styling */
	::deep .e-grid {
		border-radius: 8px;
		border: none;
		overflow: hidden;
	}

		::deep .e-grid .e-headercell {
			background-color: var(--dotnet-light);
			color: var(--return-secondary);
			font-weight: 600;
		}

		::deep .e-grid .e-rowcell {
			padding: 12px 20px;
		}

	::deep .e-pager {
		padding: 10px;
		background-color: var(--dotnet-light);
	}

	/* Responsive Design */
	@@media (max-width: 992px) {
		.chart-grid {
			grid-template-columns: 1fr;
		}

		.chart-card {
			height: auto;
			min-height: 360px;
		}

		.location-details.improved {
			grid-template-columns: 1fr;
		}
	}

	@@media (max-width: 768px) {
		.dashboard-header, .filter-section {
			flex-direction: column;
			gap: 15px;
			align-items: stretch;
		}

		.filter-section {
			padding: 15px;
		}

		.filters {
			flex-direction: column;
			width: 100%;
		}

		.filter-item {
			width: 100%;
		}

		.filter-control {
			min-width: 100%;
			width: 100%;
		}

		.action-buttons {
			width: 100%;
			justify-content: space-between;
		}

		.accordion-header.improved {
			grid-template-columns: 1fr;
			gap: 10px;
		}

		.header-left, .header-center, .header-right {
			text-align: center;
		}
		/* Adjust to single column on mobile */
		.stats-group, .stats-group.uniform {
			grid-template-columns: 1fr;
		}
		/* Maintain box height on mobile */
		.overview-card {
			height: auto;
			min-height: 120px;
		}

		.chart-card {
			height: auto;
			min-height: 360px;
		}

		.stat-item {
			height: auto;
			min-height: 100px;
		}
	}
</style>