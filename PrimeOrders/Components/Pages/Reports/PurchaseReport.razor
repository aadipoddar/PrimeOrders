@page "/Reports/PurchaseReport"

<PageTitle>Purchase Report - Prime Orders</PageTitle>

<SfToast @ref="_sfErrorToast"
		 ID="toast_error"
		 Title="Error"
		 Content="Some Error Message"
		 Timeout="3000"
		 ShowCloseButton="true"
		 CssClass="e-toast-danger">
	<ToastPosition X="Right" Y="Top" />
	<ToastAnimationSettings>
		<ToastShowAnimationSettings Effect="ToastEffect.SlideRightIn" Duration="600" Easing="ToastEasing.Linear" />
		<ToastHideAnimationSettings Effect="ToastEffect.SlideRightOut" Duration="600" Easing="ToastEasing.Linear" />
	</ToastAnimationSettings>
</SfToast>

<SfToast @ref="_sfSuccessToast"
		 ID="toast_success"
		 Title="Success"
		 Content="Purchase deactivated successfully."
		 Timeout="3000"
		 ShowCloseButton="true"
		 CssClass="e-toast-success">
	<ToastPosition X="Right" Y="Top" />
	<ToastAnimationSettings>
		<ToastShowAnimationSettings Effect="ToastEffect.SlideRightIn" Duration="600" Easing="ToastEasing.Linear" />
		<ToastHideAnimationSettings Effect="ToastEffect.SlideRightOut" Duration="600" Easing="ToastEasing.Linear" />
	</ToastAnimationSettings>
</SfToast>

@if (_isLoading)
{
	<div class="loader-container">
		<div class="circular-dots-loader">
			<span class="dot dot-1"></span>
			<span class="dot dot-2"></span>
			<span class="dot dot-3"></span>
		</div>
		<p class="loading-text">Loading purchase report...</p>
	</div>
}
else
{
	<div class="dashboard-container">
		<div class="dashboard-header">
			<div class="logo-section">
				<img src="images/order.gif" alt="Prime Orders Logo" class="dashboard-logo" />
				<h1 class="dashboard-title">Prime Orders</h1>
			</div>
			<div class="user-info">
				<span class="user-name">@_user?.Name</span>
				<button @onclick="async () => await AuthService.Logout(JS, NavManager)" class="logout-button">
					<span class="logout-icon">⟲</span> Logout
				</button>
			</div>
		</div>

		<div class="welcome-section">
			<h2>Purchase Report</h2>
			<p>View and analyze procurement activities and expenditures</p>
			<button @onclick='() => NavManager.NavigateTo("/Report-Dashboard")' class="back-button">
				<span class="back-icon">←</span> Back to Reports
			</button>
		</div>

		<div class="filter-section">
			<div class="filters">
				<div class="filter-item">
					<label>Date Range</label>
					<SfDateRangePicker Placeholder="Select date range"
									   FloatLabelType='@FloatLabelType.Auto'
									   StartDate="_startDate"
									   EndDate="_endDate"
									   Width="250px"
									   CssClass="filter-control">
						<DateRangePickerEvents TValue="DateOnly" ValueChange="DateRangeChanged" />
					</SfDateRangePicker>
				</div>

				<div class="filter-item">
					<label>Supplier</label>
					<SfComboBox TValue="int"
								TItem="SupplierModel"
								Placeholder="Select a Supplier"
								DataSource="_suppliers"
								Value="_selectedSupplierId"
								CssClass="filter-control">
						<ComboBoxEvents TItem="SupplierModel" TValue="int" ValueChange="OnSupplierChanged" />
						<ComboBoxFieldSettings Value="Id" Text="Name" />
					</SfComboBox>
				</div>
			</div>
			<div class="action-buttons">
				<SfButton CssClass="export-button" IconCss="export-icon" Content="Export PDF" OnClick="@(() => ExportToPdf())" />
				<SfButton CssClass="excel-button" IconCss="excel-icon" Content="Export Excel" OnClick="@(() => ExportToExcel())" />
			</div>
		</div>

		<div class="overview-cards">
			<div class="overview-card total-sales">
				<div class="card-icon">📈</div>
				<div class="card-content">
					<h3>Total Purchases</h3>
					<p class="amount">@_purchaseOverviews.Sum(_ => _.Total).FormatIndianCurrency()</p>
				</div>
			</div>

			<div class="overview-card total-tax">
				<div class="card-icon">💰</div>
				<div class="card-content">
					<h3>Total Transactions</h3>
					<p class="amount">@_purchaseOverviews.Count</p>
				</div>
			</div>

			<div class="overview-card total-discount">
				<div class="card-icon">🏷️</div>
				<div class="card-content">
					<h3>Total Discount</h3>
					<p class="amount">@_purchaseOverviews.Sum(_ => _.DiscountAmount).FormatIndianCurrency()</p>
				</div>
			</div>

			<div class="overview-card total-products">
				<div class="card-icon">📦</div>
				<div class="card-content">
					<h3>Items Purchased</h3>
					<p class="amount">@_purchaseOverviews.Sum(_ => _.TotalItems)</p>
				</div>
			</div>
		</div>

		<div class="detailed-grid-card">
			<div class="card-header">
				<h3 class="chart-title">Purchase Details</h3>
			</div>
			<div class="card-body">
				<SfGrid ID="_sfGrid"
						@ref="_sfGrid"
						DataSource="_purchaseOverviews"
						AllowSorting="true"
						AllowFiltering="true"
						AllowResizing="true"
						AllowPaging="true"
						AllowExcelExport="true"
						AllowPdfExport="true">
					<GridPageSettings PageSize="10" />
					<GridEvents RowSelected="PurchaseHistoryRowSelected" TValue="PurchaseOverviewModel" />
					<GridColumns>
						<GridColumn Field="@nameof(PurchaseOverviewModel.BillNo)" HeaderText="Invoice No" Width="120" TextAlign="TextAlign.Center" />
						<GridColumn Field="@nameof(PurchaseOverviewModel.BillDate)" HeaderText="Date" Width="120" Format="dd/MM/yyyy" />
						<GridColumn Field="@nameof(PurchaseOverviewModel.SupplierName)" HeaderText="Supplier" Width="150" />
						<GridColumn Field="@nameof(PurchaseOverviewModel.TotalItems)" HeaderText="Items" Width="100" TextAlign="TextAlign.Right" />
						<GridColumn Field="@nameof(PurchaseOverviewModel.TotalQuantity)" HeaderText="Qty" Width="80" Format="N2" TextAlign="TextAlign.Right" />

						<GridColumn HeaderText="Base Total" Width="120" TextAlign="TextAlign.Right">
							<Template>
								@{
									var purchase = (context as PurchaseOverviewModel);
									@(purchase.BaseTotal.FormatIndianCurrency())
								}
							</Template>
						</GridColumn>

						<GridColumn HeaderText="Discount" Width="110" TextAlign="TextAlign.Right">
							<Template>
								@{
									var purchase = (context as PurchaseOverviewModel);
									@(purchase.DiscountAmount.FormatIndianCurrency())
								}
							</Template>
						</GridColumn>

						<GridColumn HeaderText="Tax" Width="100" TextAlign="TextAlign.Right">
							<Template>
								@{
									var purchase = (context as PurchaseOverviewModel);
									@(purchase.TotalTaxAmount.FormatIndianCurrency())
								}
							</Template>
						</GridColumn>

						<GridColumn HeaderText="Total" Width="120" TextAlign="TextAlign.Right">
							<Template>
								@{
									var purchase = (context as PurchaseOverviewModel);
									@(purchase.Total.FormatIndianCurrency())
								}
							</Template>
						</GridColumn>

						<GridColumn HeaderText="Action" Width="100" TextAlign="TextAlign.Center" AllowFiltering="false" AllowSorting="false">
							<Template>
								@{
									var purchase = (context as PurchaseOverviewModel);
								}
								<button @onclick="() => ShowDeleteConfirmation(purchase.PurchaseId, purchase.BillNo)"
										@onclick:stopPropagation="true"
										class="delete-button"
										title="Deactivate Purchase">
									<span class="delete-icon">🗑️</span>
								</button>
							</Template>
						</GridColumn>
					</GridColumns>
				</SfGrid>
			</div>
		</div>

		<div class="chart-grid">
			<div class="chart-card">
				<h3 class="chart-title">Purchase Trend</h3>
				<SfChart Height="300px">
					<ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"
									   Title="Date"></ChartPrimaryXAxis>
					<ChartPrimaryYAxis Title="Amount (₹)" LabelFormat="{value}"></ChartPrimaryYAxis>
					<ChartTooltipSettings Enable="true"></ChartTooltipSettings>
					<ChartSeriesCollection>
						<ChartSeries DataSource="@GetDailyPurchaseData()"
									 XName="Date" YName="Amount" Type="ChartSeriesType.Line"
									 Name="Purchases" Fill="#512BD4">
						</ChartSeries>
					</ChartSeriesCollection>
				</SfChart>
			</div>

			<div class="chart-card">
				<h3 class="chart-title">Suppliers by Purchase Value</h3>
				<SfAccumulationChart Title="Supplier Distribution" EnableSmartLabels="true" Height="300px">
					<AccumulationChartSeriesCollection>
						<AccumulationChartSeries DataSource="@GetVendorDistributionData()" XName="SupplierName"
												 YName="Amount" Name="Purchases"
												 InnerRadius="40%" LegendShape="LegendShape.Circle">
							<AccumulationDataLabelSettings Visible="true" Name="SupplierName"
														   Position="AccumulationLabelPosition.Outside" />
							<AccumulationChartAnimation Enable="true"></AccumulationChartAnimation>
						</AccumulationChartSeries>
					</AccumulationChartSeriesCollection>
					<AccumulationChartLegendSettings Visible="true" Position="LegendPosition.Right" />
					<AccumulationChartTooltipSettings Enable="true" Format="${point.y} - ${point.percentage}%" />
				</SfAccumulationChart>
			</div>
		</div>

		<div class="dashboard-footer">
			<p>&copy; @DateTime.Now.Year A Product By <a href="https://aadisoft.vercel.app" target="_blank" class="footer-link">AadiSoft</a>. All rights reserved.</p>
		</div>
	</div>
}

<!-- Delete Confirmation Dialog -->
<SfDialog ID="_sfDeleteConfirmationDialog"
		  @ref="_sfDeleteConfirmationDialog"
		  Width="500px"
		  Height="auto"
		  AllowDragging="true"
		  EnableResize="false"
		  @bind-Visible="_deleteConfirmationDialogVisible"
		  IsModal="true">
	<DialogPositionData X="Center" Y="Center" />
	<DialogTemplates>
		<Header>
			<div class="dialog-header">
				<span class="warning-icon">⚠️</span>
				<span>Confirm Delete Purchase</span>
			</div>
		</Header>
		<Content>
			<div class="dialog-content">
				<div class="confirm-section">
					<div class="warning-message">
						<p>Are you sure you want to deactivate this purchase?</p>
					</div>

					<div class="purchase-info">
						<div class="detail-item">
							<span class="detail-label">Purchase ID:</span>
							<span class="detail-value">@_purchaseToDeleteId</span>
						</div>
						<div class="detail-item">
							<span class="detail-label">Invoice No:</span>
							<span class="detail-value">@_purchaseToDeleteBillNo</span>
						</div>
					</div>

					<div class="warning-note">
						<p><strong>Note:</strong> This action will:</p>
						<ul>
							<li>Set the purchase status to inactive</li>
							<li>Remove associated raw material stock entries</li>
							<li>This action cannot be easily undone</li>
						</ul>
					</div>
				</div>
			</div>
		</Content>
		<FooterTemplate>
			<div class="dialog-footer">
				<div class="footer-buttons">
					<SfButton Content="Yes, Delete"
							  IsPrimary="true"
							  OnClick="ConfirmDeletePurchase"
							  CssClass="delete-confirm-button" />
					<SfButton Content="Cancel"
							  OnClick="CancelDelete"
							  CssClass="dialog-button" />
				</div>
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<style>
	:root {
		--dotnet-primary: #512BD4;
		--dotnet-secondary: #68217A;
		--dotnet-accent: #00A4EF;
		--dotnet-light: #F7F7F7;
		--dotnet-dark: #1E1E1E;
		--dotnet-border: #E0E0E0;
		--cash-color: #28a745;
		--card-color: #fd7e14;
		--upi-color: #dc3545;
		--credit-color: #6610f2;
		--discount-color: #20c997;
		--tax-color: #6c757d;
		--excel-color: #217346;
	}

	/* Delete Button Styling */
	.delete-button {
		background-color: #f44336;
		color: white;
		border: none;
		padding: 6px 10px;
		border-radius: 4px;
		cursor: pointer;
		display: inline-flex;
		align-items: center;
		justify-content: center;
		transition: all 0.2s ease;
		font-size: 12px;
	}

		.delete-button:hover {
			background-color: #d32f2f;
			transform: translateY(-2px);
			box-shadow: 0 4px 8px rgba(244, 67, 54, 0.3);
		}

		.delete-button:active {
			transform: translateY(0);
		}

	.delete-icon {
		font-size: 14px;
	}

	/* Delete Confirmation Dialog Styling */
	.warning-icon {
		font-size: 24px;
		margin-right: 10px;
	}

	.warning-message {
		background-color: #fff3cd;
		border: 1px solid #ffeaa7;
		border-radius: 6px;
		padding: 15px;
		margin-bottom: 20px;
		text-align: center;
	}

		.warning-message p {
			margin: 0;
			font-weight: 600;
			color: #856404;
			font-size: 16px;
		}

	.purchase-info {
		background-color: var(--dotnet-light);
		border-radius: 6px;
		padding: 15px;
		margin-bottom: 20px;
	}

		.purchase-info .detail-item {
			display: flex;
			justify-content: space-between;
			margin-bottom: 8px;
		}

		.purchase-info .detail-label {
			font-weight: 600;
			color: var(--dotnet-dark);
		}

		.purchase-info .detail-value {
			color: var(--dotnet-secondary);
			font-weight: 500;
		}

	.warning-note {
		background-color: #f8d7da;
		border: 1px solid #f5c6cb;
		border-radius: 6px;
		padding: 15px;
	}

		.warning-note p {
			margin: 0 0 10px 0;
			font-weight: 600;
			color: #721c24;
		}

		.warning-note ul {
			margin: 0;
			padding-left: 20px;
			color: #721c24;
		}

		.warning-note li {
			margin-bottom: 5px;
		}

	.delete-confirm-button {
		background-color: #f44336;
		color: white;
		border: none;
		padding: 10px 20px;
		border-radius: 6px;
		font-weight: 600;
		transition: all 0.2s ease;
	}

		.delete-confirm-button:hover {
			background-color: #d32f2f;
		}

	/* General Layout */
	.dashboard-container {
		display: flex;
		flex-direction: column;
		min-height: 100vh;
		padding: 20px;
		background: linear-gradient(135deg, rgba(81, 43, 212, 0.05) 0%, rgba(104, 33, 122, 0.05) 100%);
		gap: 25px;
	}

	/* Header Styles */
	.dashboard-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 10px 20px;
		background-color: white;
		border-radius: 15px;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
		margin-bottom: 10px;
	}

	.logo-section {
		display: flex;
		align-items: center;
	}

	.dashboard-logo {
		width: 50px;
		height: 50px;
		border-radius: 50%;
		margin-right: 15px;
	}

	.dashboard-title {
		color: var(--dotnet-primary);
		font-size: 24px;
		font-weight: 700;
		margin: 0;
	}

	.user-info {
		display: flex;
		align-items: center;
		gap: 15px;
	}

	.user-name {
		font-weight: 600;
		color: var(--dotnet-secondary);
	}

	.logout-button {
		background-color: transparent;
		border: 2px solid var(--dotnet-primary);
		color: var(--dotnet-primary);
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
	}

		.logout-button:hover {
			background-color: var(--dotnet-primary);
			color: white;
		}

	.logout-icon {
		font-size: 16px;
	}

	/* Welcome Section */
	.welcome-section {
		text-align: center;
		margin-bottom: 20px;
	}

		.welcome-section h2 {
			color: var(--dotnet-secondary);
			margin-bottom: 10px;
		}

		.welcome-section p {
			color: var(--dotnet-dark);
			opacity: 0.7;
		}

	/* Back button styles */
	.back-button {
		background-color: transparent;
		border: 2px solid var(--dotnet-secondary);
		color: var(--dotnet-secondary);
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: inline-flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
		margin-top: 15px;
	}

		.back-button:hover {
			background-color: var(--dotnet-secondary);
			color: white;
		}

	.back-icon {
		font-size: 16px;
	}

	/* Filter section */
	.filter-section {
		display: flex;
		justify-content: space-between;
		align-items: flex-end;
		padding: 15px 20px;
		background-color: white;
		border-radius: 15px;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
		margin-bottom: 20px;
	}

	.filters {
		display: flex;
		gap: 20px;
		flex-wrap: wrap;
	}

	.filter-item {
		display: flex;
		flex-direction: column;
		gap: 5px;
	}

		.filter-item label {
			font-weight: 600;
			color: var(--dotnet-secondary);
			font-size: 14px;
		}

	.filter-control {
		min-width: 200px;
	}

	.action-buttons {
		display: flex;
		gap: 10px;
	}

	.export-button {
		background-color: var(--dotnet-secondary);
		color: white;
		border: none;
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
	}

		.export-button:hover {
			background-color: #571b6c;
			transform: translateY(-2px);
		}

	.excel-button {
		background-color: var(--excel-color);
		color: white;
		border: none;
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
	}

		.excel-button:hover {
			background-color: #1e5f3e;
			transform: translateY(-2px);
		}

	.export-icon, .excel-icon {
		font-size: 16px;
	}

	/* Overview Cards */
	.overview-cards {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
		gap: 20px;
		margin-bottom: 10px;
	}

	.overview-card {
		display: flex;
		align-items: center;
		background-color: white;
		border-radius: 12px;
		padding: 20px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
		gap: 15px;
		transition: transform 0.2s ease, box-shadow 0.2s ease;
		height: 120px;
	}

		.overview-card:hover {
			transform: translateY(-3px);
			box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
		}

	.card-icon {
		font-size: 30px;
		width: 60px;
		height: 60px;
		min-width: 60px; /* Prevent icon from shrinking */
		display: flex;
		align-items: center;
		justify-content: center;
		border-radius: 50%;
		background-color: rgba(81, 43, 212, 0.1);
	}

	.total-sales .card-icon {
		background-color: rgba(0, 164, 239, 0.1);
		color: var(--dotnet-accent);
	}

	.total-tax .card-icon {
		background-color: rgba(104, 33, 122, 0.1);
		color: var(--dotnet-secondary);
	}

	.total-discount .card-icon {
		background-color: rgba(220, 53, 69, 0.1);
		color: #dc3545;
	}

	.total-products .card-icon {
		background-color: rgba(40, 167, 69, 0.1);
		color: #28a745;
	}

	.card-content {
		width: 100%;
		overflow: hidden; /* Prevent text overflow */
	}

		.card-content h3 {
			margin: 0 0 5px 0;
			font-size: 16px;
			color: #666;
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
		}

	.amount {
		font-size: 24px;
		font-weight: bold;
		color: var(--dotnet-dark);
		margin: 0;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	/* Detailed Grid */
	.detailed-grid-card {
		background-color: white;
		border-radius: 12px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
		overflow: hidden;
		margin-bottom: 25px;
	}

	.card-header {
		background-color: var(--dotnet-light);
		padding: 15px 20px;
		border-bottom: 1px solid var(--dotnet-border);
	}

		.card-header h3 {
			margin: 0;
			color: var(--dotnet-secondary);
			font-size: 18px;
			font-weight: 600;
		}

	.card-body {
		padding: 20px;
	}

	/* Chart Grid */
	.chart-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
		gap: 25px;
		margin-bottom: 10px;
	}

	.chart-card {
		background-color: white;
		border-radius: 12px;
		padding: 20px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
		height: 360px; /* Fixed height for uniformity */
	}

	.chart-title {
		color: var(--dotnet-secondary);
		margin-top: 0;
		margin-bottom: 15px;
		font-size: 18px;
		font-weight: 600;
	}

	/* Footer */
	.dashboard-footer {
		margin-top: auto;
		text-align: center;
		padding: 20px;
		color: #666;
		font-size: 14px;
	}

	.footer-link {
		color: var(--dotnet-primary);
		text-decoration: none;
		font-weight: 600;
		transition: color 0.2s ease;
	}

		.footer-link:hover {
			color: var(--dotnet-secondary);
			text-decoration: underline;
		}

	/* Loading Animation */
	.loader-container {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		height: 100vh;
	}

	.circular-dots-loader {
		position: relative;
		width: 60px;
		height: 60px;
		margin-bottom: 15px;
	}

		.circular-dots-loader .dot {
			position: absolute;
			width: 12px;
			height: 12px;
			border-radius: 50%;
			animation: rotate 1.5s infinite linear;
		}

		.circular-dots-loader .dot-1 {
			background-color: var(--dotnet-primary);
			animation-delay: 0s;
		}

		.circular-dots-loader .dot-2 {
			background-color: var(--dotnet-accent);
			animation-delay: -0.5s;
		}

		.circular-dots-loader .dot-3 {
			background-color: var(--dotnet-secondary);
			animation-delay: -1s;
		}

	.loading-text {
		color: var(--dotnet-dark);
		font-size: 16px;
		margin-top: 10px;
	}

	/* Dialog Styling */
	.dialog-header {
		font-size: 20px;
		font-weight: 600;
		color: var(--dotnet-secondary);
		display: flex;
		align-items: center;
	}

	.dialog-content {
		padding: 20px;
	}

	.confirm-section {
		margin-bottom: 0;
	}

	/* Dialog Footer */
	.dialog-footer {
		display: flex;
		justify-content: flex-end;
		align-items: center;
		padding: 15px 20px;
		background-color: var(--dotnet-light);
		border-top: 1px solid var(--dotnet-border);
	}

	.footer-buttons {
		display: flex;
		gap: 10px;
	}

	/* Dialog buttons */
	.dialog-button {
		border-radius: 6px;
		padding: 8px 16px;
		height: 38px;
		display: flex;
		align-items: center;
		justify-content: center;
		font-weight: 500;
	}

	/* Toast Styling */
	::deep .e-toast-container {
		z-index: 1000;
	}

		::deep .e-toast-container .e-toast {
			border: 0;
			border-radius: 8px;
			box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
		}

	/* Success Toast */
	::deep .e-toast-success {
		background-color: #ebf7ee;
		border-left: 4px solid #4CAF50;
		color: #2E7D32;
	}

		::deep .e-toast-success .e-toast-title {
			color: #2E7D32;
			font-weight: 700;
		}

		::deep .e-toast-success .e-toast-content {
			color: #2E7D32;
		}

		::deep .e-toast-success .e-toast-close-icon {
			color: #2E7D32;
		}

		::deep .e-toast-success::before {
			content: "✓";
			font-size: 18px;
			font-weight: bold;
			position: absolute;
			left: 15px;
			top: 50%;
			transform: translateY(-50%);
		}

	/* Error Toast */
	::deep .e-toast-danger {
		background-color: #fdeeee;
		border-left: 4px solid #F44336;
		color: #C62828;
	}

		::deep .e-toast-danger .e-toast-title {
			color: #C62828;
			font-weight: 700;
		}

		::deep .e-toast-danger .e-toast-content {
			color: #C62828;
		}

		::deep .e-toast-danger .e-toast-close-icon {
			color: #C62828;
		}

		::deep .e-toast-danger::before {
			content: "⚠";
			font-size: 18px;
			font-weight: bold;
			position: absolute;
			left: 15px;
			top: 50%;
			transform: translateY(-50%);
		}

	/* Toast Animation */
	::deep .e-toast-container .e-toast {
		padding: 10px 10px 10px 40px;
		position: relative;
		animation-fill-mode: both;
	}

	/* Animations */
	@@keyframes rotate {
		0% {
			transform: rotate(0deg) translate(-24px) rotate(0deg);
		}

		100% {
			transform: rotate(360deg) translate(-24px) rotate(-360deg);
		}
	}

	/* Syncfusion Custom Styling */
	::deep .e-grid {
		border-radius: 8px;
		border: none;
		overflow: hidden;
	}

		::deep .e-grid .e-headercell {
			background-color: var(--dotnet-light);
			color: var(--dotnet-secondary);
			font-weight: 600;
		}

		::deep .e-grid .e-rowcell {
			padding: 12px 20px;
		}

	::deep .e-pager {
		padding: 10px;
		background-color: var(--dotnet-light);
	}

	/* Responsive Design */
	@@media (max-width: 992px) {
		.chart-grid {
			grid-template-columns: 1fr;
		}

		.chart-card {
			height: auto;
			min-height: 360px;
		}
	}

	@@media (max-width: 768px) {
		.dashboard-header, .filter-section {
			flex-direction: column;
			gap: 15px;
			align-items: stretch;
		}

		.filter-section {
			padding: 15px;
		}

		.filters {
			flex-direction: column;
			width: 100%;
		}

		.filter-item {
			width: 100%;
		}

		.filter-control {
			min-width: 100%;
			width: 100%;
		}

		.action-buttons {
			width: 100%;
			justify-content: space-between;
		}

		.overview-card {
			height: auto;
			min-height: 120px;
		}
	}
</style>