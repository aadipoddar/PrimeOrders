@page "/Reports/RawMaterialStockReport"

<PageTitle>Stock Report - Prime Orders</PageTitle>

@if (_isLoading)
{
	<div class="loader-container">
		<div class="circular-dots-loader">
			<span class="dot dot-1"></span>
			<span class="dot dot-2"></span>
			<span class="dot dot-3"></span>
		</div>
		<p class="loading-text">Loading stock details...</p>
	</div>
}
else
{
	<div class="dashboard-container">
		<div class="dashboard-header">
			<div class="logo-section">
				<img src="images/order.gif" alt="Prime Orders Logo" class="dashboard-logo" />
				<h1 class="dashboard-title">Prime Orders</h1>
			</div>
			<div class="user-info">
				<span class="user-name">@_user?.Name</span>
				<button @onclick="async () => await AuthService.Logout(JS, NavManager)" class="logout-button">
					<span class="logout-icon">⟲</span> Logout
				</button>
			</div>
		</div>

		<div class="welcome-section">
			<h2>Stock Report</h2>
			<p>Monitor and analyze inventory levels and stock movement</p>
			<button @onclick='() => NavManager.NavigateTo("/Report-Dashboard")' class="back-button">
				<span class="back-icon">←</span> Back to Reports
			</button>
		</div>

		<div class="filter-section">
			<div class="filters">
				<div class="filter-item">
					<label>Date Range</label>
					<SfDateRangePicker Placeholder="Select date range"
									   FloatLabelType='@FloatLabelType.Auto'
									   StartDate="_startDate"
									   EndDate="_endDate"
									   Width="250px"
									   CssClass="filter-control">
						<DateRangePickerEvents TValue="DateOnly" ValueChange="DateRangeChanged" />
					</SfDateRangePicker>
				</div>
			</div>
			<div class="action-buttons">
				<SfButton CssClass="excel-button" OnClick="@(() => ExportToExcel())">
					<div class="button-content">
						<img src="images/excel.png" alt="Excel" class="excel-icon" />
						<span>Export Excel</span>
					</div>
				</SfButton>
			</div>
		</div>

		<div class="overview-cards">
			<div class="overview-card total-sales">
				<div class="card-icon">📦</div>
				<div class="card-content">
					<h3>Total Stock Items</h3>
					<p class="amount">@_stockDetails.Count</p>
				</div>
			</div>

			<div class="overview-card total-quantity">
				<div class="card-icon">🧮</div>
				<div class="card-content">
					<h3>Opening Stock</h3>
					<p class="amount">@_stockDetails.Sum(_ => _.OpeningStock)</p>
				</div>
			</div>

			<div class="overview-card total-discount">
				<div class="card-icon">📥</div>
				<div class="card-content">
					<h3>Purchases</h3>
					<p class="amount">@_stockDetails.Sum(_ => _.PurchaseStock)</p>
				</div>
			</div>

			<div class="overview-card total-transactions">
				<div class="card-icon">📤</div>
				<div class="card-content">
					<h3>Sales</h3>
					<p class="amount">@_stockDetails.Sum(_ => _.SaleStock)</p>
				</div>
			</div>
		</div>

		<div class="chart-grid">
			<div class="chart-card">
				<h3 class="chart-title">Stock Movement Overview</h3>
				<SfChart Height="300px">
					<ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"
									   Title="Stock Component"></ChartPrimaryXAxis>
					<ChartPrimaryYAxis Title="Quantity" LabelFormat="{value}"></ChartPrimaryYAxis>
					<ChartTooltipSettings Enable="true"></ChartTooltipSettings>
					<ChartSeriesCollection>
						<ChartSeries DataSource="@GetStockOverviewData()"
									 XName="Component" YName="Value" Type="ChartSeriesType.Column"
									 Name="Quantity" Fill="#512BD4">
						</ChartSeries>
					</ChartSeriesCollection>
				</SfChart>
			</div>

			<div class="chart-card">
				<h3 class="chart-title">Category Distribution</h3>
				<SfAccumulationChart Title="Stock by Category" EnableSmartLabels="true" Height="300px">
					<AccumulationChartSeriesCollection>
						<AccumulationChartSeries DataSource="@GetCategoryDistributionData()" XName="CategoryName"
												 YName="StockCount" Name="Stock"
												 InnerRadius="40%" LegendShape="LegendShape.Circle">
							<AccumulationDataLabelSettings Visible="true" Name="CategoryName"
														   Position="AccumulationLabelPosition.Outside" />
							<AccumulationChartAnimation Enable="true"></AccumulationChartAnimation>
						</AccumulationChartSeries>
					</AccumulationChartSeriesCollection>
					<AccumulationChartLegendSettings Visible="true" Position="LegendPosition.Right" />
					<AccumulationChartTooltipSettings Enable="true" Format="${point.y} - ${point.percentage}%" />
				</SfAccumulationChart>
			</div>
		</div>

		<div class="detailed-grid-card">
			<div class="card-header">
				<h3 class="chart-title">Stock Details</h3>
			</div>
			<div class="card-body">
				<SfGrid ID="_sfGrid"
						@ref="_sfGrid"
						DataSource="_stockDetails"
						AllowSorting="true"
						AllowFiltering="true"
						AllowResizing="true"
						AllowPaging="true"
						AllowExcelExport="true"
						AllowPdfExport="true">
					<GridPageSettings PageSize="10"></GridPageSettings>
					<GridColumns>
						<GridColumn Field="@nameof(RawMaterialStockSummaryModel.RawMaterialCategoryName)" HeaderText="Category" Width="80" />
						<GridColumn Field="@nameof(RawMaterialStockSummaryModel.RawMaterialCode)" HeaderText="Code" Width="100" />
						<GridColumn Field="@nameof(RawMaterialStockSummaryModel.RawMaterialName)" HeaderText="Item Name" Width="150" />
						<GridColumn Field="@nameof(RawMaterialStockSummaryModel.OpeningStock)" HeaderText="Opening" Width="110" TextAlign="TextAlign.Right" />
						<GridColumn Field="@nameof(RawMaterialStockSummaryModel.PurchaseStock)" HeaderText="Purchases" Width="120" TextAlign="TextAlign.Right" />
						<GridColumn Field="@nameof(RawMaterialStockSummaryModel.SaleStock)" HeaderText="Sales" Width="100" TextAlign="TextAlign.Right" />
						<GridColumn Field="@nameof(RawMaterialStockSummaryModel.MonthlyStock)" HeaderText="Monthly" Width="100" TextAlign="TextAlign.Right" />
						<GridColumn Field="@nameof(RawMaterialStockSummaryModel.ClosingStock)" HeaderText="Closing" Width="110" TextAlign="TextAlign.Right" />
						<GridColumn Field="@nameof(RawMaterialStockSummaryModel.AveragePrice)" HeaderText="Average Price" Width="120" Format="N2" TextAlign="TextAlign.Right" />
						<GridColumn Field="@nameof(RawMaterialStockSummaryModel.LastPurchasePrice)" HeaderText="Last Purchase Price" Width="120" Format="N2" TextAlign="TextAlign.Right" />
						<GridColumn Field="@nameof(RawMaterialStockSummaryModel.WeightedAverageValue)" HeaderText="Weighted Average Value" Width="120" Format="N2" TextAlign="TextAlign.Right" />
						<GridColumn Field="@nameof(RawMaterialStockSummaryModel.LastPurchaseValue)" HeaderText="Last Purchase Value" Width="120" Format="N2" TextAlign="TextAlign.Right" />
					</GridColumns>
				</SfGrid>
			</div>
		</div>

		<div class="chart-grid">
			<div class="chart-card">
				<h3 class="chart-title">Top Items by Movement</h3>
				<SfChart Height="300px">
					<ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"
									   Title="Items"></ChartPrimaryXAxis>
					<ChartPrimaryYAxis Title="Quantity" LabelFormat="{value}"></ChartPrimaryYAxis>
					<ChartTooltipSettings Enable="true"></ChartTooltipSettings>
					<ChartSeriesCollection>
						<ChartSeries DataSource="@GetTopMovingItemsData()"
									 XName="ItemName" YName="Movement" Type="ChartSeriesType.Column"
									 Name="Stock Movement" Fill="#00A4EF">
						</ChartSeries>
					</ChartSeriesCollection>
				</SfChart>
			</div>

			<div class="chart-card">
				<h3 class="chart-title">Opening vs Closing Stock</h3>
				<SfChart Height="300px">
					<ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"
									   Title="Items"></ChartPrimaryXAxis>
					<ChartPrimaryYAxis Title="Quantity" LabelFormat="{value}"></ChartPrimaryYAxis>
					<ChartTooltipSettings Enable="true"></ChartTooltipSettings>
					<ChartSeriesCollection>
						<ChartSeries DataSource="@GetOpeningClosingData()"
									 XName="ItemName" YName="OpeningStock" Type="ChartSeriesType.Column"
									 Name="Opening" Fill="#512BD4">
						</ChartSeries>
						<ChartSeries DataSource="@GetOpeningClosingData()"
									 XName="ItemName" YName="ClosingStock" Type="ChartSeriesType.Column"
									 Name="Closing" Fill="#00A4EF">
						</ChartSeries>
					</ChartSeriesCollection>
				</SfChart>
			</div>
		</div>

		<div class="dashboard-footer">
			<p>&copy; @DateTime.Now.Year A Product By <a href="https://aadisoft.vercel.app" target="_blank" class="footer-link">AadiSoft</a>. All rights reserved.</p>
		</div>
	</div>
}

<style>
	:root {
		--dotnet-primary: #512BD4;
		--dotnet-secondary: #68217A;
		--dotnet-accent: #00A4EF;
		--dotnet-light: #F7F7F7;
		--dotnet-dark: #1E1E1E;
		--dotnet-border: #E0E0E0;
		--cash-color: #28a745;
		--card-color: #fd7e14;
		--upi-color: #dc3545;
		--credit-color: #6610f2;
		--discount-color: #20c997;
		--tax-color: #6c757d;
		--excel-color: #217346;
	}

	/* General Layout */
	.dashboard-container {
		display: flex;
		flex-direction: column;
		min-height: 100vh;
		padding: 20px;
		background: linear-gradient(135deg, rgba(81, 43, 212, 0.05) 0%, rgba(104, 33, 122, 0.05) 100%);
		gap: 25px;
	}

	/* Header Styles */
	.dashboard-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 10px 20px;
		background-color: white;
		border-radius: 15px;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
		margin-bottom: 10px;
	}

	.logo-section {
		display: flex;
		align-items: center;
	}

	.dashboard-logo {
		width: 50px;
		height: 50px;
		border-radius: 50%;
		margin-right: 15px;
	}

	.dashboard-title {
		color: var(--dotnet-primary);
		font-size: 24px;
		font-weight: 700;
		margin: 0;
	}

	.user-info {
		display: flex;
		align-items: center;
		gap: 15px;
	}

	.user-name {
		font-weight: 600;
		color: var(--dotnet-secondary);
	}

	.logout-button {
		background-color: transparent;
		border: 2px solid var(--dotnet-primary);
		color: var(--dotnet-primary);
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
	}

		.logout-button:hover {
			background-color: var(--dotnet-primary);
			color: white;
		}

	.logout-icon {
		font-size: 16px;
	}

	/* Welcome Section */
	.welcome-section {
		text-align: center;
		margin-bottom: 20px;
	}

		.welcome-section h2 {
			color: var(--dotnet-secondary);
			margin-bottom: 10px;
		}

		.welcome-section p {
			color: var(--dotnet-dark);
			opacity: 0.7;
		}

	/* Back button styles */
	.back-button {
		background-color: transparent;
		border: 2px solid var(--dotnet-secondary);
		color: var(--dotnet-secondary);
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: inline-flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
		margin-top: 15px;
	}

		.back-button:hover {
			background-color: var(--dotnet-secondary);
			color: white;
		}

	.back-icon {
		font-size: 16px;
	}

	/* Filter section */
	.filter-section {
		display: flex;
		justify-content: space-between;
		align-items: flex-end;
		padding: 15px 20px;
		background-color: white;
		border-radius: 15px;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
		margin-bottom: 20px;
	}

	.filters {
		display: flex;
		gap: 20px;
		flex-wrap: wrap;
	}

	.filter-item {
		display: flex;
		flex-direction: column;
		gap: 5px;
	}

		.filter-item label {
			font-weight: 600;
			color: var(--dotnet-secondary);
			font-size: 14px;
		}

	.filter-control {
		min-width: 200px;
	}

	.action-buttons {
		display: flex;
		gap: 10px;
	}

	.excel-icon {
		width: 16px;
		height: 16px;
	}

	.excel-button {
		background-color: var(--excel-color);
		color: white;
		border: none;
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
	}

		.excel-button:hover {
			background-color: #1e5f3e;
			transform: translateY(-2px);
		}

	/* Overview Cards */
	.overview-cards {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
		gap: 20px;
		margin-bottom: 10px;
	}

	.overview-card {
		display: flex;
		align-items: center;
		background-color: white;
		border-radius: 12px;
		padding: 20px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
		gap: 15px;
		transition: transform 0.2s ease, box-shadow 0.2s ease;
		height: 120px;
	}

		.overview-card:hover {
			transform: translateY(-3px);
			box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
		}

	.card-icon {
		font-size: 30px;
		width: 60px;
		height: 60px;
		min-width: 60px; /* Prevent icon from shrinking */
		display: flex;
		align-items: center;
		justify-content: center;
		border-radius: 50%;
		background-color: rgba(81, 43, 212, 0.1);
	}

	.total-sales .card-icon {
		background-color: rgba(0, 164, 239, 0.1);
		color: var(--dotnet-accent);
	}

	.total-quantity .card-icon {
		background-color: rgba(104, 33, 122, 0.1);
		color: var(--dotnet-secondary);
	}

	.total-discount .card-icon {
		background-color: rgba(46, 196, 134, 0.1);
		color: #2EC486;
	}

	.total-transactions .card-icon {
		background-color: rgba(255, 153, 0, 0.1);
		color: #FF9900;
	}

	.card-content {
		width: 100%;
		overflow: hidden; /* Prevent text overflow */
	}

		.card-content h3 {
			margin: 0 0 5px 0;
			font-size: 16px;
			color: #666;
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
		}

	.amount {
		font-size: 24px;
		font-weight: bold;
		color: var(--dotnet-dark);
		margin: 0;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	/* Detailed Grid */
	.detailed-grid-card {
		background-color: white;
		border-radius: 12px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
		overflow: hidden;
		margin-bottom: 25px;
	}

	.card-header {
		background-color: var(--dotnet-light);
		padding: 15px 20px;
		border-bottom: 1px solid var(--dotnet-border);
	}

		.card-header h3 {
			margin: 0;
			color: var(--dotnet-secondary);
			font-size: 18px;
			font-weight: 600;
		}

	.card-body {
		padding: 20px;
	}

	/* Chart Grid */
	.chart-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
		gap: 25px;
		margin-bottom: 10px;
	}

	.chart-card {
		background-color: white;
		border-radius: 12px;
		padding: 20px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
		height: 360px; /* Fixed height for uniformity */
	}

	.chart-title {
		color: var(--dotnet-secondary);
		margin-top: 0;
		margin-bottom: 15px;
		font-size: 18px;
		font-weight: 600;
	}

	/* Footer */
	.dashboard-footer {
		margin-top: auto;
		text-align: center;
		padding: 20px;
		color: #666;
		font-size: 14px;
	}

	.footer-link {
		color: var(--dotnet-primary);
		text-decoration: none;
		font-weight: 600;
		transition: color 0.2s ease;
	}

		.footer-link:hover {
			color: var(--dotnet-secondary);
			text-decoration: underline;
		}

	/* Loading Animation */
	.loader-container {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		height: 100vh;
	}

	.circular-dots-loader {
		position: relative;
		width: 60px;
		height: 60px;
		margin-bottom: 15px;
	}

		.circular-dots-loader .dot {
			position: absolute;
			width: 12px;
			height: 12px;
			border-radius: 50%;
			animation: rotate 1.5s infinite linear;
		}

		.circular-dots-loader .dot-1 {
			background-color: var(--dotnet-primary);
			animation-delay: 0s;
		}

		.circular-dots-loader .dot-2 {
			background-color: var(--dotnet-accent);
			animation-delay: -0.5s;
		}

		.circular-dots-loader .dot-3 {
			background-color: var(--dotnet-secondary);
			animation-delay: -1s;
		}

	.loading-text {
		color: var(--dotnet-dark);
		font-size: 16px;
		margin-top: 10px;
	}

	/* Animations */
	@@keyframes rotate {
		0% {
			transform: rotate(0deg) translate(-24px) rotate(0deg);
		}

		100% {
			transform: rotate(360deg) translate(-24px) rotate(-360deg);
		}
	}

	/* Syncfusion Custom Styling */
	::deep .e-grid {
		border-radius: 8px;
		border: none;
		overflow: hidden;
	}

		::deep .e-grid .e-headercell {
			background-color: var(--dotnet-light);
			color: var(--dotnet-secondary);
			font-weight: 600;
		}

		::deep .e-grid .e-rowcell {
			padding: 12px 20px;
		}

	::deep .e-pager {
		padding: 10px;
		background-color: var(--dotnet-light);
	}

	/* Responsive Design */
	@@media (max-width: 992px) {
		.chart-grid {
			grid-template-columns: 1fr;
		}

		.chart-card {
			height: auto;
			min-height: 360px;
		}
	}

	@@media (max-width: 768px) {
		.dashboard-header, .filter-section {
			flex-direction: column;
			gap: 15px;
			align-items: stretch;
		}

		.filter-section {
			padding: 15px;
		}

		.filters {
			flex-direction: column;
			width: 100%;
		}

		.filter-item {
			width: 100%;
		}

		.filter-control {
			min-width: 100%;
			width: 100%;
		}

		.action-buttons {
			width: 100%;
			justify-content: space-between;
		}

		.overview-card {
			height: auto;
			min-height: 120px;
		}
	}
</style>