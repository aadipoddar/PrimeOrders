@page "/Accounts/Masters/Vouchers"
@using PrimeOrdersLibrary.Models.Accounts
@using PrimeOrdersLibrary.Models.Accounts.Masters

<PageTitle>Voucher Management - Prime Orders</PageTitle>

<SfToast @ref="_sfErrorToast"
         ID="toast_error"
         Title="Error"
         Content="Some Error Message"
         Timeout="3000"
         ShowCloseButton="true"
         CssClass="e-toast-danger">
    <ToastPosition X="Right" Y="Top" />
    <ToastAnimationSettings>
        <ToastShowAnimationSettings Effect="ToastEffect.SlideRightIn" Duration="600" Easing="ToastEasing.Linear" />
        <ToastHideAnimationSettings Effect="ToastEffect.SlideRightOut" Duration="600" Easing="ToastEasing.Linear" />
    </ToastAnimationSettings>
</SfToast>

<SfToast @ref="_sfToast"
         ID="toast_success"
         Title="Success"
         Content="Voucher saved successfully."
         Timeout="1000"
         ShowCloseButton="true"
         CssClass="e-toast-success">
    <ToastPosition X="Right" Y="Top" />
    <ToastEvents Closed="() => NavManager.NavigateTo(NavManager.Uri, forceLoad: true)" />
    <ToastAnimationSettings>
        <ToastShowAnimationSettings Effect="ToastEffect.SlideRightIn" Duration="600" Easing="ToastEasing.Linear" />
        <ToastHideAnimationSettings Effect="ToastEffect.SlideRightOut" Duration="600" Easing="ToastEasing.Linear" />
    </ToastAnimationSettings>
</SfToast>

<SfToast @ref="_sfUpdateToast"
         ID="toast_update"
         Title="Voucher Found"
         Content="Voucher found. Please update the information."
         Timeout="3000"
         ShowCloseButton="true"
         CssClass="e-toast-info">
    <ToastPosition X="Right" Y="Top" />
    <ToastAnimationSettings>
        <ToastShowAnimationSettings Effect="ToastEffect.SlideRightIn" Duration="600" Easing="ToastEasing.Linear" />
        <ToastHideAnimationSettings Effect="ToastEffect.SlideRightOut" Duration="600" Easing="ToastEasing.Linear" />
    </ToastAnimationSettings>
</SfToast>

@if (_isLoading)
{
    <div class="loader-container">
        <div class="circular-dots-loader">
            <span class="dot dot-1"></span>
            <span class="dot dot-2"></span>
            <span class="dot dot-3"></span>
        </div>
        <p class="loading-text">Loading vouchers...</p>
    </div>
}
else
{
    <div class="voucher-container">
        <div class="page-header">
            <h1 class="page-title">Voucher Management</h1>
            <button @onclick='() => NavManager.NavigateTo("/Accounts/Masters-Dashboard")' class="back-button">
                <span class="back-icon">←</span> Back to Masters
            </button>
        </div>

        <div class="voucher-content">
            <div class="selection-card">
                <div class="card-header">
                    <h2>Voucher Details</h2>
                    <p class="card-info">Enter or update voucher type information</p>
                </div>
                <div class="card-body">
                    <div class="form-row">
                        <div class="form-group">
                            <label>Voucher Name *</label>
                            <SfTextBox @bind-Value="_voucherModel.Name"
                                       Placeholder="Enter Voucher Name"
                                       CssClass="form-control" />
                        </div>

                        <div class="form-group">
                            <label>Prefix Code *</label>
                            <SfTextBox @bind-Value="_voucherModel.PrefixCode"
                                       Placeholder="Enter Voucher Code"
                                       CssClass="form-control" />
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group full-width">
                            <label>Remarks</label>
                            <SfTextBox @bind-Value="_voucherModel.Remarks"
                                       Placeholder="Enter Remarks"
                                       Multiline="true"
                                       CssClass="form-control" />
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label>Status</label>
                            <div class="checkbox-container">
                                <SfCheckBox @bind-Checked="_voucherModel.Status" Label="Active" CssClass="form-checkbox" />
                            </div>
                        </div>
                    </div>

                    <div class="save-container">
                        <button @onclick="OnSaveClick" class="save-button">
                            <span class="save-icon">💾</span> Save Voucher
                        </button>
                    </div>
                </div>
            </div>

            <div class="grid-card">
                <div class="card-header">
                    <h2>Vouchers List</h2>
                    <p class="grid-info">Select a row to edit voucher details</p>
                </div>
                <div class="card-body">
                    <SfGrid DataSource="@_vouchers"
                            ID="_sfGrid"
                            @ref="_sfGrid"
                            AllowSorting="true"
                            AllowFiltering="true"
                            AllowResizing="true"
                            AllowPaging="true"
                            CssClass="voucher-grid">
                        <GridPageSettings PageSize="15"></GridPageSettings>
                        <GridEvents RowSelected="RowSelectHandler" TValue="VoucherModel" />
                        <GridColumns>
                            <GridColumn Field=@nameof(VoucherModel.Id) HeaderText="ID" Width="60" TextAlign="TextAlign.Center" />
                            <GridColumn Field=@nameof(VoucherModel.Name) HeaderText="Voucher Name" Width="250" />
                            <GridColumn Field=@nameof(VoucherModel.PrefixCode) HeaderText="Prefix Code" Width="120" />
                            <GridColumn Field=@nameof(VoucherModel.Remarks) HeaderText="Remarks" Width="300" />
                            <GridColumn Field=@nameof(VoucherModel.Status) HeaderText="Active" Width="80" DisplayAsCheckBox="true" TextAlign="TextAlign.Center" />
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>

        <div class="dashboard-footer">
            <p>&copy; @DateTime.Now.Year A Product By <a href="https://aadisoft.vercel.app" target="_blank" class="footer-link">AadiSoft</a>. All rights reserved.</p>
        </div>
    </div>
}

<style>
    :root {
        --dotnet-primary: #512BD4;
        --dotnet-secondary: #68217A;
        --dotnet-accent: #00A4EF;
        --dotnet-light: #F7F7F7;
        --dotnet-dark: #1E1E1E;
        --dotnet-border: rgba(0, 0, 0, 0.1);
    }

    /* General Layout */
    .voucher-container {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        padding: 20px;
        background: linear-gradient(135deg, rgba(81, 43, 212, 0.05) 0%, rgba(104, 33, 122, 0.05) 100%);
    }

    /* Page Header */
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
    }

    .page-title {
        color: var(--dotnet-secondary);
        font-size: 28px;
        font-weight: 700;
        margin: 0;
    }

    .back-button {
        background-color: transparent;
        border: 2px solid var(--dotnet-secondary);
        color: var(--dotnet-secondary);
        padding: 8px 16px;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.2s ease;
    }

        .back-button:hover {
            background-color: var(--dotnet-secondary);
            color: white;
        }

    .back-icon {
        font-size: 16px;
    }

    /* Content layout */
    .voucher-content {
        display: flex;
        flex-direction: column;
        gap: 25px;
        margin-bottom: 30px;
    }

    /* Cards */
    .selection-card, .grid-card {
        background-color: white;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .card-header {
        background-color: var(--dotnet-light);
        padding: 15px 20px;
        border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    }

        .card-header h2 {
            margin: 0;
            color: var(--dotnet-secondary);
            font-size: 20px;
            font-weight: 600;
        }

    .card-info, .grid-info {
        margin: 5px 0 0 0;
        color: #666;
        font-size: 14px;
        font-style: italic;
    }

    .card-body {
        padding: 20px;
    }

    /* Form Layout */
    .form-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 15px;
    }

    .form-group {
        margin-bottom: 10px;
    }

        .form-group.full-width {
            grid-column: 1 / -1;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--dotnet-dark);
        }

    .form-control {
        width: 100%;
        border-radius: 6px;
    }

    .checkbox-container {
        margin-top: 10px;
    }

    .form-checkbox {
        margin-top: 5px;
    }

    /* Button Styles */
    .save-container {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 20px;
    }

    .save-button {
        background-color: var(--dotnet-primary);
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 8px;
        transition: all 0.2s ease;
    }

        .save-button:hover {
            background-color: #4311a8;
            transform: translateY(-2px);
        }

    .clear-button {
        background-color: transparent;
        color: var(--dotnet-secondary);
        border: 2px solid var(--dotnet-secondary);
        padding: 12px 24px;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 8px;
        transition: all 0.2s ease;
    }

        .clear-button:hover {
            background-color: var(--dotnet-secondary);
            color: white;
            transform: translateY(-2px);
        }

    .save-icon, .clear-icon {
        font-size: 18px;
    }

    /* Grid Styling */
    .voucher-grid {
        width: 100%;
        border-radius: 8px;
        overflow: hidden;
    }

    /* Footer */
    .dashboard-footer {
        margin-top: auto;
        text-align: center;
        padding: 20px;
        color: #666;
        font-size: 14px;
    }

    .footer-link {
        color: var(--dotnet-primary);
        text-decoration: none;
        font-weight: 600;
        transition: color 0.2s ease;
    }

        .footer-link:hover {
            color: var(--dotnet-secondary);
            text-decoration: underline;
        }

    /* Loading Animation */
    .loader-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
    }

    .circular-dots-loader {
        position: relative;
        width: 60px;
        height: 60px;
        margin-bottom: 15px;
    }

        .circular-dots-loader .dot {
            position: absolute;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            animation: rotate 1.5s infinite linear;
        }

        .circular-dots-loader .dot-1 {
            background-color: var(--dotnet-primary);
            animation-delay: 0s;
        }

        .circular-dots-loader .dot-2 {
            background-color: var(--dotnet-accent);
            animation-delay: -0.5s;
        }

        .circular-dots-loader .dot-3 {
            background-color: var(--dotnet-secondary);
            animation-delay: -1s;
        }

    .loading-text {
        color: var(--dotnet-dark);
        font-size: 16px;
        margin-top: 10px;
    }

    /* Toast Styling */
    ::deep .e-toast-container {
        z-index: 1000;
    }

        ::deep .e-toast-container .e-toast {
            border: 0;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
        }

    /* Success Toast */
    ::deep .e-toast-success {
        background-color: #ebf7ee;
        border-left: 4px solid #4CAF50;
        color: #2E7D32;
    }

        ::deep .e-toast-success .e-toast-title {
            color: #2E7D32;
            font-weight: 700;
        }

        ::deep .e-toast-success .e-toast-content {
            color: #2E7D32;
        }

        ::deep .e-toast-success .e-toast-close-icon {
            color: #2E7D32;
        }

        ::deep .e-toast-success::before {
            content: "✓";
            font-size: 18px;
            font-weight: bold;
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
        }

    /* Info Toast */
    ::deep .e-toast-info {
        background-color: #e3f2fd;
        border-left: 4px solid #2196F3;
        color: #0d47a1;
    }

        ::deep .e-toast-info .e-toast-title {
            color: #0d47a1;
            font-weight: 700;
        }

        ::deep .e-toast-info .e-toast-content {
            color: #0d47a1;
        }

        ::deep .e-toast-info .e-toast-close-icon {
            color: #0d47a1;
        }

        ::deep .e-toast-info::before {
            content: "ℹ";
            font-size: 18px;
            font-weight: bold;
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
        }

    /* Error Toast */
    ::deep .e-toast-danger {
        background-color: #fdeeee;
        border-left: 4px solid #F44336;
        color: #C62828;
    }

        ::deep .e-toast-danger .e-toast-title {
            color: #C62828;
            font-weight: 700;
        }

        ::deep .e-toast-danger .e-toast-content {
            color: #C62828;
        }

        ::deep .e-toast-danger .e-toast-close-icon {
            color: #C62828;
        }

        ::deep .e-toast-danger::before {
            content: "⚠";
            font-size: 18px;
            font-weight: bold;
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
        }

    /* Toast Animation */
    ::deep .e-toast-container .e-toast {
        padding: 10px 10px 10px 40px;
        position: relative;
        animation-fill-mode: both;
    }

    /* Animations */
    @@keyframes rotate {
        0% {
            transform: rotate(0deg) translate(-24px) rotate(0deg);
        }

        100% {
            transform: rotate(360deg) translate(-24px) rotate(-360deg);
        }
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .page-header {
            flex-direction: column;
            gap: 15px;
            align-items: flex-start;
        }

        .form-row {
            grid-template-columns: 1fr;
        }

        .save-container {
            flex-direction: column;
            gap: 10px;
        }
    }
</style>