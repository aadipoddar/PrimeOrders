@page "/Inventory/Kitchen-Issue"
@page "/Inventory/Kitchen-Issue/{KitchenIssueId:int}"

<PageTitle>Kitchen Issue - Prime Orders</PageTitle>

<SfToast @ref="_sfErrorToast"
		 ID="toast_error"
		 Title="Error"
		 Content="Some Error Message"
		 Timeout="3000"
		 ShowCloseButton="true"
		 CssClass="e-toast-danger">
	<ToastPosition X="Right" Y="Top" />
	<ToastAnimationSettings>
		<ToastShowAnimationSettings Effect="ToastEffect.SlideRightIn" Duration="600" Easing="ToastEasing.Linear" />
		<ToastHideAnimationSettings Effect="ToastEffect.SlideRightOut" Duration="600" Easing="ToastEasing.Linear" />
	</ToastAnimationSettings>
</SfToast>

<SfToast @ref="_sfSuccessToast"
		 ID="toast_success"
		 Title="Success"
		 Content="Kitchen issue saved successfully."
		 Timeout="1000"
		 ShowCloseButton="true"
		 CssClass="e-toast-success">
	<ToastPosition X="Right" Y="Top" />
	<ToastEvents Closed='() => NavManager.NavigateTo("/Inventory/Kitchen-Issue", forceLoad: true)' />
	<ToastAnimationSettings>
		<ToastShowAnimationSettings Effect="ToastEffect.SlideRightIn" Duration="600" Easing="ToastEasing.Linear" />
		<ToastHideAnimationSettings Effect="ToastEffect.SlideRightOut" Duration="600" Easing="ToastEasing.Linear" />
	</ToastAnimationSettings>
</SfToast>

@if (_isLoading)
{
	<div class="loader-container">
		<div class="circular-dots-loader">
			<span class="dot dot-1"></span>
			<span class="dot dot-2"></span>
			<span class="dot dot-3"></span>
		</div>
		<p class="loading-text">Loading kitchen issue page...</p>
	</div>
}
else
{
	<div class="kitchen-issue-container">
		<div class="page-header">
			<h1 class="page-title">Kitchen Issue Management</h1>
			<button @onclick='() => NavManager.NavigateTo("/Inventory-Dashboard")' class="back-button">
				<span class="back-icon">←</span> Back to Inventory
			</button>
		</div>

		<div class="kitchen-issue-content">
			<div class="selection-card card">
				<div class="card-header">
					<h2>Kitchen Selection</h2>
					<p class="card-info">Select the kitchen to issue materials to</p>
				</div>
				<div class="card-body">
					<div class="form-row">
						<div class="form-group">
							<label>Kitchen</label>
							<SfComboBox TValue="int"
										TItem="KitchenModel"
										Placeholder="Select a Kitchen"
										DataSource="@_kitchens"
										@bind-Value="_kitchenIssue.KitchenId"
										CssClass="form-control"
										FloatLabelType="FloatLabelType.Never">
								<ComboBoxFieldSettings Value="Id" Text="Name" />
							</SfComboBox>
						</div>

						<div class="form-group">
							<label>Transaction Number</label>
							<SfTextBox Value="@_kitchenIssue.TransactionNo"
									   Placeholder="Transaction No"
									   Readonly=true
									   CssClass="form-control" />
						</div>

						<div class="form-group">
							<label>Issue Date</label>
							<SfDatePicker Placeholder="Select Issue Date"
										  @bind-Value="_kitchenIssue.IssueDate"
										  CssClass="form-control" />
						</div>

						@if (KitchenIssueId.HasValue && KitchenIssueId.Value > 0)
						{
							<div class="form-group">
								<div class="status-checkbox-container">
									<SfCheckBox @bind-Checked="_kitchenIssue.Status" Label="Active Status" CssClass="status-checkbox" />
								</div>
							</div>
						}
					</div>
				</div>
			</div>

			<div class="materials-selection-card card">
				<div class="card-header">
					<h2>Raw Materials Selection</h2>
					<p class="card-info">Select materials to issue to the kitchen</p>
				</div>
				<div class="card-body">
					<div class="form-row">
						<div class="form-group">
							<label>Raw Material Category</label>
							<SfComboBox TValue="int"
										TItem="RawMaterialCategoryModel"
										Placeholder="Select a Raw Material Category"
										DataSource="@_rawMaterialCategories"
										@bind-Value="_selectedRawMaterialCategoryId"
										CssClass="form-control"
										FloatLabelType="FloatLabelType.Never">
								<ComboBoxFieldSettings Value="Id" Text="Name" />
								<ComboBoxEvents TItem="RawMaterialCategoryModel" TValue="int" ValueChange="@RawMaterialCategoryComboBoxValueChangeHandler" />
							</SfComboBox>
						</div>

						<div class="form-group">
							<label>Raw Material</label>
							<SfComboBox TValue="int"
										TItem="RawMaterialModel"
										Placeholder="Select a Raw Material"
										DataSource="@_rawMaterials"
										@bind-Value="_selectedRawMaterialId"
										CssClass="form-control"
										FloatLabelType="FloatLabelType.Never">
								<ComboBoxFieldSettings Value="Id" Text="Name" />
							</SfComboBox>
						</div>

						<div class="form-group">
							<label>Quantity</label>
							<SfNumericTextBox TValue="double"
											  Decimals=3
											  Min=1
											  Placeholder="Enter Quantity"
											  @bind-Value="@_selectedRawMaterialQuantity"
											  CssClass="form-control"
											  FloatLabelType="FloatLabelType.Never" />
						</div>

						<div class="form-group action-group">
							<button @onclick="OnAddButtonClick" class="add-button">
								<span class="add-icon">+</span> Add Material
							</button>
						</div>
					</div>
				</div>
			</div>

			<div class="cart-card card">
				<div class="card-header">
					<h2>Materials Issue List</h2>
					<p class="card-info">Click on a row to remove an item</p>
				</div>
				<div class="card-body">
					<SfGrid DataSource="@_rawMaterialCart"
							ID="_sfGrid"
							@ref="_sfGrid"
							Height="350px"
							CssClass="cart-grid">
						<GridEvents RowSelected="RowSelectHandler" TValue="ItemRecipeModel" />
						<GridColumns>
							<GridColumn Field="@nameof(ItemRecipeModel.ItemCategoryId)" Visible=false />
							<GridColumn Field="@nameof(ItemRecipeModel.ItemId)" Visible=false />
							<GridColumn Field="@nameof(ItemRecipeModel.ItemName)" HeaderText="Raw Material" Width="180" />
							<GridColumn Field="@nameof(ItemRecipeModel.Quantity)" HeaderText="Quantity" Width="120" Format="N3" TextAlign="TextAlign.Right" />
						</GridColumns>
					</SfGrid>

					<div class="save-container">
						<button @onclick="OnSaveButtonClick" class="save-button">
							<span class="save-icon">💾</span> Submit Kitchen Issue
						</button>
					</div>
				</div>
			</div>
		</div>

		<div class="dashboard-footer">
			<p>&copy; @DateTime.Now.Year A Product By <a href="https://aadisoft.vercel.app" target="_blank" class="footer-link">AadiSoft</a>. All rights reserved.</p>
		</div>
	</div>
}

<style>
	:root {
		--dotnet-primary: #512BD4;
		--dotnet-secondary: #68217A;
		--dotnet-accent: #00A4EF;
		--dotnet-light: #F7F7F7;
		--dotnet-dark: #1E1E1E;
		--dotnet-border: rgba(0, 0, 0, 0.1);
	}

	/* General Layout */
	.kitchen-issue-container {
		display: flex;
		flex-direction: column;
		min-height: 100vh;
		padding: 20px;
		background: linear-gradient(135deg, rgba(81, 43, 212, 0.05) 0%, rgba(104, 33, 122, 0.05) 100%);
	}

	/* Page Header */
	.page-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 25px;
	}

	.page-title {
		color: var(--dotnet-secondary);
		font-size: 28px;
		font-weight: 700;
		margin: 0;
	}

	.back-button {
		background-color: transparent;
		border: 2px solid var(--dotnet-secondary);
		color: var(--dotnet-secondary);
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: inline-flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
	}

		.back-button:hover {
			background-color: var(--dotnet-secondary);
			color: white;
		}

	.back-icon {
		font-size: 16px;
	}

	/* Content layout */
	.kitchen-issue-content {
		display: flex;
		flex-direction: column;
		gap: 25px;
		margin-bottom: 30px;
	}

	/* Cards */
	.card {
		background-color: white;
		border-radius: 15px;
		box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
		overflow: hidden;
	}

	.card-header {
		background-color: var(--dotnet-light);
		padding: 15px 20px;
		border-bottom: 1px solid var(--dotnet-border);
	}

		.card-header h2 {
			margin: 0;
			color: var(--dotnet-secondary);
			font-size: 20px;
			font-weight: 600;
		}

	.card-info {
		margin: 5px 0 0 0;
		color: #666;
		font-size: 14px;
		font-style: italic;
	}

	.card-body {
		padding: 20px;
	}

	/* Form Layout */
	.form-row {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
		gap: 20px;
	}

	.form-group {
		margin-bottom: 15px;
	}

		.form-group label {
			display: block;
			margin-bottom: 8px;
			font-weight: 500;
			color: var(--dotnet-dark);
		}

	.form-control {
		width: 100%;
		border-radius: 6px;
	}

	/* Buttons */
	.action-group {
		display: flex;
		align-items: flex-end;
	}

	.add-button {
		background-color: var(--dotnet-accent);
		color: white;
		border: none;
		padding: 10px 18px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
		margin-top: 24px;
	}

		.add-button:hover {
			background-color: #0078d4;
			transform: translateY(-2px);
		}

	.add-icon {
		font-size: 18px;
	}

	.save-container {
		display: flex;
		justify-content: flex-end;
		margin-top: 20px;
	}

	.save-button {
		background-color: var(--dotnet-primary);
		color: white;
		border: none;
		padding: 12px 24px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
	}

		.save-button:hover {
			background-color: #4311a8;
			transform: translateY(-2px);
		}

	.save-icon {
		font-size: 18px;
	}

	/* Status Checkbox Styling */
	.status-checkbox-container {
		display: flex;
		align-items: center;
		margin: 5px 0;
	}

	::deep .status-checkbox .e-frame {
		border-color: var(--dotnet-primary);
	}

	::deep .status-checkbox .e-check {
		color: white;
	}

	::deep .status-checkbox .e-label {
		font-weight: 500;
		color: var(--dotnet-dark);
		margin-left: 8px;
	}

	/* Grid Styling */
	.cart-grid {
		width: 100%;
		border-radius: 8px;
		overflow: hidden;
	}

	/* Footer */
	.dashboard-footer {
		margin-top: auto;
		text-align: center;
		padding: 20px;
		color: #666;
		font-size: 14px;
	}

	.footer-link {
		color: var(--dotnet-primary);
		text-decoration: none;
		font-weight: 600;
		transition: color 0.2s ease;
	}

		.footer-link:hover {
			color: var(--dotnet-secondary);
			text-decoration: underline;
		}

	/* Loading Animation */
	.loader-container {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		height: 100vh;
	}

	.circular-dots-loader {
		position: relative;
		width: 60px;
		height: 60px;
		margin-bottom: 15px;
	}

		.circular-dots-loader .dot {
			position: absolute;
			width: 12px;
			height: 12px;
			border-radius: 50%;
			animation: rotate 1.5s infinite linear;
		}

		.circular-dots-loader .dot-1 {
			background-color: var(--dotnet-primary);
			animation-delay: 0s;
		}

		.circular-dots-loader .dot-2 {
			background-color: var(--dotnet-accent);
			animation-delay: -0.5s;
		}

		.circular-dots-loader .dot-3 {
			background-color: var(--dotnet-secondary);
			animation-delay: -1s;
		}

	.loading-text {
		color: var(--dotnet-dark);
		font-size: 16px;
		margin-top: 10px;
	}

	/* Animations */
	@@keyframes rotate {
		0% {
			transform: rotate(0deg) translate(-24px) rotate(0deg);
		}

		100% {
			transform: rotate(360deg) translate(-24px) rotate(-360deg);
		}
	}

	/* Responsive Design */
	@@media (max-width: 1200px) {
		.kitchen-issue-content {
			grid-template-columns: 1fr;
		}
	}

	@@media (max-width: 992px) {
		.materials-container {
			grid-template-columns: 1fr;
		}
	}

	@@media (max-width: 768px) {
		.page-header {
			flex-direction: column;
			gap: 15px;
			align-items: flex-start;
		}

		.form-row {
			grid-template-columns: 1fr;
		}
	}

	/* Toast Styling */
	::deep .e-toast-container {
		z-index: 1000;
	}

		::deep .e-toast-container .e-toast {
			border: 0;
			border-radius: 8px;
			box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
		}

	/* Success Toast */
	::deep .e-toast-success {
		background-color: #ebf7ee;
		border-left: 4px solid #4CAF50;
		color: #2E7D32;
	}

		::deep .e-toast-success .e-toast-title {
			color: #2E7D32;
			font-weight: 700;
		}

		::deep .e-toast-success .e-toast-content {
			color: #2E7D32;
		}

		::deep .e-toast-success .e-toast-close-icon {
			color: #2E7D32;
		}

		::deep .e-toast-success::before {
			content: "✓";
			font-size: 18px;
			font-weight: bold;
			position: absolute;
			left: 15px;
			top: 50%;
			transform: translateY(-50%);
		}

	/* Error Toast */
	::deep .e-toast-danger {
		background-color: #fdeeee;
		border-left: 4px solid #F44336;
		color: #C62828;
	}

		::deep .e-toast-danger .e-toast-title {
			color: #C62828;
			font-weight: 700;
		}

		::deep .e-toast-danger .e-toast-content {
			color: #C62828;
		}

		::deep .e-toast-danger .e-toast-close-icon {
			color: #C62828;
		}

		::deep .e-toast-danger::before {
			content: "⚠";
			font-size: 18px;
			font-weight: bold;
			position: absolute;
			left: 15px;
			top: 50%;
			transform: translateY(-50%);
		}

	/* Toast Animation */
	::deep .e-toast-container .e-toast {
		padding: 10px 10px 10px 40px;
		position: relative;
		animation-fill-mode: both;
	}
</style>