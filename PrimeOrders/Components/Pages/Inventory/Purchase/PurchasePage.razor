@page "/Inventory/Purchase"
@page "/Inventory/Purchase/{PurchaseId:int}"
@using PrimeBakesLibrary.Data.Common
@using PrimeBakesLibrary.Models.Accounts.Masters

<PageTitle>Purchase - Prime Orders</PageTitle>

<SfToast @ref="_sfErrorToast"
		 ID="toast_error"
		 Title="Error"
		 Content="Some Error Message"
		 Timeout="3000"
		 ShowCloseButton="true"
		 CssClass="e-toast-danger">
	<ToastPosition X="Right" Y="Top" />
	<ToastAnimationSettings>
		<ToastShowAnimationSettings Effect="ToastEffect.SlideRightIn" Duration="600" Easing="ToastEasing.Linear" />
		<ToastHideAnimationSettings Effect="ToastEffect.SlideRightOut" Duration="600" Easing="ToastEasing.Linear" />
	</ToastAnimationSettings>
</SfToast>

<SfToast @ref="_sfSuccessToast"
		 ID="toast_success"
		 Title="Success"
		 Content="Purchase saved successfully."
		 Timeout="1000"
		 ShowCloseButton="true"
		 CssClass="e-toast-success">
	<ToastPosition X="Right" Y="Top" />
	<ToastEvents Closed='() => NavManager.NavigateTo("/Inventory/Purchase", forceLoad: true)' />
	<ToastAnimationSettings>
		<ToastShowAnimationSettings Effect="ToastEffect.SlideRightIn" Duration="600" Easing="ToastEasing.Linear" />
		<ToastHideAnimationSettings Effect="ToastEffect.SlideRightOut" Duration="600" Easing="ToastEasing.Linear" />
	</ToastAnimationSettings>
</SfToast>

@if (_isLoading)
{
	<div class="loader-container">
		<div class="circular-dots-loader">
			<span class="dot dot-1"></span>
			<span class="dot dot-2"></span>
			<span class="dot dot-3"></span>
		</div>
		<p class="loading-text">Loading purchase page...</p>
	</div>
}
else
{
	<div class="purchase-container" tabindex="0">
		<!-- Raw Material Search Indicator -->
		<div id="materialSearchIndicator" class="material-search-indicator" style="display: none;">
			<div class="search-header">
				<span class="search-icon">🔍</span>
				<span>Material Search: </span>
				<span id="searchText" class="search-text"></span>
			</div>
			<div id="searchResults" class="search-results"></div>
			<div class="search-help">
				<span>↑↓ Navigate • Enter Select • Esc Cancel</span>
			</div>
		</div>

		<div class="page-header">
			<h1 class="page-title">Purchase Management</h1>
			<button @onclick='() => NavManager.NavigateTo("/Inventory-Dashboard")' class="back-button">
				<span class="back-icon">←</span> Back to Inventory
			</button>
		</div>

		<div class="action-buttons">
			<button @onclick="() => _billDetailsDialogVisible = true" class="action-button">
				<span class="action-icon">📄</span> Bill Details
			</button>
			<button @onclick="() => _supplierDialogVisible = true" class="action-button">
				<span class="action-icon">🏢</span> Supplier
			</button>
			<button @onclick="() => _adjustmentsDialogVisible = true" class="action-button">
				<span class="action-icon">💰</span> Adjustments
			</button>
			<button @onclick="() => _purchaseSummaryDialogVisible = true" class="action-button action-button-primary">
				<span class="action-icon">📊</span> Save
			</button>
		</div>

		<div class="main-content">
			<div class="card materials-card">
				<div class="card-header">
					<h2>Raw Materials Selection</h2>
					<p class="card-info">Press <kbd>F2</kbd> to search materials, click Add to Cart or row to add to cart</p>
				</div>
				<div class="card-body">
					<SfGrid DataSource="@(_isMaterialSearchActive? _filteredRawMaterials : _rawMaterials)"
							ID="_sfRawMaterialGrid"
							@ref="_sfRawMaterialGrid"
							AllowSorting="true"
							AllowResizing="true"
							AllowPaging="true"
							AllowFiltering="true"
							Height="450px"
							CssClass="modern-materials-grid">
						<GridPageSettings PageSize="10" />
						<GridColumns>
							<GridColumn Field=@nameof(RawMaterialModel.Name) Width="100%" />
							<GridColumn Field=@nameof(RawMaterialModel.MRP) />
							<GridColumn AllowFiltering="false" />
						</GridColumns>
						<GridTemplates>
							<RowTemplate>
								@{
									var material = (context as RawMaterialModel);
									var isSelected = _isMaterialSearchActive && material?.Id == _selectedRawMaterial.Id;
								}
								<tr class="material-row @(isSelected ? "selected-material-row" : "")">
									<td class="material-name">
										<div class="name-wrapper">
											<span class="name-text" title="@material?.Name">@material?.Name</span>
										</div>
									</td>
									<td class="material-rate">
										<div class="rate-wrapper">
											<span class="currency-symbol">₹</span>
											<span class="rate-value">@material?.MRP.ToString("N2")</span>
										</div>
									</td>
									<td class="material-action">
										<button class="add-to-cart-btn"
												@onclick="() => OnAddToCartButtonClick(material)"
												@onclick:stopPropagation="true"
												title="Add to Cart">
											<span class="cart-icon">🛒</span>
											<span class="cart-text">Add</span>
										</button>
									</td>
								</tr>
							</RowTemplate>
						</GridTemplates>
					</SfGrid>
				</div>
			</div>

			<div class="card cart-card">
				<div class="card-header">
					<h2>Purchase Cart</h2>
					<p class="card-info">Click on a row to edit details</p>
				</div>
				<div class="card-body">
					<SfGrid DataSource="@_purchaseRawMaterialCarts"
							ID="_sfRawMaterialCartGrid"
							@ref="_sfRawMaterialCartGrid"
							AllowSorting="true"
							AllowFiltering="true"
							AllowResizing="true"
							Height="450px"
							CssClass="cart-grid">
						<GridEvents RowSelected="RawMaterialCartRowSelectHandler" TValue="PurchaseRawMaterialCartModel" />
						<GridColumns>
							<GridColumn Field=@nameof(PurchaseRawMaterialCartModel.RawMaterialName) HeaderText="Material" Width="200" />
							<GridColumn Field=@nameof(PurchaseRawMaterialCartModel.Quantity) HeaderText="Qty" Width="100" TextAlign="TextAlign.Right" />
							<GridColumn Field=@nameof(PurchaseRawMaterialCartModel.Rate) HeaderText="Rate" Width="130" Format="N2" TextAlign="TextAlign.Right" />
							<GridColumn Field=@nameof(PurchaseRawMaterialCartModel.Total) HeaderText="Total" Width="150" Format="N2" TextAlign="TextAlign.Right" />
						</GridColumns>
					</SfGrid>
				</div>
			</div>
		</div>

		<div class="dashboard-footer">
			<p>&copy; @DateTime.Now.Year A Product By <a href="https://aadisoft.vercel.app" target="_blank" class="footer-link">AadiSoft</a>. All rights reserved.</p>
		</div>
	</div>
}


<!-- Bill Details Dialog -->
<SfDialog ID="_sfBillDetailsDialog"
		  @ref="_sfBillDetailsDialog"
		  Width="500px"
		  Height="auto"
		  AllowDragging="true"
		  EnableResize="false"
		  @bind-Visible="_billDetailsDialogVisible"
		  IsModal="true">
	<DialogPositionData X="Center" Y="Center" />
	<DialogTemplates>
		<Header>
			<div class="dialog-header">
				<span>Bill Details</span>
			</div>
		</Header>
		<Content>
			<div class="dialog-content">
				<div class="form-group">
					<label>Bill Number</label>
					@{
						var isBillNoReadonly = PurchaseId.HasValue;
					}
					<SfTextBox @bind-Value="_purchase.BillNo"
							   Placeholder="Enter Bill No"
							   Readonly="isBillNoReadonly"
							   CssClass="form-control" />
				</div>

				<div class="form-group">
					<label>Bill Date</label>
					<SfDatePicker Value="_purchase.BillDateTime"
								  Placeholder="Select Date"
								  CssClass="form-control">
						<DatePickerEvents TValue="DateTime" ValueChange="PurchaseDateChanged" />
					</SfDatePicker>
				</div>

				<div class="form-group full-width">
					<label>Remarks</label>
					<SfTextBox @bind-Value="_purchase.Remarks"
							   Placeholder="Add remarks (optional)"
							   Multiline="true"
							   CssClass="form-control" />
				</div>
			</div>
		</Content>
		<FooterTemplate>
			<div class="dialog-footer">
				<SfButton Content="Close" OnClick="() => _billDetailsDialogVisible = false" CssClass="dialog-button" />
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<!-- Supplier Dialog -->
<SfDialog ID="_sfSupplierDialog"
		  @ref="_sfSupplierDialog"
		  Width="500px"
		  Height="auto"
		  AllowDragging="true"
		  EnableResize="false"
		  @bind-Visible="_supplierDialogVisible"
		  IsModal="true">
	<DialogPositionData X="Center" Y="Center" />
	<DialogTemplates>
		<Header>
			<div class="dialog-header">
				<span>Supplier Details</span>
			</div>
		</Header>
		<Content>
			<div class="dialog-content">
				<div class="form-group">
					<label>Supplier</label>
					<SfAutoComplete TValue="LedgerModel"
									TItem="LedgerModel"
									Value="@_supplier"
									Placeholder="Search Supplier..."
									FloatLabelType='@FloatLabelType.Auto'
									DataSource="@_suppliers">
						<AutoCompleteEvents TItem="LedgerModel" TValue="LedgerModel" ValueChange="OnSupplierChanged" />
						<AutoCompleteFieldSettings Value="Name" />
					</SfAutoComplete>
				</div>

				<div class="supplier-details">
					<div class="detail-row">
						<span class="detail-label">GST No:</span>
						<span class="detail-value">@_supplier?.GSTNo</span>
					</div>
					<div class="detail-row">
						<span class="detail-label">Phone:</span>
						<span class="detail-value">@_supplier?.Phone</span>
					</div>
					<div class="detail-row">
						<span class="detail-label">Address:</span>
						<span class="detail-value">@_supplier?.Address</span>
					</div>
				</div>
			</div>
		</Content>
		<FooterTemplate>
			<div class="dialog-footer">
				<SfButton Content="Close" OnClick="() => _supplierDialogVisible = false" CssClass="dialog-button" />
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<!-- Adjustments Dialog -->
<SfDialog ID="_sfAdjustmentsDialog"
		  @ref="_sfAdjustmentsDialog"
		  Width="500px"
		  Height="auto"
		  AllowDragging="true"
		  EnableResize="false"
		  @bind-Visible="_adjustmentsDialogVisible"
		  IsModal="true">
	<DialogPositionData X="Center" Y="Center" />
	<DialogTemplates>
		<Header>
			<div class="dialog-header">
				<span>Adjustments</span>
			</div>
		</Header>
		<Content>
			<div class="dialog-content form-grid">
				<div class="form-group">
					<label>Cash Discount %</label>
					<SfNumericTextBox TValue="decimal"
									  Value="_purchase.CDPercent"
									  ValueChanged="CashDiscountPercentValueChanged"
									  Max="100"
									  Min="0"
									  Format="N2"
									  CssClass="form-control" />
				</div>

				<div class="form-group">
					<label>Cash Discount Amount</label>
					<div class="readonly-currency">@((_afterDiscounts * (_purchase.CDPercent / 100)).FormatIndianCurrency())</div>
				</div>
			</div>
		</Content>
		<FooterTemplate>
			<div class="dialog-footer">
				<SfButton Content="Close" OnClick="() => _adjustmentsDialogVisible = false" CssClass="dialog-button" />
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<!-- Purchase Summary Dialog -->
<SfDialog ID="_sfPurchaseSummaryDialog"
		  @ref="_sfPurchaseSummaryDialog"
		  Width="600px"
		  Height="auto"
		  AllowDragging="true"
		  EnableResize="false"
		  @bind-Visible="_purchaseSummaryDialogVisible"
		  IsModal="true">
	<DialogPositionData X="Center" Y="Center" />
	<DialogTemplates>
		<Header>
			<div class="dialog-header">
				<span>Purchase Summary</span>
			</div>
		</Header>
		<Content>
			<div class="dialog-content">
				<div class="summary-section">
					<div class="summary-row">
						<span>Base Total:</span>
						<span class="amount">@_baseTotal.FormatIndianCurrency()</span>
					</div>
					<div class="summary-row">
						<span>After Discounts:</span>
						<span class="amount">@_afterDiscounts.FormatIndianCurrency()</span>
					</div>
					<div class="summary-row">
						<span>Sub Total:</span>
						<span class="amount">@_subTotal.FormatIndianCurrency()</span>
					</div>
					<div class="summary-row">
						<span>Cash Discount:</span>
						<span class="amount" style="color:green">-@((_afterDiscounts * (_purchase.CDPercent / 100)).FormatIndianCurrency())</span>
					</div>
					<div class="summary-row total-row">
						<span>Grand Total:</span>
						<span class="total-amount">@_total.FormatIndianCurrency()</span>
					</div>
				</div>
			</div>
		</Content>
		<FooterTemplate>
			<div class="dialog-footer">
				<div class="footer-buttons">
					<SfButton CssClass="save-button-dialog" Content="Save Purchase" IsPrimary="true" OnClick="OnSavePurchaseClick" />
					<SfButton CssClass="print-button-dialog" Content="Save & Print Invoice" OnClick="OnSaveAndPrintClick">
						<div class="button-content">
							<span class="print-icon">🖨️</span>
							<span>Save & Print Invoice</span>
						</div>
					</SfButton>
					<SfButton Content="Close" OnClick="() => _purchaseSummaryDialogVisible = false" CssClass="dialog-button" />
				</div>
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<!-- Quantity Dialog -->
<SfDialog ID="_sfQuantityDialog"
		  @ref="_sfQuantityDialog"
		  Width="400px"
		  Height="auto"
		  AllowDragging="true"
		  EnableResize="false"
		  @bind-Visible="_quantityDialogVisible"
		  IsModal="true">
	<DialogPositionData X="Center" Y="Center" />
	<DialogTemplates>
		<Header>
			<div class="dialog-header">
				<span>Select Quantity: </span>
				<span class="material-name">@_selectedRawMaterial.Name</span>
			</div>
		</Header>
		<Content>
			<div class="dialog-content">
				<div class="form-row">
					<div class="form-group">
						<label>Quantity</label>
						<SfNumericTextBox TValue="decimal"
										  @bind-Value="_selectedQuantity"
										  Min="0"
										  Format="N2"
										  CssClass="form-control" />
					</div>
					<div class="form-group">
						<label>Measuring Unit</label>
						<SfTextBox @bind-Value="_selectedMeasurementUnit"
								   CssClass="form-control"
								   Readonly=true />
					</div>
				</div>
				<div class="form-row">
					<div class="form-group full-width">
						<label>Rate</label>
						<SfNumericTextBox TValue="decimal"
										  @bind-Value="_selectedRate"
										  Min="0"
										  Format="N2"
										  CssClass="form-control" />
					</div>
				</div>
			</div>
		</Content>
		<FooterTemplate>
			<div class="dialog-footer">
				<div class="footer-buttons">
					<SfButton Content="Add to Cart" IsPrimary="true" OnClick="OnAddToCartClick" CssClass="dialog-button" />
					<SfButton Content="Cancel" OnClick="OnCancelQuantityDialogClick" CssClass="dialog-button" />
				</div>
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<!-- Raw Material Manage Dialog -->
<SfDialog ID="_sfRawMaterialManageDialog"
		  @ref="_sfRawMaterialManageDialog"
		  Width="1000px"
		  Height="800px"
		  AllowDragging="true"
		  EnableResize="true"
		  @bind-Visible="_dialogVisible"
		  IsModal="true">
	<DialogPositionData X="Center" Y="Center" />
	<DialogTemplates>
		<Header>
			<div class="dialog-header">
				<span>Manage Raw Material: </span>
				<span class="material-name">@_selectedRawMaterialCart.RawMaterialName</span>
			</div>
		</Header>

		<Content>
			<div class="dialog-content">
				<!-- Summary Panel above the tabs -->
				<div class="material-summary-panel">
					<div class="summary-highlights">
						<div class="highlight-item">
							<div class="highlight-label">Quantity</div>
							<div class="highlight-value">@_selectedRawMaterialCart.Quantity.ToString("N2")</div>
						</div>
						<div class="highlight-item">
							<div class="highlight-label">Base Total</div>
							<div class="highlight-value">@_selectedRawMaterialCart.BaseTotal.FormatIndianCurrency()</div>
						</div>
						<div class="highlight-item">
							<div class="highlight-label">Discount</div>
							<div class="highlight-value">@_selectedRawMaterialCart.DiscAmount.FormatIndianCurrency()</div>
						</div>
						<div class="highlight-item">
							<div class="highlight-label">Tax Total</div>
							<div class="highlight-value">@((_selectedRawMaterialCart.CGSTAmount + _selectedRawMaterialCart.SGSTAmount + _selectedRawMaterialCart.IGSTAmount).FormatIndianCurrency())</div>
						</div>
						<div class="highlight-item final">
							<div class="highlight-label">Final Total</div>
							<div class="highlight-value">@_selectedRawMaterialCart.Total.FormatIndianCurrency()</div>
						</div>
					</div>
				</div>

				<SfTab CssClass="material-tab" SwipeMode="~TabSwipeMode.Touch & ~TabSwipeMode.Mouse">
					<TabItems>
						<TabItem>
							<ChildContent>
								<TabHeader Text="Basic Info" />
							</ChildContent>
							<ContentTemplate>
								<div class="tab-content">
									<div class="form-row">
										<div class="form-group">
											<label>Rate</label>
											<SfNumericTextBox TValue="decimal"
															  Value="_selectedRawMaterialCart.Rate"
															  ValueChanged="DialogRateValueChanged"
															  CssClass="form-control" />
										</div>

										<div class="form-group">
											<label>Quantity</label>
											<SfNumericTextBox TValue="decimal"
															  Value="_selectedRawMaterialCart.Quantity"
															  ValueChanged="DialogQuantityValueChanged"
															  Min="0"
															  Format="N2"
															  CssClass="form-control" />
										</div>
									</div>

									<div class="form-row">
										<div class="form-group">
											<label>Measuring Unit</label>
											<SfTextBox Value="@_selectedRawMaterialCart.MeasurementUnit"
													   CssClass="form-control"
													   ValueChanged="DialogMeasuringUnitValueChanged" />
										</div>

										<div class="form-group">
											<label>Net Rate</label>
											<SfNumericTextBox TValue="decimal"
															  Value="_selectedRawMaterialCart.NetRate"
															  Format="N2"
															  Readonly=true
															  CssClass="form-control" />
										</div>
									</div>

									<div class="tab-summary">
										<div class="tab-summary-title">Summary</div>
										<div class="tab-summary-content">
											<div class="summary-item">
												<span class="summary-label">Base Amount:</span>
												<span class="summary-value">@_selectedRawMaterialCart.BaseTotal.FormatIndianCurrency()</span>
											</div>
											<div class="summary-divider"></div>
											<div class="summary-item final-total">
												<span class="summary-label">Final Total:</span>
												<span class="summary-value">@_selectedRawMaterialCart.Total.FormatIndianCurrency()</span>
											</div>
										</div>
									</div>
								</div>
							</ContentTemplate>
						</TabItem>

						<TabItem>
							<ChildContent>
								<TabHeader Text="Discount" />
							</ChildContent>
							<ContentTemplate>
								<div class="tab-content">
									<div class="form-row">
										<div class="form-group">
											<label>Discount %</label>
											<SfNumericTextBox TValue="decimal"
															  Value="_selectedRawMaterialCart.DiscPercent"
															  ValueChanged="DialogDiscPercentValueChanged"
															  Max="100"
															  Min="0"
															  Format="N2"
															  CssClass="form-control" />
										</div>

										<div class="form-group">
											<label>Discount Amount</label>
											<div class="readonly-currency">@_selectedRawMaterialCart.DiscAmount.FormatIndianCurrency()</div>
										</div>
									</div>

									<div class="tab-summary">
										<div class="tab-summary-title">Discount Summary</div>
										<div class="tab-summary-content">
											<div class="summary-item">
												<span class="summary-label">Base Amount:</span>
												<span class="summary-value">@_selectedRawMaterialCart.BaseTotal.FormatIndianCurrency()</span>
											</div>
											<div class="summary-item">
												<span class="summary-label">Discount:</span>
												<span class="summary-value">@_selectedRawMaterialCart.DiscAmount.FormatIndianCurrency()</span>
											</div>
											<div class="summary-item">
												<span class="summary-label">After Discount:</span>
												<span class="summary-value">@_selectedRawMaterialCart.AfterDiscount.FormatIndianCurrency()</span>
											</div>
											<div class="summary-divider"></div>
											<div class="summary-item final-total">
												<span class="summary-label">Final Total:</span>
												<span class="summary-value">@_selectedRawMaterialCart.Total.FormatIndianCurrency()</span>
											</div>
										</div>
									</div>
								</div>
							</ContentTemplate>
						</TabItem>

						<TabItem>
							<ChildContent>
								<TabHeader Text="Tax Details" />
							</ChildContent>
							<ContentTemplate>
								<div class="tab-content">
									<div class="tax-grid">
										<div class="tax-row">
											<div class="tax-column">
												<label>CGST %</label>
												<SfNumericTextBox TValue="decimal"
																  Value="_selectedRawMaterialCart.CGSTPercent"
																  ValueChanged="DialogCGSTPercentValueChanged"
																  Max="100"
																  Min="0"
																  Format="N2"
																  CssClass="form-control" />
											</div>
											<div class="tax-column">
												<label>CGST Amount</label>
												<div class="readonly-currency">@_selectedRawMaterialCart.CGSTAmount.FormatIndianCurrency()</div>
											</div>
										</div>

										<div class="tax-row">
											<div class="tax-column">
												<label>SGST %</label>
												<SfNumericTextBox TValue="decimal"
																  Value="_selectedRawMaterialCart.SGSTPercent"
																  ValueChanged="DialogSGSTPercentValueChanged"
																  Max="100"
																  Min="0"
																  Format="N2"
																  CssClass="form-control" />
											</div>
											<div class="tax-column">
												<label>SGST Amount</label>
												<div class="readonly-currency">@_selectedRawMaterialCart.SGSTAmount.FormatIndianCurrency()</div>
											</div>
										</div>

										<div class="tax-row">
											<div class="tax-column">
												<label>IGST %</label>
												<SfNumericTextBox TValue="decimal"
																  Value="_selectedRawMaterialCart.IGSTPercent"
																  ValueChanged="DialogIGSTPercentValueChanged"
																  Max="100"
																  Min="0"
																  Format="N2"
																  CssClass="form-control" />
											</div>
											<div class="tax-column">
												<label>IGST Amount</label>
												<div class="readonly-currency">@_selectedRawMaterialCart.IGSTAmount.FormatIndianCurrency()</div>
											</div>
										</div>
									</div>

									<div class="tab-summary">
										<div class="tab-summary-title">Tax Summary</div>
										<div class="tab-summary-content">
											<div class="summary-item">
												<span class="summary-label">CGST Amount:</span>
												<span class="summary-value">@_selectedRawMaterialCart.CGSTAmount.FormatIndianCurrency()</span>
											</div>
											<div class="summary-item">
												<span class="summary-label">SGST Amount:</span>
												<span class="summary-value">@_selectedRawMaterialCart.SGSTAmount.FormatIndianCurrency()</span>
											</div>
											<div class="summary-item">
												<span class="summary-label">IGST Amount:</span>
												<span class="summary-value">@_selectedRawMaterialCart.IGSTAmount.FormatIndianCurrency()</span>
											</div>
											<div class="summary-item">
												<span class="summary-label">Total Tax:</span>
												<span class="summary-value">@((_selectedRawMaterialCart.CGSTAmount + _selectedRawMaterialCart.SGSTAmount + _selectedRawMaterialCart.IGSTAmount).FormatIndianCurrency())</span>
											</div>
											<div class="summary-divider"></div>
											<div class="summary-item final-total">
												<span class="summary-label">Final Total:</span>
												<span class="summary-value">@_selectedRawMaterialCart.Total.FormatIndianCurrency()</span>
											</div>
										</div>
									</div>
								</div>
							</ContentTemplate>
						</TabItem>
					</TabItems>
				</SfTab>
			</div>
		</Content>

		<FooterTemplate>
			<div class="dialog-footer">
				<div class="footer-total">
					<span class="footer-total-label">Final Total:</span>
					<span class="footer-total-value">@_selectedRawMaterialCart.Total.FormatIndianCurrency()</span>
				</div>
				<div class="footer-buttons">
					<SfButton Content="Save" IsPrimary="true" OnClick="OnSaveRawMaterialManageClick" CssClass="dialog-button" />
					<SfButton Content="Remove From Cart" OnClick="OnRemoveFromCartRawMaterialManageClick" CssClass="dialog-button remove-button" />
				</div>
			</div>
		</FooterTemplate>
	</DialogTemplates>
</SfDialog>

<style>
	:root {
		--dotnet-primary: #512BD4;
		--dotnet-secondary: #68217A;
		--dotnet-accent: #00A4EF;
		--dotnet-light: #F7F7F7;
		--dotnet-dark: #1E1E1E;
		--dotnet-border: rgba(0, 0, 0, 0.1);
		--material-grid-border: #e1e5e9;
		--material-grid-hover: rgba(81, 43, 212, 0.08);
		--material-grid-selected: var(--dotnet-primary);
	}

	/* Keyboard key styling */
	kbd {
		background-color: #f8f9fa;
		border: 1px solid #ced4da;
		border-radius: 3px;
		color: #495057;
		font-family: Monaco, Consolas, monospace;
		font-size: 10px;
		padding: 2px 4px;
		box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);
	}

	/* Material Search Indicator */
	.material-search-indicator {
		position: fixed;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		background: var(--dotnet-primary);
		color: white;
		padding: 20px;
		border-radius: 12px;
		box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
		z-index: 10000;
		min-width: 300px;
		text-align: center;
	}

	.search-header {
		font-size: 18px;
		font-weight: 600;
		margin-bottom: 10px;
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 8px;
	}

	.search-icon {
		font-size: 20px;
	}

	.search-text {
		background: rgba(255, 255, 255, 0.2);
		padding: 4px 8px;
		border-radius: 4px;
		min-width: 100px;
		display: inline-block;
		margin-left: 8px;
	}

	.search-results {
		font-size: 14px;
		opacity: 0.9;
		margin: 10px 0;
	}

	.search-help {
		font-size: 12px;
		opacity: 0.8;
		border-top: 1px solid rgba(255, 255, 255, 0.3);
		padding-top: 10px;
		margin-top: 10px;
	}

	/* Modern Materials Grid Styling */
	.modern-materials-grid {
		border-radius: 12px;
		overflow: hidden;
		box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
		border: 1px solid var(--material-grid-border);
	}

	#_sfRawMaterialGrid.e-grid .e-gridheader .e-columnheader {
		display: none;
	}

	/* Custom Row Template Styling */
	.material-row {
		transition: all 0.2s ease;
		border-bottom: 1px solid var(--material-grid-border);
		cursor: pointer;
	}

		.material-row:hover {
			background-color: var(--material-grid-hover);
			transform: translateY(-1px);
			box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
		}

		.material-row:last-child {
			border-bottom: none;
		}

	/* Selected material row highlighting */
	.selected-material-row {
		background: linear-gradient(135deg, var(--dotnet-primary) 0%, var(--dotnet-secondary) 100%) !important;
		color: white !important;
		font-weight: 600 !important;
		box-shadow: 0 4px 15px rgba(81, 43, 212, 0.3);
		transform: translateY(-2px);
	}

		.selected-material-row .rate-wrapper {
			background-color: rgba(255, 255, 255, 0.2) !important;
			color: white !important;
			border-color: rgba(255, 255, 255, 0.3) !important;
		}

		.selected-material-row .name-text {
			color: white !important;
			font-weight: 700 !important;
		}

		.selected-material-row .currency-symbol,
		.selected-material-row .rate-value {
			color: white !important;
			font-weight: 700 !important;
		}

		.selected-material-row .add-to-cart-btn {
			background-color: rgba(255, 255, 255, 0.9) !important;
			color: var(--dotnet-primary) !important;
			border-color: rgba(255, 255, 255, 0.9) !important;
		}

			.selected-material-row .add-to-cart-btn:hover {
				background-color: white !important;
				transform: scale(1.1) !important;
			}

	/* Material Name Cell */
	.material-name {
		padding: 15px 12px;
		vertical-align: middle;
		width: auto;
		min-width: 300px;
	}

	.name-wrapper {
		display: flex;
		align-items: center;
		width: 100%;
		overflow: hidden;
	}

	.name-text {
		font-weight: 500;
		color: var(--dotnet-dark);
		font-size: 15px;
		line-height: 1.4;
		transition: all 0.2s ease;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		width: 100%;
	}

	.material-row:hover .name-text {
		color: var(--dotnet-primary);
		font-weight: 600;
		white-space: normal;
		overflow: visible;
		text-overflow: initial;
	}

	/* Material Rate Cell */
	.material-rate {
		padding: 15px 12px;
		vertical-align: middle;
		text-align: right;
		width: 180px;
	}

	.rate-wrapper {
		display: inline-flex;
		align-items: center;
		gap: 6px;
		background-color: var(--dotnet-light);
		padding: 10px 16px;
		border-radius: 8px;
		border: 1px solid var(--material-grid-border);
		transition: all 0.2s ease;
		width: 100%;
		justify-content: center;
	}

	.material-row:hover .rate-wrapper {
		background-color: var(--dotnet-primary);
		border-color: var(--dotnet-primary);
		transform: scale(1.05);
		box-shadow: 0 2px 8px rgba(81, 43, 212, 0.2);
	}

	.currency-symbol {
		font-weight: 600;
		color: var(--dotnet-secondary);
		font-size: 14px;
		transition: color 0.2s ease;
	}

	.rate-value {
		font-weight: 700;
		color: var(--dotnet-secondary);
		font-size: 15px;
		transition: color 0.2s ease;
	}

	.material-row:hover .currency-symbol,
	.material-row:hover .rate-value {
		color: white;
	}

	/* Material Action Cell */
	.material-action {
		padding: 15px 12px;
		vertical-align: middle;
		text-align: center;
		width: 120px;
	}

	.add-to-cart-btn {
		background-color: var(--dotnet-primary);
		color: white;
		border: 2px solid var(--dotnet-primary);
		padding: 8px 12px;
		border-radius: 8px;
		font-weight: 600;
		font-size: 12px;
		cursor: pointer;
		display: inline-flex;
		align-items: center;
		gap: 6px;
		transition: all 0.2s ease;
		white-space: nowrap;
		text-transform: uppercase;
		letter-spacing: 0.5px;
	}

		.add-to-cart-btn:hover {
			background-color: #4311a8;
			border-color: #4311a8;
			transform: scale(1.1);
			box-shadow: 0 4px 12px rgba(81, 43, 212, 0.3);
		}

		.add-to-cart-btn:active {
			transform: scale(0.95);
		}

	.cart-icon {
		font-size: 14px;
	}

	.cart-text {
		font-weight: 700;
	}

	/* Grid Pagination Styling */
	.modern-materials-grid ::deep .e-grid .e-pager {
		background-color: var(--dotnet-light);
		border-top: 1px solid var(--material-grid-border);
		padding: 12px;
	}

		.modern-materials-grid ::deep .e-grid .e-pager .e-pagercontainer {
			background-color: transparent;
		}

		.modern-materials-grid ::deep .e-grid .e-pager .e-numericitem {
			border-radius: 6px;
			margin: 0 2px;
			font-weight: 500;
			transition: all 0.2s ease;
		}

		.modern-materials-grid ::deep .e-grid .e-pager .e-currentitem {
			background-color: var(--dotnet-primary);
			color: white;
			font-weight: 600;
		}

	/* General Layout */
	.purchase-container {
		display: flex;
		flex-direction: column;
		min-height: 100vh;
		padding: 20px;
		background: linear-gradient(135deg, rgba(81, 43, 212, 0.05) 0%, rgba(104, 33, 122, 0.05) 100%);
	}

	/* Page Header */
	.page-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 20px;
	}

	.page-title {
		color: var(--dotnet-secondary);
		font-size: 28px;
		font-weight: 700;
		margin: 0;
	}

	.back-button {
		background-color: transparent;
		border: 2px solid var(--dotnet-secondary);
		color: var(--dotnet-secondary);
		padding: 8px 16px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: inline-flex;
		align-items: center;
		gap: 8px;
		transition: all 0.2s ease;
	}

		.back-button:hover {
			background-color: var(--dotnet-secondary);
			color: white;
		}

	.back-icon {
		font-size: 16px;
	}

	/* Action Buttons */
	.action-buttons {
		display: flex;
		gap: 15px;
		margin-bottom: 25px;
		flex-wrap: wrap;
	}

	.action-button {
		background-color: white;
		border: none;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
		color: var(--dotnet-secondary);
		padding: 12px 20px;
		border-radius: 8px;
		cursor: pointer;
		font-weight: 600;
		display: inline-flex;
		align-items: center;
		gap: 10px;
		transition: all 0.2s ease;
		flex: 1;
		min-width: 150px;
		justify-content: center;
	}

		.action-button:hover {
			transform: translateY(-3px);
			box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
		}

	.action-icon {
		font-size: 18px;
	}

	.action-button-primary {
		background-color: var(--dotnet-primary);
		color: white;
	}

		.action-button-primary:hover {
			background-color: #4311a8;
		}

	/* Main Content */
	.main-content {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 25px;
		margin-bottom: 30px;
	}

	/* Cards */
	.card {
		background-color: white;
		border-radius: 15px;
		box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
		overflow: hidden;
		height: 100%;
		display: flex;
		flex-direction: column;
	}

	.card-header {
		background-color: var(--dotnet-light);
		padding: 15px 20px;
		border-bottom: 1px solid var(--dotnet-border);
	}

		.card-header h2 {
			margin: 0;
			color: var(--dotnet-secondary);
			font-size: 20px;
			font-weight: 600;
		}

	.card-info {
		margin: 5px 0 0 0;
		color: #666;
		font-size: 14px;
		font-style: italic;
	}

	.card-body {
		padding: 20px;
		flex-grow: 1;
		display: flex;
		flex-direction: column;
	}

	/* Cart Grid */
	.cart-grid {
		border-radius: 8px;
		overflow: hidden;
		flex-grow: 1;
	}

		.cart-grid ::deep .e-grid .e-gridheader,
		.cart-grid ::deep .e-grid .e-gridheader {
			padding: 0;
			border-top: none;
		}

		.cart-grid ::deep .e-grid .e-rowcell {
			padding: 6px 8px;
			height: 36px;
		}

		.cart-grid ::deep .e-grid .e-headercell {
			padding: 8px 8px;
			height: 40px;
		}

		.cart-grid ::deep .e-grid .e-pager {
			padding: 4px;
		}

	/* Supplier Details */
	.supplier-details {
		background-color: var(--dotnet-light);
		border-radius: 8px;
		padding: 15px;
		margin-top: 10px;
	}

	.detail-row {
		display: flex;
		margin-bottom: 8px;
		font-size: 14px;
	}

	.detail-label {
		font-weight: 600;
		min-width: 80px;
		color: var(--dotnet-secondary);
	}

	.detail-value {
		color: var(--dotnet-dark);
	}

	/* Forms */
	.form-grid {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 15px;
	}

	.form-group {
		margin-bottom: 15px;
	}

	.full-width {
		grid-column: 1 / -1;
	}

	label {
		display: block;
		margin-bottom: 8px;
		font-weight: 500;
		color: var(--dotnet-dark);
	}

	.form-control {
		width: 100%;
		border-radius: 6px;
	}

	/* Button Styling */
	.save-button-dialog {
		background-color: var(--dotnet-primary);
		color: white;
		padding: 10px 20px;
		border-radius: 8px;
		font-weight: 600;
		transition: all 0.2s ease;
	}

		.save-button-dialog:hover {
			background-color: #4311a8;
		}

	/* Remove Button Styling */
	.remove-button {
		background-color: #f44336;
		color: white;
		border: none;
		transition: all 0.2s ease;
	}

		.remove-button:hover {
			background-color: #d32f2f;
		}

	/* Dialog Styling */
	.dialog-header {
		font-size: 20px;
		font-weight: 600;
		color: var(--dotnet-secondary);
		display: flex;
		align-items: center;
		gap: 8px;
	}

	.material-name {
		color: var(--dotnet-primary);
		font-weight: 700;
	}

	.dialog-content {
		padding: 20px;
	}

	.summary-section {
		margin-bottom: 20px;
		border: 1px solid var(--dotnet-border);
		border-radius: 8px;
		padding: 15px;
		background-color: var(--dotnet-light);
	}

	.tab-content {
		padding: 20px 10px;
	}

	.form-row {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 20px;
		margin-bottom: 15px;
	}

	/* Tax Tab Styling */
	.tax-grid {
		display: flex;
		flex-direction: column;
		gap: 15px;
	}

	.tax-row {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 20px;
	}

	.tax-column {
		display: flex;
		flex-direction: column;
	}

	.tab-summary {
		margin-top: 25px;
		background-color: var(--dotnet-light);
		border-radius: 8px;
		padding: 15px;
	}

	.tab-summary-title {
		font-weight: 600;
		color: var(--dotnet-secondary);
		margin-bottom: 10px;
		font-size: 16px;
	}

	.tab-summary-content {
		background-color: white;
		border-radius: 6px;
		padding: 12px;
		box-shadow: 0 2px 5px rgba(0,0,0,0.05);
	}

	.summary-item {
		display: flex;
		justify-content: space-between;
		padding: 8px 0;
	}

	.summary-label {
		font-weight: 500;
		color: var(--dotnet-dark);
	}

	.summary-value {
		font-weight: 600;
		color: var(--dotnet-secondary);
	}

	.summary-divider {
		height: 1px;
		background-color: var(--dotnet-border);
		margin: 8px 0;
	}

	.final-total {
		font-size: 18px;
		font-weight: 700;
		margin-top: 8px;
	}

		.final-total .summary-value {
			color: var(--dotnet-primary);
		}

	/* Currency Display */
	.readonly-currency {
		padding: 8px 12px;
		border: 1px solid #ccc;
		border-radius: 6px;
		background-color: var(--dotnet-light);
		font-weight: 500;
		color: var(--dotnet-secondary);
	}

	/* Dialog Footer */
	.dialog-footer {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 15px 20px;
		background-color: var(--dotnet-light);
		border-top: 1px solid var(--dotnet-border);
	}

	.footer-total {
		display: flex;
		align-items: center;
		gap: 10px;
	}

	.footer-total-label {
		font-weight: 600;
		font-size: 18px;
		color: var(--dotnet-secondary);
	}

	.footer-total-value {
		font-weight: 700;
		font-size: 20px;
		color: var(--dotnet-primary);
	}

	.footer-buttons {
		display: flex;
		gap: 10px;
	}

	/* Dialog buttons */
	.dialog-button {
		border-radius: 6px;
		padding: 8px 16px;
		height: 38px;
		display: flex;
		align-items: center;
		justify-content: center;
		font-weight: 500;
	}

	/* Summary rows */
	.summary-row {
		display: flex;
		justify-content: space-between;
		padding: 10px 0;
		border-bottom: 1px solid var(--dotnet-border);
	}

	.total-row {
		border-bottom: none;
		font-weight: 700;
		font-size: 18px;
		margin-top: 10px;
		padding-top: 15px;
		border-top: 2px solid var(--dotnet-border);
	}

	.total-amount {
		color: var(--dotnet-secondary);
	}

	.amount {
		font-weight: 500;
	}

	/* Material Summary Panel */
	.material-summary-panel {
		background-color: var(--dotnet-light);
		border-radius: 8px;
		padding: 15px;
		margin-bottom: 15px;
		border-bottom: 1px solid var(--dotnet-border);
	}

	.summary-highlights {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		gap: 10px;
	}

	.highlight-item {
		flex: 1;
		min-width: 100px;
		text-align: center;
		padding: 8px;
		border-radius: 6px;
		background-color: white;
		box-shadow: 0 2px 5px rgba(0,0,0,0.05);
	}

	.highlight-label {
		font-size: 12px;
		color: #666;
		margin-bottom: 5px;
	}

	.highlight-value {
		font-weight: 600;
		color: var(--dotnet-secondary);
		font-size: 16px;
	}

	.highlight-item.final {
		background-color: var(--dotnet-primary);
	}

		.highlight-item.final .highlight-label,
		.highlight-item.final .highlight-value {
			color: white;
		}

	/* Material Tab Styling */
	.material-tab {
		width: 100%;
		height: 100%;
	}

	/* Footer */
	.dashboard-footer {
		margin-top: auto;
		text-align: center;
		padding: 20px;
		color: #666;
		font-size: 14px;
	}

	.footer-link {
		color: var(--dotnet-primary);
		text-decoration: none;
		font-weight: 600;
		transition: color 0.2s ease;
	}

		.footer-link:hover {
			color: var(--dotnet-secondary);
			text-decoration: underline;
		}

	/* Loading Animation */
	.loader-container {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		height: 100vh;
	}

	.circular-dots-loader {
		position: relative;
		width: 60px;
		height: 60px;
		margin-bottom: 15px;
	}

		.circular-dots-loader .dot {
			position: absolute;
			width: 12px;
			height: 12px;
			border-radius: 50%;
			animation: rotate 1.5s infinite linear;
		}

		.circular-dots-loader .dot-1 {
			background-color: var(--dotnet-primary);
			animation-delay: 0s;
		}

		.circular-dots-loader .dot-2 {
			background-color: var(--dotnet-accent);
			animation-delay: -0.5s;
		}

		.circular-dots-loader .dot-3 {
			background-color: var(--dotnet-secondary);
			animation-delay: -1s;
		}

	.loading-text {
		color: var(--dotnet-dark);
		font-size: 16px;
		margin-top: 10px;
	}

	/* Print Button Styling */
	.print-button-dialog {
		background-color: #17a2b8;
		color: white;
		padding: 10px 20px;
		border-radius: 8px;
		font-weight: 600;
		transition: all 0.2s ease;
		display: flex;
		align-items: center;
		justify-content: center;
	}

		.print-button-dialog:hover {
			background-color: #138496;
			transform: translateY(-2px);
			box-shadow: 0 4px 12px rgba(23, 162, 184, 0.3);
		}

	.print-icon {
		margin-right: 6px;
		font-size: 18px;
	}

	/* Animations */
	@@keyframes rotate {
		0% {
			transform: rotate(0deg) translate(-24px) rotate(0deg);
		}

		100% {
			transform: rotate(360deg) translate(-24px) rotate(-360deg);
		}
	}

	/* Responsive Design */
	@@media (max-width: 992px) {
		.main-content {
			grid-template-columns: 1fr;
		}

		.action-buttons {
			flex-direction: row;
		}

		.action-button {
			flex-basis: calc(50% - 10px);
		}
	}

	@@media (max-width: 768px) {
		.page-header {
			flex-direction: column;
			gap: 15px;
			align-items: flex-start;
		}

		.form-row {
			grid-template-columns: 1fr;
		}

		.tax-row {
			grid-template-columns: 1fr;
			gap: 15px;
		}

		.action-button {
			flex-basis: 100%;
		}

		.summary-highlights {
			flex-direction: column;
		}

		.highlight-item {
			width: 100%;
		}
	}

	/* Toast Styling */
	::deep .e-toast-container {
		z-index: 1000;
	}

		::deep .e-toast-container .e-toast {
			border: 0;
			border-radius: 8px;
			box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
		}

	/* Success Toast */
	::deep .e-toast-success {
		background-color: #ebf7ee;
		border-left: 4px solid #4CAF50;
		color: #2E7D32;
	}

		::deep .e-toast-success .e-toast-title {
			color: #2E7D32;
			font-weight: 700;
		}

		::deep .e-toast-success .e-toast-content {
			color: #2E7D32;
		}

		::deep .e-toast-success .e-toast-close-icon {
			color: #2E7D32;
		}

		::deep .e-toast-success::before {
			content: "✓";
			font-size: 18px;
			font-weight: bold;
			position: absolute;
			left: 15px;
			top: 50%;
			transform: translateY(-50%);
		}

	/* Error Toast */
	::deep .e-toast-danger {
		background-color: #fdeeee;
		border-left: 4px solid #F44336;
		color: #C62828;
	}

		::deep .e-toast-danger .e-toast-title {
			color: #C62828;
			font-weight: 700;
		}

		::deep .e-toast-danger .e-toast-content {
			color: #C62828;
		}

		::deep .e-toast-danger .e-toast-close-icon {
			color: #C62828;
		}

		::deep .e-toast-danger::before {
			content: "⚠";
			font-size: 18px;
			font-weight: bold;
			position: absolute;
			left: 15px;
			top: 50%;
			transform: translateY(-50%);
		}

	/* Toast Animation */
	::deep .e-toast-container .e-toast {
		padding: 10px 10px 10px 40px;
		position: relative;
		animation-fill-mode: both;
	}

	/* Focus styles for better keyboard navigation */
	.purchase-container:focus {
		outline: 2px solid var(--dotnet-primary);
		outline-offset: 2px;
	}

	/* Enhanced grid row hover and selection for cart grid */
	.cart-grid ::deep .e-grid .e-row:hover {
		background-color: rgba(81, 43, 212, 0.1);
	}

	.cart-grid ::deep .e-grid .e-rowselect {
		background-color: var(--dotnet-primary);
		color: white;
	}
</style>